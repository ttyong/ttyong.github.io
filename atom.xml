<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>田勇的博客</title>
  
  <subtitle>比你优秀的人都努力，有什么理由不努力！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tianyong.fun/"/>
  <updated>2020-05-01T06:31:17.857Z</updated>
  <id>http://tianyong.fun/</id>
  
  <author>
    <name>TTYONG</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vmware安装tools</title>
    <link href="http://tianyong.fun/vmware%E5%AE%89%E8%A3%85tools.html"/>
    <id>http://tianyong.fun/vmware%E5%AE%89%E8%A3%85tools.html</id>
    <published>2020-04-28T02:39:58.000Z</published>
    <updated>2020-05-01T06:31:17.857Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="安装vmware-tools"><a href="#安装vmware-tools" class="headerlink" title="安装vmware tools"></a>安装vmware tools</h2><h3 id="选择Linux-iso"><a href="#选择Linux-iso" class="headerlink" title="选择Linux.iso"></a>选择Linux.iso</h3><p><em>关闭vmware重新打开，编辑虚拟系统设置-&gt;CD/DVD-&gt;浏览-&gt;选择linux.iso(在vmware的安装路径下，可以复制到虚拟系统镜像文件iso处-&gt;确定)</em></p><p><a href="https://imgchr.com/i/J4YiTO" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/28/J4YiTO.md.png" alt="J4YiTO.png" border="0"></a></p><h3 id="安装Tools"><a href="#安装Tools" class="headerlink" title="安装Tools"></a>安装Tools</h3><p><em>打开虚拟系统-&gt;桌面-&gt;左侧导航栏的CD/DVD-&gt;复制里面的tools压缩包到桌面-&gt;右键选择extract here-&gt;打开解压后文件-&gt;shift + 右键-&gt;open terminal -&gt; sudo ./vmware-install.pl-&gt;根据提示成功安装</em></p><p><a href="https://imgchr.com/i/J4tgPg" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/28/J4tgPg.md.png" alt="J4tgPg.md.png" border="0"></a></p><p><a href="https://imgchr.com/i/J4tR2j" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/28/J4tR2j.md.png" alt="J4tR2j.md.png" border="0"></a></p><p><a href="https://imgchr.com/i/J4t2GQ" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/28/J4t2GQ.md.png" alt="J4t2GQ.md.png" border="0"></a></p><h3 id><a href="#" class="headerlink" title></a></h3><hr><blockquote><p>随意春芳歇，王孙自可留。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="vmware" scheme="http://tianyong.fun/categories/vmware/"/>
    
    
      <category term="vmware" scheme="http://tianyong.fun/tags/vmware/"/>
    
      <category term="tools" scheme="http://tianyong.fun/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>数值分析-方程组</title>
    <link href="http://tianyong.fun/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90-%E6%96%B9%E7%A8%8B%E7%BB%84.html"/>
    <id>http://tianyong.fun/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90-%E6%96%B9%E7%A8%8B%E7%BB%84.html</id>
    <published>2020-04-26T03:13:22.000Z</published>
    <updated>2020-04-29T04:23:04.196Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="方程组"><a href="#方程组" class="headerlink" title="方程组"></a>方程组</h1><h2 id="高斯消去法"><a href="#高斯消去法" class="headerlink" title="高斯消去法"></a>高斯消去法</h2><p><em>难于求解或求高精度的解</em></p><h3 id="朴素的高斯消去法"><a href="#朴素的高斯消去法" class="headerlink" title="朴素的高斯消去法"></a>朴素的高斯消去法</h3><p><strong>主元</strong>：主对角线上的元素</p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><h5 id="消去步骤"><a href="#消去步骤" class="headerlink" title="消去步骤"></a>消去步骤</h5><img src="https://s1.ax1x.com/2020/04/26/JcgErR.png" alt="JcgErR.png" border="0"><h5 id="回代或向后求解"><a href="#回代或向后求解" class="headerlink" title="回代或向后求解"></a>回代或向后求解</h5><img src="https://s1.ax1x.com/2020/04/26/JcRwuj.png" alt="JcRwuj.png" border="0"><h4 id="操作次数"><a href="#操作次数" class="headerlink" title="操作次数"></a>操作次数</h4><p><em>对消去步骤和回代步骤的计算次数进行统计</em></p><p><em>把第一列转化为0，需要(2n+1)(n-1)次计算：</em></p><p>（1+n+n)(n-1)</p><img src="https://s1.ax1x.com/2020/04/26/JcgErR.png" alt="JcgErR.png" border="0"><h4 id="高斯消去法中消去步骤的操作次数"><a href="#高斯消去法中消去步骤的操作次数" class="headerlink" title="高斯消去法中消去步骤的操作次数"></a>高斯消去法中消去步骤的操作次数</h4><p>n个方程n个未知数的消去计算，可以在2/3n^3+1/2n^2-7/6n次操作后完成</p><h5 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h5><p>O(n^3)</p><h4 id="高斯消去法中回代步骤的操作次数"><a href="#高斯消去法中回代步骤的操作次数" class="headerlink" title="高斯消去法中回代步骤的操作次数"></a>高斯消去法中回代步骤的操作次数</h4><h2 id="高斯主元素消去法"><a href="#高斯主元素消去法" class="headerlink" title="高斯主元素消去法"></a>高斯主元素消去法</h2><p><em>由高斯消去法知道在消元过程中可能出现的情况主元素为0，这时消去法将无法进行；即使主元素但很小时，用其作除数，会导致其他元素数量级的严重增长和舍入误差的扩散，最后也使得计算解不可靠</em></p><h2 id="LU分解"><a href="#LU分解" class="headerlink" title="LU分解"></a>LU分解</h2><h3 id="法一"><a href="#法一" class="headerlink" title="法一"></a>法一</h3><p><em>在高斯消去法的基础上把0的位置写上倍数</em></p><p><a href="https://imgchr.com/i/JorlBF" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/29/JorlBF.md.png" alt="JorlBF.png" border="0"></a></p><h3 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h3><p><code>Amn = Lm1U1n + Lm2U2n + ...+ Umn</code></p><p><a href="https://imgchr.com/i/JorhDS" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/29/JorhDS.md.jpg" alt="JorhDS.md.jpg" border="0"></a><br><a href="https://imgchr.com/i/Jorfu8" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/29/Jorfu8.md.jpg" alt="Jorfu8.md.jpg" border="0"></a></p><h3 id="使用LU分解回代"><a href="#使用LU分解回代" class="headerlink" title="使用LU分解回代"></a>使用LU分解回代</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Ax &#x3D; b</span><br><span class="line">LUx &#x3D; b</span><br><span class="line">Ly &#x3D; b 法二可以直接最初把b也写上，最后b这一列就是y</span><br><span class="line">Ux &#x3D; y</span><br><span class="line">求出x</span><br></pre></td></tr></table></figure><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>计算机网络-第四章</title>
    <link href="http://tianyong.fun/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%AC%AC%E5%9B%9B%E7%AB%A0.html"/>
    <id>http://tianyong.fun/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%AC%AC%E5%9B%9B%E7%AB%A0.html</id>
    <published>2020-04-26T01:52:08.000Z</published>
    <updated>2020-04-28T10:32:35.780Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h1><p><em>在计算机网络领域，网络层应该向运输层提供怎样的服务（“面向连接”还是“无连接”）曾引起了长期的争论。<br>争论焦点的实质就是：在计算机通信中，可靠交付应当由谁来负责？是网络还是端系统？</em></p><h2 id="网络层提供的两种服务"><a href="#网络层提供的两种服务" class="headerlink" title="网络层提供的两种服务"></a>网络层提供的两种服务</h2><h3 id="虚电路服务"><a href="#虚电路服务" class="headerlink" title="虚电路服务"></a>虚电路服务</h3><p><em>让网络负责可靠交付</em></p><p><em>使用面向连接的通信方式</em></p><p><em>通信之前先建立虚电路 (Virtual Circuit)，以保证双方通信所需的一切网络资源</em></p><p><em>H1 发送给 H2 的所有分组都沿着同一条虚电路传送</em></p><p><strong>分组，存储转发，虚拟连接</strong></p><h3 id="数据报服务"><a href="#数据报服务" class="headerlink" title="数据报服务"></a>数据报服务</h3><p><em>网络层向上只提供<strong>简单灵活的、无连接的、尽最大努力交付</strong>的数据报服务</em></p><p><em>网络层不提供服务质量的承诺</em></p><h4 id="尽最大努力交付"><a href="#尽最大努力交付" class="headerlink" title="尽最大努力交付"></a>尽最大努力交付</h4><p><em>由于传输网络不提供端到端的可靠传输服务，这就使网络中的路由器可以做得比较简单，而且价格低廉</em></p><p><em>如果主机（即端系统）中的进程之间的<strong>通信需要是可靠的，那么就由网络的主机中的运输层</strong>负责可靠交付（包括差错处理、流量控制等）</em></p><p><em>采用这种设计思路的好处是：网络的造价大大降低，运行方式灵活，能够适应多种应用</em></p><p><em>H1 发送给 H2 的分组可能沿着不同路径传送</em></p><h3 id="虚电路服务与数据报服务的对比"><a href="#虚电路服务与数据报服务的对比" class="headerlink" title="虚电路服务与数据报服务的对比"></a>虚电路服务与数据报服务的对比</h3><p><a href="https://imgchr.com/i/JRyK1g" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/27/JRyK1g.md.png" alt="JRyK1g.png" border="0"></a></p><h2 id="网际协议-IP"><a href="#网际协议-IP" class="headerlink" title="网际协议 IP"></a>网际协议 IP</h2><p><em>网际协议 IP 是 TCP/IP 体系中两个最主要的协议之一</em></p><p>与 IP 协议配套使用的还有三个协议：</p><ul><li>地址解析协议 ARP<pre><code>(Address Resolution Protocol)</code></pre></li><li>网际控制报文协议 ICMP<br>   (Internet Control Message Protocol)</li><li>网际组管理协议 IGMP<br>   (Internet Group Management Protocol)</li></ul><p><a href="https://imgchr.com/i/JR6GKH" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/27/JR6GKH.png" alt="JR6GKH.png" border="0"></a></p><h3 id="虚拟互连网络"><a href="#虚拟互连网络" class="headerlink" title="虚拟互连网络"></a>虚拟互连网络</h3><p>将网络互相连接起来要使用一些中间设备。<br>中间设备又称为<strong>中间系统或中继 (relay)系统</strong>。<br>有以下五种不同的中间设备：</p><ul><li>物理层中继系统：转发器 (repeater)。 </li><li>数据链路层中继系统：网桥 或 桥接器 (bridge)。</li><li>网络层中继系统：路由器 (router)。</li><li>网桥和路由器的混合物：桥路器 (brouter)。</li><li>网络层以上的中继系统：网关 (gateway)。</li></ul><h4 id="网络互连使用路由器"><a href="#网络互连使用路由器" class="headerlink" title="网络互连使用路由器"></a>网络互连使用路由器</h4><p><em>当中继系统是转发器或网桥时，一般并不称之为网络互连，因为这仅仅是把一个网络扩大了，而这仍然是一个网络。<br>网关由于比较复杂，目前使用得较少。<br><strong>网络互连都是指用路由器进行网络互连和路由选择</strong>。<br>由于历史的原因，许多有关 TCP/IP 的文献将网络层使用的路由器称为网关</em></p><h4 id="互连网络与虚拟互连网络"><a href="#互连网络与虚拟互连网络" class="headerlink" title="互连网络与虚拟互连网络"></a>互连网络与虚拟互连网络</h4><img src="https://s1.ax1x.com/2020/04/27/JRcqXQ.png" alt="JRcqXQ.png" border="0"><h4 id="虚拟互连网络的意义"><a href="#虚拟互连网络的意义" class="headerlink" title="虚拟互连网络的意义"></a>虚拟互连网络的意义</h4><p><strong>所谓虚拟互连网络也就是逻辑互连网络，利用 IP 协议就可以使这些性能各异的网络从用户看起来好像是一个统一的网络</strong>。</p><p>使用 IP 协议的虚拟互连网络可简称为<strong>IP 网</strong></p><p><strong>使用虚拟互连网络的好处是</strong>：当互联网上的主机进行通信时，就好像在一个网络上通信一样，而看不见互连的各具体的网络异构细节</p><p>如果在这种覆盖全球的 IP 网的上层使用 TCP 协议，那么就是现在的互联网 (Internet)</p><h3 id="分类的-IP-地址"><a href="#分类的-IP-地址" class="headerlink" title="分类的 IP 地址"></a>分类的 IP 地址</h3><h4 id="IP-地址及其表示方法"><a href="#IP-地址及其表示方法" class="headerlink" title="IP 地址及其表示方法"></a>IP 地址及其表示方法</h4><p><em>IP 地址就是给每个连接在互联网上的主机（或路由器）分配一个在全世界范围是<strong>唯一的32 位</strong> 的标识符</em></p><p><em>IP 地址现在由<strong>互联网名字和数字分配机构</strong>ICANN (Internet Corporation for Assigned Names and Numbers)进行分配</em></p><h4 id="IP-地址的编址方法"><a href="#IP-地址的编址方法" class="headerlink" title="IP 地址的编址方法"></a>IP 地址的编址方法</h4><ul><li>分类IP 地址。这是最基本的编址方法，在 1981 年就通过了相应的标准协议。</li><li>子网的划分。这是对最基本的编址方法的改进，其标准[RFC 950] 在 1985 年通过。</li><li>构成超网。这是比较新的无分类编址方法。1993 年提出后很快就得到推广应用</li></ul><h5 id="分类-IP-地址"><a href="#分类-IP-地址" class="headerlink" title="分类 IP 地址"></a>分类 IP 地址</h5><p>每一类地址都由两个固定长度的字段组成，其中一个字段是<strong>网络号 net-id</strong>，它标志主机（或路由器）所连接到的网络，而另一个字段则是<strong>主机号 host-id</strong>，它标志该主机（或路由器）</p><img src="https://s1.ax1x.com/2020/04/27/JR24Rf.png" alt="JR24Rf.png" border="0"><p><em>总位数是确定的，而网络号和主机号不是确定长度</em></p><p><a href="https://imgchr.com/i/JRo5rV" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/27/JRo5rV.png" alt="JRo5rV.png" border="0"></a></p><p><em>主机号有多少位就有2^(n-m)-2个主机，网络号就有2^(32-n)-2个网段</em></p><h3 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h3><p><a href="https://imgchr.com/i/JRoxr6" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/27/JRoxr6.png" alt="JRoxr6.png" border="0"></a><br><a href="https://imgchr.com/i/JRovKx" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/27/JRovKx.png" alt="JRovKx.png" border="0"></a><br><a href="https://imgchr.com/i/JRoXx1" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/27/JRoXx1.png" alt="JRoXx1.png" border="0"></a></p><h3 id="IP-地址与硬件地址"><a href="#IP-地址与硬件地址" class="headerlink" title="IP 地址与硬件地址"></a>IP 地址与硬件地址</h3><p><em>IP 地址与硬件地址是不同的地址</em></p><p>从层次的角度看：</p><ul><li>硬件地址（或物理地址）是数据链路层和物理层使用的地址</li><li>IP 地址是网络层和以上各层使用的地址，是一种逻辑地址（称 IP 地址是逻辑地址是因为 IP 地址是用软件实现的）</li></ul><p><a href="https://imgchr.com/i/J5Ni9g" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/28/J5Ni9g.md.png" alt="J5Ni9g.png" border="0"></a></p><p><strong>对应abce类IP地址的默认子网掩码是把网络号全部写为1，主机号为0</strong></p><h3 id="地址解析协议-ARP"><a href="#地址解析协议-ARP" class="headerlink" title="地址解析协议 ARP"></a>地址解析协议 ARP</h3><p>ARP IP-&gt;MAC</p><p>RARP MAC-&gt;IP</p><p>TTL:地址映射有效时间</p><p>发送广播：前面全为1，后面全为1</p><p>发送ARP为广播传输，响应为1对1</p><p><a href="https://imgchr.com/i/J5y8JI" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/28/J5y8JI.md.png" alt="J5y8JI.png" border="0"></a></p><p>以太网1500字节  数据1480</p><p>生存时间：防止无线传输</p><h3 id="IP-数据报的格式"><a href="#IP-数据报的格式" class="headerlink" title="IP 数据报的格式"></a>IP 数据报的格式</h3><p><a href="https://imgchr.com/i/J5HxAI" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/28/J5HxAI.md.png" alt="J5HxAI.png" border="0"></a></p><p><em>IP数据报=首部+数据部分</em></p><p><em>首部=固定部分+可变部分</em></p><p><em>固定部分=20字节，是IP数据报必须有的部分；可选字段长度可变</em></p><p><strong>版本</strong>：<em>所占位数代表IP协议版本</em></p><p><strong>首部长度</strong>：<em>占四个字节，最大15个单位，单位为字节；所以首部长度最多60个字节</em></p><p><strong>总长度</strong>：<em>16位；单位为字节；数据报最长长度为2^16 - 1=65535字节</em></p><p><strong>总长度必须不超过最大传送单元 MTU（我们规定不能超过1500字节）</strong></p><p><strong>标识</strong>：<em>同一数据包的切片相同</em></p><p><strong>标志</strong>：<em>占3位；目前只有前两位有意义。<br>标志字段的最低位是 <strong>MF</strong> (More Fragment)。MF =1 表示后面“还有分片”。MF =0 表示最后一个分片。<br>标志字段中间的一位是 <strong>DF</strong> (Don’t Fragment) 。只有当 DF = 0 时才允许分片</em></p><p><strong>片偏移</strong>：<em>占13 位，指出：较长的分组在分片后<br>某片在原分组中的相对位置。片偏移以 8 个字节为偏移单位</em></p><p><strong>生存时间</strong>：<em>生存时间——占8 位，记为 TTL (Time To Live)，<br>指示数据报在网络中可通过的路由器数的最大值</em></p><h4 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h4><p><a href="https://imgchr.com/i/J5OPgK" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/28/J5OPgK.md.png" alt="J5OPgK.md.png" border="0"></a><br><a href="https://imgchr.com/i/J5OC36" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/28/J5OC36.md.png" alt="J5OC36.md.png" border="0"></a><br><a href="https://imgchr.com/i/J5O99x" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/28/J5O99x.md.png" alt="J5O99x.md.png" border="0"></a></p><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>网站点击流数据分析</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%A1%8C%E4%B8%9A%E9%83%A8%E7%BD%B2-%E7%BD%91%E7%AB%99%E7%82%B9%E5%87%BB%E6%B5%81%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%A1%8C%E4%B8%9A%E9%83%A8%E7%BD%B2-%E7%BD%91%E7%AB%99%E7%82%B9%E5%87%BB%E6%B5%81%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90.html</id>
    <published>2020-04-23T01:34:25.000Z</published>
    <updated>2020-04-23T02:22:00.144Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="网站点击流数据分析项目业务背景"><a href="#网站点击流数据分析项目业务背景" class="headerlink" title="网站点击流数据分析项目业务背景"></a>网站点击流数据分析项目业务背景</h1><h2 id="什么是点击流数据"><a href="#什么是点击流数据" class="headerlink" title="什么是点击流数据"></a>什么是点击流数据</h2><h3 id="WEB访问日志"><a href="#WEB访问日志" class="headerlink" title="WEB访问日志"></a>WEB访问日志</h3><p><strong>即指用户访问网站时的所有访问、浏览、点击行为数据</strong></p><h4 id="日志的生成渠道："><a href="#日志的生成渠道：" class="headerlink" title="日志的生成渠道："></a>日志的生成渠道：</h4><ul><li><p>是网站的web服务器所记录的web访问日志；</p></li><li><p>是通过在页面嵌入自定义的js代码来获取用户的所有访问行为（比如鼠标悬停的位置，点击的页面组件等），然后通过ajax请求到后台记录日志；这种方式所能采集的信息最全面；</p></li><li><p>通过在页面上埋点1像素的图片，将相关页面访问信息请求到后台记录日志；</p></li></ul><h4 id="日志数据内容详述"><a href="#日志数据内容详述" class="headerlink" title="日志数据内容详述"></a>日志数据内容详述</h4><p>在实际操作中，有以下几个方面的数据可以被采集：</p><ul><li><p><strong>访客的系统属性特征</strong>。比如所采用的操作系统、浏览器、域名和访问速度等。</p></li><li><p><strong>访问特征</strong>。包括停留时间、点击的URL等。</p></li><li><p><strong>来源特征</strong>。包括网络内容信息类型、内容分类和来访URL等。</p></li><li><p><strong>产品特征</strong>。包括所访问的产品编号、产品类别、产品颜色、产品价格、产品利润、产品数量和特价等级等</p></li></ul><h3 id="点击流数据模型"><a href="#点击流数据模型" class="headerlink" title="点击流数据模型"></a>点击流数据模型</h3><p><code>点击流这个概念更注重用户浏览网站的整个流程，网站日志中记录的用户点击就像是图上的“点”，而点击流更像是将这些“点”串起来形成的“线”</code></p><h4 id="点击流模型生成"><a href="#点击流模型生成" class="headerlink" title="点击流模型生成"></a>点击流模型生成</h4><p><em>点击流数据在具体操作上是由散点状的点击日志数据梳理所得，从而，点击数据在数据建模时应该存在两张模型表（Pageviews和visits)</em></p><img src="https://s1.ax1x.com/2020/04/23/JaZcUU.png" alt="JaZcUU.png" border="0"><p><em>这就是点击流模型。当WEB日志转化成点击流数据的时候，很多网站分析度量的计算变得简单了，这就是点击流的“魔力”所在。基于点击流数据我们可以统计出许多常见的网站分析度量</em></p><h2 id="网站流量数据分析的意义"><a href="#网站流量数据分析的意义" class="headerlink" title="网站流量数据分析的意义"></a>网站流量数据分析的意义</h2><p><em>网站流量统计分析，可以帮助网站管理员、运营人员、推广人员等实时获取网站流量信息，并从流量来源、网站内容、网站访客特性等多方面提供网站分析的数据依据。从而帮助提高网站流量，提升网站用户体验，让访客更多的沉淀下来变成会员或客户，通过更少的投入获取最大化的收入</em></p><p><strong>终极目标是：改善网站(电商、社交、电影、小说)的运营，获取更高投资回报率（ROI）</strong></p><h3 id="技术上"><a href="#技术上" class="headerlink" title="技术上"></a>技术上</h3><ul><li><p>辅助改进网络的拓扑设计，提高性能</p></li><li><p>在有高度相关性的节点之间安排快速有效的访问路径</p></li><li><p>帮助企业更好地设计网站主页和安排网页内容</p></li></ul><h3 id="业务上"><a href="#业务上" class="headerlink" title="业务上"></a>业务上</h3><ul><li><p>帮助企业改善市场营销决策，如把广告放在适当的Web页面上。</p></li><li><p>优化页面及业务流程设计，提高流量转化率。</p></li><li><p>帮助企业更好地根据客户的兴趣来安排内容。</p></li><li><p>帮助企业对客户群进行细分，针对不同客户制定个性化的促销策略等</p></li></ul><h2 id="如何进行网站流量分析"><a href="#如何进行网站流量分析" class="headerlink" title="如何进行网站流量分析"></a>如何进行网站流量分析</h2><p><em>流量分析整体来说是一个内涵非常丰富的体系，其整体过程是一个金字塔结构</em></p><h3 id="网站流量质量分析"><a href="#网站流量质量分析" class="headerlink" title="网站流量质量分析"></a>网站流量质量分析</h3><p><em>流量并不是越多越好，应该更加看重流量的质量，换句话来说就是流量可以为我们带来多少收入</em></p><img src="https://s1.ax1x.com/2020/04/23/JauesA.png" alt="JauesA.png" border="0"><h3 id="网站流量多维度细分"><a href="#网站流量多维度细分" class="headerlink" title="网站流量多维度细分"></a>网站流量多维度细分</h3><p><em>细分是指通过不同维度对指标进行分割，查看同一个指标在不同维度下的表现，进而找出有问题的那部分指标，对这部分指标进行优化</em></p><img src="https://s1.ax1x.com/2020/04/23/JauuZt.png" alt="JauuZt.png" border="0"><h3 id="网站内容及导航分析"><a href="#网站内容及导航分析" class="headerlink" title="网站内容及导航分析"></a>网站内容及导航分析</h3><p><em>对于所有网站来说，页面都可以被划分为三个类别: 导航页，功能页， 内容页</em></p><p><em>比如从内容导航分析中，以下两类行为就是网站运营者不希望看到的行为：</em></p><img src="https://s1.ax1x.com/2020/04/23/Jauli8.png" alt="Jauli8.png" border="0"><h3 id="网站转化及漏斗分析"><a href="#网站转化及漏斗分析" class="headerlink" title="网站转化及漏斗分析"></a>网站转化及漏斗分析</h3><p><em>所谓<strong>转化</strong>，即网站业务流程中的一个封闭渠道，引导用户按照流程最终实现业务目标（比如商品成交）；而<strong>漏斗模型</strong>则是指进入渠道的用户在各环节递进过程中逐渐流失的形象描述；</em></p><p><a href="https://imgchr.com/i/JaMg56" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/23/JaMg56.png" alt="JaMg56.png" border="0"></a><br><a href="https://imgchr.com/i/JaMcUx" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/23/JaMcUx.png" alt="JaMcUx.png" border="0"></a></p><hr><blockquote><p>世上所有的惊喜和好运，等于你的人品乘以你的努力。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据行业项目部署实战" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%A1%8C%E4%B8%9A%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="大数据行业项目部署实战" scheme="http://tianyong.fun/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%A1%8C%E4%B8%9A%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>hadoop实验课-hdfs</title>
    <link href="http://tianyong.fun/hadoop%E5%AE%9E%E9%AA%8C%E8%AF%BE-hdfs.html"/>
    <id>http://tianyong.fun/hadoop%E5%AE%9E%E9%AA%8C%E8%AF%BE-hdfs.html</id>
    <published>2020-04-21T02:03:34.000Z</published>
    <updated>2020-04-21T02:28:26.317Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="HDFS实验"><a href="#HDFS实验" class="headerlink" title="HDFS实验"></a>HDFS实验</h1><h2 id="通过Java-API操作HDFS"><a href="#通过Java-API操作HDFS" class="headerlink" title="通过Java API操作HDFS"></a>通过Java API操作HDFS</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="导入hdfs的jar包"><a href="#导入hdfs的jar包" class="headerlink" title="导入hdfs的jar包"></a>导入hdfs的jar包</h4><p>1.<em>将/usr/…/share/common下；/usr/…/share/common/lib下；/usr/…/share/hdfs/下的jar包导入到hadoop项目下的lib</em></p><p>2.<em>eclipse的项目单击右键build path-&gt;configure..-&gt;libraries-&gt;external jars</em></p><h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><h2 id="shell命令访问HDFS"><a href="#shell命令访问HDFS" class="headerlink" title="shell命令访问HDFS"></a>shell命令访问HDFS</h2><h3 id="管理命令"><a href="#管理命令" class="headerlink" title="管理命令"></a>管理命令</h3><a href="/hadoop%E5%B8%B8%E7%94%A8HDFS%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4.html" title="第三章 shell命令操作HDFS-常用HDFS管理命令">第三章 shell命令操作HDFS-常用HDFS管理命令</a><h3 id="操作命令"><a href="#操作命令" class="headerlink" title="操作命令"></a>操作命令</h3><a href="/hadoop%E5%B8%B8%E7%94%A8HDFS%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4.html" title="hadoop常用HDFS操作命令">hadoop常用HDFS操作命令</a><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hadoop" scheme="http://tianyong.fun/categories/Hadoop/"/>
    
    
      <category term="hdfs" scheme="http://tianyong.fun/tags/hdfs/"/>
    
      <category term="实验课" scheme="http://tianyong.fun/tags/%E5%AE%9E%E9%AA%8C%E8%AF%BE/"/>
    
  </entry>
  
  <entry>
    <title>java相关异常</title>
    <link href="http://tianyong.fun/java%E7%9B%B8%E5%85%B3%E5%BC%82%E5%B8%B8.html"/>
    <id>http://tianyong.fun/java%E7%9B%B8%E5%85%B3%E5%BC%82%E5%B8%B8.html</id>
    <published>2020-04-21T01:58:30.000Z</published>
    <updated>2020-04-21T02:03:48.422Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="在eclipse里创建java项目，里面没有src"><a href="#在eclipse里创建java项目，里面没有src" class="headerlink" title="在eclipse里创建java项目，里面没有src"></a>在eclipse里创建java项目，里面没有src</h2><p><em>创建项目时不要选择<strong>use project folder as root for sources and class files</strong>.</em></p><p>##</p><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="java" scheme="http://tianyong.fun/categories/java/"/>
    
    
      <category term="eclipse" scheme="http://tianyong.fun/tags/eclipse/"/>
    
      <category term="java" scheme="http://tianyong.fun/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>hadoop实验课-mapreduce</title>
    <link href="http://tianyong.fun/hadoop%E5%AE%9E%E9%AA%8C%E8%AF%BE-mapreduce.html"/>
    <id>http://tianyong.fun/hadoop%E5%AE%9E%E9%AA%8C%E8%AF%BE-mapreduce.html</id>
    <published>2020-04-21T01:33:00.000Z</published>
    <updated>2020-04-30T06:56:58.092Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="MapReduce实验"><a href="#MapReduce实验" class="headerlink" title="MapReduce实验"></a>MapReduce实验</h2><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h4 id="jar包导入"><a href="#jar包导入" class="headerlink" title="jar包导入"></a>jar包导入</h4><p><em>1.将mapreduce的jar包复制到eclipse的hadoop项目的lib里</em></p><p><em>/usr/hadoop/…/share/mapreduce/</em></p><p><em>/home/…/hadoop/lib/</em></p><p><em>2.打开eclipse，在项目上单击右键，build path -&gt; configure ..-&gt;libraries-&gt;add external jars</em></p><h3 id="编写wordcount的map-和reduce-函数"><a href="#编写wordcount的map-和reduce-函数" class="headerlink" title="编写wordcount的map()和reduce()函数"></a>编写wordcount的map()和reduce()函数</h3><h4 id="map"><a href="#map" class="headerlink" title="map()"></a>map()</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> sudo.edu.hadoop.mapreduce.wordCount;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.LongWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">wordCountMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">LongWritable</span>, <span class="title">Text</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">map</span><span class="params">(LongWritable key, Text value, Context context)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">String data = value.toString();</span><br><span class="line">String[] words = data.split(<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">for</span>(String w: words) &#123;</span><br><span class="line">context.write(<span class="keyword">new</span> Text(w), <span class="keyword">new</span> IntWritable(<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="reduce"><a href="#reduce" class="headerlink" title="reduce()"></a>reduce()</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> sudo.edu.hadoop.mapreduce.wordCount;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">wordCountReducer</span> <span class="keyword">extends</span> <span class="title">Reducer</span>&lt;<span class="title">Text</span>, <span class="title">IntWritable</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">reduce</span><span class="params">(Text k3, Iterable&lt;IntWritable&gt; v3,</span></span></span><br><span class="line"><span class="function"><span class="params">Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(IntWritable v : v3) &#123;</span><br><span class="line">total += v.get();</span><br><span class="line">&#125;</span><br><span class="line">context.write(k3, <span class="keyword">new</span> IntWritable(total));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="main"><a href="#main" class="headerlink" title="main()"></a>main()</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> sudo.edu.hadoop.mapreduce.wordCount;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">wordCountMain</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="comment">// </span></span><br><span class="line">Job job = Job.getInstance(<span class="keyword">new</span> Configuration());</span><br><span class="line">job.setJarByClass(wordCountMain<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">job.setMapperClass(wordCountMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">job.setMapOutputKeyClass(Text<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">job.setMapOutputValueClass(IntWritable<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">job.setReducerClass(wordCountReducer<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">job.setOutputKeyClass(Text<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">job.setOutputValueClass(IntWritable<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">FileInputFormat.setInputPaths(job, <span class="keyword">new</span> Path(args[<span class="number">0</span>]));</span><br><span class="line">FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> Path(args[<span class="number">1</span>]));</span><br><span class="line">job.waitForCompletion(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="各部门员工薪水总和"><a href="#各部门员工薪水总和" class="headerlink" title="各部门员工薪水总和"></a>各部门员工薪水总和</h3><hr><blockquote><p>人穷没入群，言轻莫劝人。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hadoop" scheme="http://tianyong.fun/categories/Hadoop/"/>
    
    
      <category term="实验课" scheme="http://tianyong.fun/tags/%E5%AE%9E%E9%AA%8C%E8%AF%BE/"/>
    
      <category term="mapreduce" scheme="http://tianyong.fun/tags/mapreduce/"/>
    
  </entry>
  
  <entry>
    <title>数值分析-牛顿法</title>
    <link href="http://tianyong.fun/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90-%E6%B1%82%E8%A7%A3%E6%96%B9%E7%A8%8B.html"/>
    <id>http://tianyong.fun/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90-%E6%B1%82%E8%A7%A3%E6%96%B9%E7%A8%8B.html</id>
    <published>2020-04-20T02:51:34.000Z</published>
    <updated>2020-04-26T03:13:30.086Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="二分法"><a href="#二分法" class="headerlink" title="二分法"></a>二分法</h2><h2 id="不动点迭代"><a href="#不动点迭代" class="headerlink" title="不动点迭代"></a>不动点迭代</h2><h2 id="牛顿法"><a href="#牛顿法" class="headerlink" title="牛顿法"></a>牛顿法</h2><img src="https://s1.ax1x.com/2020/04/26/J6OiVO.png" alt="J6OiVO.png" border="0"><h3 id="简化牛顿法"><a href="#简化牛顿法" class="headerlink" title="简化牛顿法"></a>简化牛顿法</h3><p><a href="https://imgchr.com/i/JQVzCD" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/20/JQVzCD.md.png" alt="JQVzCD.md.png" border="0"></a><br><a href="https://imgchr.com/i/JQVXE6" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/20/JQVXE6.md.png" alt="JQVXE6.md.png" border="0"></a><br><a href="https://imgchr.com/i/JQVv4O" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/20/JQVv4O.md.png" alt="JQVv4O.md.png" border="0"></a><br><a href="https://imgchr.com/i/JQVjUK" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/20/JQVjUK.md.png" alt="JQVjUK.md.png" border="0"></a><br><a href="https://imgchr.com/i/JQVLHx" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/20/JQVLHx.md.png" alt="JQVLHx.md.png" border="0"></a></p><h3 id="牛顿下山法"><a href="#牛顿下山法" class="headerlink" title="牛顿下山法"></a>牛顿下山法</h3><h3 id="重根情形"><a href="#重根情形" class="headerlink" title="重根情形"></a>重根情形</h3><h2 id="弦截法"><a href="#弦截法" class="headerlink" title="弦截法"></a>弦截法</h2><h3 id="单点弦截法"><a href="#单点弦截法" class="headerlink" title="单点弦截法"></a>单点弦截法</h3><h3 id="两点弦截法"><a href="#两点弦截法" class="headerlink" title="两点弦截法"></a>两点弦截法</h3><img src="https://s1.ax1x.com/2020/04/26/J6LDgI.png" alt="J6LDgI.png" border="0"><p><a href="https://blog.csdn.net/qq_40991687/article/details/102004533" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/qq_40991687/article/details/102004533</a></p><hr><blockquote><p>能够摄取必要营养的人要比吃得很多的人更健康，同样地，真正的学者往往不是读了很多书的人，而是读了有用的书的人。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数值分析" scheme="http://tianyong.fun/categories/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90/"/>
    
    
      <category term="牛顿法" scheme="http://tianyong.fun/tags/%E7%89%9B%E9%A1%BF%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Tkinter使用笔记</title>
    <link href="http://tianyong.fun/Tkinter%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0.html"/>
    <id>http://tianyong.fun/Tkinter%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0.html</id>
    <published>2020-04-16T13:37:19.000Z</published>
    <updated>2020-04-16T13:37:19.522Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>hadoop理论课-第五章Mapreduce</title>
    <link href="http://tianyong.fun/hadoop%E7%90%86%E8%AE%BA%E8%AF%BE-%E7%AC%AC%E4%BA%94%E7%AB%A0Mapreduce.html"/>
    <id>http://tianyong.fun/hadoop%E7%90%86%E8%AE%BA%E8%AF%BE-%E7%AC%AC%E4%BA%94%E7%AB%A0Mapreduce.html</id>
    <published>2020-04-13T08:13:35.000Z</published>
    <updated>2020-04-27T09:21:28.279Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="Mapreduce"><a href="#Mapreduce" class="headerlink" title="Mapreduce"></a>Mapreduce</h1><h2 id="MapReduce概述"><a href="#MapReduce概述" class="headerlink" title="MapReduce概述"></a>MapReduce概述</h2><h3 id="MapReduce是什么？"><a href="#MapReduce是什么？" class="headerlink" title="MapReduce是什么？"></a>MapReduce是什么？</h3><p><em>Mapreduce是一种简化并行计算的编程模型，用于进行大数据量的计算</em></p><p><a href="https://imgchr.com/i/GjRro8" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/GjRro8.md.png" alt="GjRro8.md.png" border="0"></a></p><h3 id="MapReduce设计思想"><a href="#MapReduce设计思想" class="headerlink" title="MapReduce设计思想"></a>MapReduce设计思想</h3><p><a href="https://imgchr.com/i/GjRDdf" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/GjRDdf.md.png" alt="GjRDdf.md.png" border="0"></a></p><h3 id="MapReduce特点"><a href="#MapReduce特点" class="headerlink" title="MapReduce特点"></a>MapReduce特点</h3><h4 id="易于编程"><a href="#易于编程" class="headerlink" title="易于编程"></a>易于编程</h4><h4 id="良好的扩展性"><a href="#良好的扩展性" class="headerlink" title="良好的扩展性"></a>良好的扩展性</h4><h4 id="高容错性"><a href="#高容错性" class="headerlink" title="高容错性"></a>高容错性</h4><h4 id="擅长对PB级以上海量数据进行离线处理"><a href="#擅长对PB级以上海量数据进行离线处理" class="headerlink" title="擅长对PB级以上海量数据进行离线处理"></a>擅长对PB级以上海量数据进行离线处理</h4><h3 id="MapReduce不擅长的场景"><a href="#MapReduce不擅长的场景" class="headerlink" title="MapReduce不擅长的场景"></a>MapReduce不擅长的场景</h3><h4 id="实时计算"><a href="#实时计算" class="headerlink" title="实时计算"></a>实时计算</h4><p><em>MapReduce无法像MySQL一样，在毫秒或秒级内返回结果</em></p><h4 id="流式计算"><a href="#流式计算" class="headerlink" title="流式计算"></a>流式计算</h4><p><em>流式计算的输入数据是动态的，而MapReduce的输入数据集是静态的，动态变化</em></p><h4 id="DAG-有向图-计算"><a href="#DAG-有向图-计算" class="headerlink" title="DAG(有向图)计算"></a>DAG(有向图)计算</h4><h2 id="MapReduce编程模型"><a href="#MapReduce编程模型" class="headerlink" title="MapReduce编程模型"></a>MapReduce编程模型</h2><h3 id="初识MapReduce模型"><a href="#初识MapReduce模型" class="headerlink" title="初识MapReduce模型"></a>初识MapReduce模型</h3><p><a href="https://imgchr.com/i/GjhcWD" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/GjhcWD.md.png" alt="GjhcWD.png" border="0"></a></p><p><a href="https://imgchr.com/i/GjhLlQ" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/GjhLlQ.md.png" alt="GjhLlQ.png" border="0"></a></p><p><a href="https://imgchr.com/i/Gj4f9U" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/Gj4f9U.md.png" alt="Gj4f9U.png" border="0"></a></p><p><em>MR原语:  相同的key为一组，调用一次reduce方法，迭代计算这一组数据</em></p><h3 id="MapReduce工作流程"><a href="#MapReduce工作流程" class="headerlink" title="MapReduce工作流程"></a>MapReduce工作流程</h3><p><a href="https://imgchr.com/i/Gj5Vgg" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/Gj5Vgg.md.png" alt="Gj5Vgg.png" border="0"></a></p><h3 id="MapReduce模型要点"><a href="#MapReduce模型要点" class="headerlink" title="MapReduce模型要点"></a>MapReduce模型要点</h3><p><a href="https://imgchr.com/i/Gj5cKH" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/Gj5cKH.md.png" alt="Gj5cKH.png" border="0"></a></p><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><h4 id="案例一"><a href="#案例一" class="headerlink" title="案例一"></a>案例一</h4><p><a href="https://imgchr.com/i/Gj7nzT" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/Gj7nzT.md.png" alt="Gj7nzT.png" border="0"></a></p><p><a href="https://imgchr.com/i/Gj72Sf" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/Gj72Sf.md.png" alt="Gj72Sf.png" border="0"></a></p><p><a href="https://imgchr.com/i/GjHgE9" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/GjHgE9.md.png" alt="GjHgE9.png" border="0"></a></p><p><a href="https://imgchr.com/i/Gjq4mD" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/Gjq4mD.md.png" alt="Gjq4mD.png" border="0"></a></p><p><a href="https://imgchr.com/i/GjvqL6" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/GjvqL6.md.png" alt="GjvqL6.png" border="0"></a></p><p><a href="https://imgchr.com/i/GjxUp9" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/GjxUp9.md.png" alt="GjxUp9.png" border="0"></a></p><h4 id="案例二"><a href="#案例二" class="headerlink" title="案例二"></a>案例二</h4><p><a href="https://imgchr.com/i/Gjzi9J" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/Gjzi9J.png" alt="Gjzi9J.png" border="0"></a><br><a href="https://imgchr.com/i/GjzCh4" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/GjzCh4.md.png" alt="GjzCh4.md.png" border="0"></a></p><p><a href="https://imgchr.com/i/GvSbyn" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/GvSbyn.md.png" alt="GvSbyn.md.png" border="0"></a><br><a href="https://imgchr.com/i/GvSqLq" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/GvSqLq.md.png" alt="GvSqLq.md.png" border="0"></a></p><h4 id="案例三"><a href="#案例三" class="headerlink" title="案例三"></a>案例三</h4><p><em>序列化和反序列化</em></p><p><a href="https://imgchr.com/i/Gvpr7V" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/Gvpr7V.md.png" alt="Gvpr7V.md.png" border="0"></a><br><a href="https://imgchr.com/i/GvpykT" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/GvpykT.md.png" alt="GvpykT.md.png" border="0"></a></p><p><a href="https://imgchr.com/i/Gv9oKs" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/Gv9oKs.md.png" alt="Gv9oKs.md.png" border="0"></a><br><a href="https://imgchr.com/i/Gv9Trn" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/Gv9Trn.md.png" alt="Gv9Trn.md.png" border="0"></a></p><p><a href="https://imgchr.com/i/GvCtMj" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/13/GvCtMj.md.png" alt="GvCtMj.png" border="0"></a></p><h2 id="MapReduce进阶"><a href="#MapReduce进阶" class="headerlink" title="MapReduce进阶"></a>MapReduce进阶</h2><h3 id="mapreduce的输入格式"><a href="#mapreduce的输入格式" class="headerlink" title="mapreduce的输入格式"></a>mapreduce的输入格式</h3><h4 id="物理分片"><a href="#物理分片" class="headerlink" title="物理分片"></a>物理分片</h4><p><em>分割会严格按照设定大小128m或字数分割，可能会造成不符合逻辑的分割</em></p><h4 id="逻辑分片"><a href="#逻辑分片" class="headerlink" title="逻辑分片"></a>逻辑分片</h4><h5 id="inputFormat提供一下两个功能："><a href="#inputFormat提供一下两个功能：" class="headerlink" title="inputFormat提供一下两个功能："></a>inputFormat提供一下两个功能：</h5><ul><li>数据切分，获得SplitInput（逻辑切片） ，FileInputFormat.getSplits()获取到。</li><li>为Mapper提供输入数据</li></ul><p><em>有多少个SplitInput，就有多少个Mapper<br>TextInputFormat 是默认InputFormat</em></p><img src="https://s1.ax1x.com/2020/04/26/JgmCzn.png" alt="JgmCzn.png" border="0"><p><em>getSplits 方法负责将一个大数据逻辑分成许多片，但每个分片只是一个逻辑上的定义，仅是提供了一个如何将数据分片的方法，并没有物理上的独立存储</em></p><p> <em>createRecordReader 方法返回一个 RecordReader 对象，实现了类似的迭代器功能，将某个InputSplit 解析成一个个 key/value 对</em></p><h5 id="定位记录边界"><a href="#定位记录边界" class="headerlink" title="定位记录边界"></a>定位记录边界</h5><p><em>为了能识别一条完整的记录，应该添加一些同步标示，如 TextInputFormat 的标示是换行符</em>  </p><h4 id="InputFormat-接口实现类"><a href="#InputFormat-接口实现类" class="headerlink" title="InputFormat 接口实现类"></a>InputFormat 接口实现类</h4><img src="https://s1.ax1x.com/2020/04/26/JgnVXt.png" alt="JgnVXt.png" border="0"><h3 id="mapreduce的输出格式"><a href="#mapreduce的输出格式" class="headerlink" title="mapreduce的输出格式"></a>mapreduce的输出格式</h3><h4 id="outputFormat接口"><a href="#outputFormat接口" class="headerlink" title="outputFormat接口"></a>outputFormat接口</h4><p><em>OutputFormat主要用于描述输出数据的格式，通过RecordWriter能够将用户提供的key/value对写入特定格式的文件中</em></p><p>（1）TextOutputFormt调用toString()方法把它们转换为字符串<br>（2）NullWritable来省略输出的key或value</p><h4 id="outputFormat接口实现类"><a href="#outputFormat接口实现类" class="headerlink" title="outputFormat接口实现类"></a>outputFormat接口实现类</h4><img src="https://s1.ax1x.com/2020/04/26/JgnRAO.png" alt="JgnRAO.png" border="0"><p><strong>排序</strong>：<em>排序是针对map输出里面的key，没会对value排序；map输出和reduce输入都有排序；作用是提高效率</em></p><h3 id="分区Partition"><a href="#分区Partition" class="headerlink" title="分区Partition"></a>分区Partition</h3><h4 id="Partition定义："><a href="#Partition定义：" class="headerlink" title="Partition定义："></a>Partition定义：</h4><p>Mapper任务划分数据的过程称作Partition。<br>负责实现数据的类称作Partitioner，默认的分区是Hash分区 (Hash Partition)</p><h4 id="Partition作用："><a href="#Partition作用：" class="headerlink" title="Partition作用："></a>Partition作用：</h4><p>将map阶段产生的所有&lt;key,value&gt;对分配给不同的Reducer 处理，可以将Reduce阶段的处理负载进行分摊</p><p><strong>Partition的数量决定Reducer的数量</strong></p><h4 id="Hash分区基本原理"><a href="#Hash分区基本原理" class="headerlink" title="Hash分区基本原理"></a>Hash分区基本原理</h4><p><em>计算某个值的hash值，如果结果相同，则放入同一个分区</em></p><p><em>Hash分区的作用：把数据打散进行存放，最终是为了避免热块</em></p><h4 id="合并Combiner"><a href="#合并Combiner" class="headerlink" title="合并Combiner"></a>合并Combiner</h4><p><em>减少Mapper输出到Reduce的数据量，缓解网络传输瓶颈，提高reducer的执行效率</em></p><p><em>需要注意的问题：一定要谨慎使用Combiner<br>有些情况不能使用Combiner —-&gt;  如：求平均值<br>保证引入Combiner以后，不能改变原来的逻辑</em></p><p><a href="https://imgchr.com/i/JfsWTI" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/27/JfsWTI.md.png" alt="JfsWTI.md.png" border="0"></a><br><a href="https://imgchr.com/i/JfsR0A" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/27/JfsR0A.md.png" alt="JfsR0A.md.png" border="0"></a></p><hr><blockquote><p>如果今天后悔昨天，那么明天就会后悔今天。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hadoop" scheme="http://tianyong.fun/categories/Hadoop/"/>
    
    
      <category term="Mapreduce" scheme="http://tianyong.fun/tags/Mapreduce/"/>
    
  </entry>
  
  <entry>
    <title>pythonn文件在命令行包导入问题</title>
    <link href="http://tianyong.fun/pythonn%E6%96%87%E4%BB%B6%E5%9C%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8C%85%E5%AF%BC%E5%85%A5%E9%97%AE%E9%A2%98.html"/>
    <id>http://tianyong.fun/pythonn%E6%96%87%E4%BB%B6%E5%9C%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8C%85%E5%AF%BC%E5%85%A5%E9%97%AE%E9%A2%98.html</id>
    <published>2020-04-11T02:24:16.000Z</published>
    <updated>2020-04-11T02:32:26.220Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="命令行下执行python找不包的解决方法"><a href="#命令行下执行python找不包的解决方法" class="headerlink" title="命令行下执行python找不包的解决方法"></a>命令行下执行python找不包的解决方法</h2><p>1.为什么会出现这样的问题?</p><p>包是向下搜索机制.</p><p>2.为什么idle中执行没有报找不到包的问题?</p><p>python搜索机制,在idle中是以项目为根路径, 所以它的搜索机制是从项目根路径开始向下搜索.</p><p>3.为什么命令行执行时会报找不到包的错误?</p><p>这是因为命令行执行的时候,是以当前执行的.py文件所在目录级别的下一级开始搜索. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root</span><br><span class="line"></span><br><span class="line">.......web(一级目录)</span><br><span class="line"></span><br><span class="line">       ......sett(二级目录)</span><br><span class="line"></span><br><span class="line">       .......views(二级目录)</span><br><span class="line"></span><br><span class="line">       ......service.py(二级目录)  (这个命令行执行文件.  命令行运行时,提示找不到views以及sett中的包.)</span><br><span class="line"></span><br><span class="line">             .......包搜索级别(三级目录)</span><br></pre></td></tr></table></figure><p><strong>法一</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#########################################################</span></span><br><span class="line"><span class="comment">#将根目录加入sys.path中,解决命令行找不到包的问题</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">curPath = os.path.abspath(os.path.dirname(__file__))</span><br><span class="line">rootPath = os.path.split(curPath)[<span class="number">0</span>]</span><br><span class="line">sys.path.append(rootPath)</span><br><span class="line"><span class="comment">#########################################################</span></span><br></pre></td></tr></table></figure><p><em>以上增加到哪个级别要,根据实际情况,灵活运用.  其实目的就是指定一个顶级目录.来克服向下搜索包的问题.</em></p><p><strong>法二</strong></p><p><em>在web平级别新建一个py文件. 然后将要执行的py文件导入进去即可.(并不需要作其它操作,看实际情况.)</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> web <span class="keyword">import</span> service</span><br></pre></td></tr></table></figure><p><strong>法三</strong></p><p><em>cmd命令行进行项目根目录，采用相对路径去执行该py文件</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cmd</span><br><span class="line">cd d:\test_project</span><br><span class="line">./main.py  <span class="comment">#相对执行</span></span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/yhleng/p/10330994.html" target="_blank" rel="external nofollow noopener noreferrer"><strong>原文</strong></a></p><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Python" scheme="http://tianyong.fun/categories/Python/"/>
    
    
      <category term="包导入" scheme="http://tianyong.fun/tags/%E5%8C%85%E5%AF%BC%E5%85%A5/"/>
    
      <category term="命令行" scheme="http://tianyong.fun/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://tianyong.fun/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html"/>
    <id>http://tianyong.fun/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html</id>
    <published>2020-04-11T01:15:47.000Z</published>
    <updated>2020-04-12T10:00:00.608Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="常用字符"><a href="#常用字符" class="headerlink" title="常用字符"></a>常用字符</h2><table><thead><tr><th align="center">字符</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">\d</td><td align="center">数字</td></tr><tr><td align="center">\w</td><td align="center">数字或字母</td></tr><tr><td align="center">.</td><td align="center">任意单个字符(除了换行符)</td></tr><tr><td align="center">*</td><td align="center">零个或多个字符</td></tr><tr><td align="center">+</td><td align="center">至少一个字符</td></tr><tr><td align="center">？</td><td align="center">零个或一个字符</td></tr><tr><td align="center">{n}</td><td align="center">前面的表达式匹配n次</td></tr><tr><td align="center">{n,m}</td><td align="center"></td></tr><tr><td align="center">\s</td><td align="center">匹配一个空格</td></tr><tr><td align="center">\</td><td align="center">转义字符</td></tr><tr><td align="center">|</td><td align="center">或</td></tr><tr><td align="center">^</td><td align="center">（匹配一行字符串的开头）^\d以数字开头</td></tr><tr><td align="center">$</td><td align="center">（匹配一行字符串的结尾）\d$以数字结尾</td></tr><tr><td align="center">[0-9a-zA-z\_]</td><td align="center">一个数字，字符或下划线</td></tr><tr><td align="center">[0-9a-zA-z\_]+</td><td align="center">如<code>&#39;a100&#39;</code>，<code>&#39;0_Z&#39;</code>，<code>&#39;Py3000&#39;</code>等等</td></tr><tr><td align="center">\A</td><td align="center">匹配字符串的开头</td></tr><tr><td align="center">\Z</td><td align="center">匹配字符串的结尾</td></tr><tr><td align="center">.*</td><td align="center">贪婪匹配</td></tr><tr><td align="center">.*？</td><td align="center">非贪婪匹配(在结尾时可能不会匹配)</td></tr></tbody></table><p><em>下划线是特殊字符需要转义</em></p><p><em>字母大写代表与小写意思相反</em></p><p><em>使用r’…’可以规避特殊字符</em></p><h2 id="re库"><a href="#re库" class="headerlink" title="re库"></a>re库</h2><h3 id="match"><a href="#match" class="headerlink" title="match()"></a>match()</h3><p><em>会从字符串的<strong>开头</strong>进行匹配，成功返回<strong>Match</strong>对象；失败返回<strong>None</strong>.</em></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.match(正则表达式，字符串，[修饰符])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">content = <span class="string">'hello, 122323 world _ this is a regex demo'</span></span><br><span class="line">result = re.match(<span class="string">r'^he.*(/d+).*demo$'</span>, content)</span><br><span class="line">print(result)</span><br><span class="line">print(result.group(<span class="number">1</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>match object</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">3</span> <span class="comment"># 因为.*为贪婪匹配，会尽可能多的匹配</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">content = <span class="string">'http://weibo.com/comment/KERGCN'</span></span><br><span class="line">result1 = re.match(<span class="string">r'http.*?comment(.*?)'</span>, content) <span class="comment"># 在结尾尽可能少的匹配</span></span><br><span class="line">result2 = re.match(<span class="string">r'http.*?/(.*?)/KERGCN'</span>, content)</span><br><span class="line">print(result1.group(<span class="number">1</span>))</span><br><span class="line">print(result2.group(<span class="number">1</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">None</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>comment</span><br></pre></td></tr></table></figure><h4 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h4><table><thead><tr><th align="center">修饰符名</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">re.I</td><td align="center">匹配对大小写不敏感</td></tr><tr><td align="center">re.L</td><td align="center"></td></tr><tr><td align="center">re.M</td><td align="center"></td></tr><tr><td align="center">re.S</td><td align="center">使.匹配任意字符</td></tr><tr><td align="center">re.U</td><td align="center"></td></tr><tr><td align="center">re.S</td><td align="center"></td></tr></tbody></table><h3 id="search"><a href="#search" class="headerlink" title="search()"></a>search()</h3><p><em>从字符串中寻找是否有匹配的片段；然后返回第一个匹配的结果</em></p><p><em>要注意绝大部分的html文本都会包含大量的换行符，所以尽量加上re.S修饰符，避免出现匹配不到的问题</em></p><h3 id="compile"><a href="#compile" class="headerlink" title="compile()"></a>compile()</h3><p><em>用于把一个反复用的正则表达式生成对象</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pattern = re.compile(regex)</span><br><span class="line">patter.search(<span class="string">'....'</span>)</span><br></pre></td></tr></table></figure><h3 id="其它方法"><a href="#其它方法" class="headerlink" title="其它方法"></a>其它方法</h3><h4 id="re-findall"><a href="#re-findall" class="headerlink" title="re.findall()"></a>re.findall()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.findall(patter, string, flag=<span class="number">0</span>) <span class="comment"># 返回列表</span></span><br></pre></td></tr></table></figure><h4 id="re-split"><a href="#re-split" class="headerlink" title="re.split()"></a>re.split()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.split(pattern, string, maxsplit=<span class="number">0</span>, flag=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h4 id="re-finditer"><a href="#re-finditer" class="headerlink" title="re.finditer()"></a>re.finditer()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">results = re.finditer(pattern, string, flag=<span class="number">0</span>) <span class="comment"># 生成正则表达式匹配结果的生成器</span></span><br><span class="line"><span class="keyword">for</span> result <span class="keyword">in</span> results:</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><h4 id="re-sub"><a href="#re-sub" class="headerlink" title="re.sub()"></a>re.sub()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.sub(pattern, repl, string, count=<span class="number">0</span>, flags=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><p><strong>使用（）</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">result.group(<span class="number">0</span>) <span class="comment"># 获取的是原字符串</span></span><br><span class="line">result.group(NO.) <span class="comment"># 获取对应第几个子串</span></span><br><span class="line">result.groups() <span class="comment"># 返回生成的子串元组</span></span><br></pre></td></tr></table></figure><h3 id="贪婪匹配"><a href="#贪婪匹配" class="headerlink" title="贪婪匹配"></a>贪婪匹配</h3><p><em>正则表达式默认都是尽可能多的匹配</em></p><h3 id="非贪婪匹配"><a href="#非贪婪匹配" class="headerlink" title="非贪婪匹配"></a>非贪婪匹配</h3><p><em>在后面加一个?</em></p><p>/d+?</p><p>.*?</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'a b   c'</span>.split(<span class="string">' '</span>)</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="string">'c'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.split(<span class="string">r'[\s\,]+'</span>, <span class="string">'a,b, c  d'</span>)</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.split(<span class="string">r'[\s\,\;]+'</span>, <span class="string">'a,b;; c  d'</span>)</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r'^(\d+)(0*)$'</span>, <span class="string">'102300'</span>).groups()</span><br><span class="line">(<span class="string">'102300'</span>, <span class="string">''</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r'^(\d+?)(0*)$'</span>, <span class="string">'102300'</span>).groups()</span><br><span class="line">(<span class="string">'1023'</span>, <span class="string">'00'</span>)</span><br></pre></td></tr></table></figure><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Python" scheme="http://tianyong.fun/categories/Python/"/>
    
    
      <category term="正则表达式" scheme="http://tianyong.fun/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>pip命令</title>
    <link href="http://tianyong.fun/pip%E5%91%BD%E4%BB%A4.html"/>
    <id>http://tianyong.fun/pip%E5%91%BD%E4%BB%A4.html</id>
    <published>2020-04-11T01:13:42.000Z</published>
    <updated>2020-04-11T02:21:20.146Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="install"><a href="#install" class="headerlink" title="install"></a>install</h2><h3 id="普通安装"><a href="#普通安装" class="headerlink" title="普通安装"></a>普通安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --timeout 8000 package</span><br></pre></td></tr></table></figure><h3 id="使用镜像安装"><a href="#使用镜像安装" class="headerlink" title="使用镜像安装"></a>使用镜像安装</h3><h4 id="使用国内镜像源"><a href="#使用国内镜像源" class="headerlink" title="使用国内镜像源"></a>使用国内镜像源</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install 包名 -i http:&#x2F;&#x2F;pypi.douban.com&#x2F;simple&#x2F; --trusted-host pypi.douban.com</span><br><span class="line">这个是豆瓣源</span><br><span class="line">--trusted-host pypi.douban.com 这是为了获得ssl证书的认证，要不然会报错</span><br></pre></td></tr></table></figure><p><strong>国内镜像源</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">清华：https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</span><br><span class="line"></span><br><span class="line">阿里云：http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple&#x2F;</span><br><span class="line"></span><br><span class="line">中国科技大学 https:&#x2F;&#x2F;pypi.mirrors.ustc.edu.cn&#x2F;simple&#x2F;</span><br><span class="line"></span><br><span class="line">华中理工大学：http:&#x2F;&#x2F;pypi.hustunique.com&#x2F;</span><br><span class="line"></span><br><span class="line">山东理工大学：http:&#x2F;&#x2F;pypi.sdutlinux.org&#x2F; </span><br><span class="line"></span><br><span class="line">豆瓣：http:&#x2F;&#x2F;pypi.douban.com&#x2F;simple&#x2F;</span><br></pre></td></tr></table></figure><h4 id="直接修改文件"><a href="#直接修改文件" class="headerlink" title="直接修改文件"></a>直接修改文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url &#x3D; http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple&#x2F;</span><br><span class="line">[install]</span><br><span class="line">trusted-host&#x3D;mirrors.aliyun.com</span><br></pre></td></tr></table></figure><p><em>windows下，直接在user目录中创建一个pip目录，如：C:\Users\xx\pip，新建文件pip.ini。内容同上。本机win10操作系统，目录：C:\Users\DELL\AppData\Roaming\pip\pip.ini</em></p><h3 id="pip更新"><a href="#pip更新" class="headerlink" title="pip更新"></a>pip更新</h3><h4 id="python-m-pip-install-–upgrade-pip"><a href="#python-m-pip-install-–upgrade-pip" class="headerlink" title="python -m pip install –upgrade pip"></a>python -m pip install –upgrade pip</h4><h3 id="python版本替换批量迁移模块"><a href="#python版本替换批量迁移模块" class="headerlink" title="python版本替换批量迁移模块"></a>python版本替换批量迁移模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 旧版本Scripts路径下执行</span><br><span class="line">pip freeze &gt; requirements.txt</span><br><span class="line"># 新版本Scripts路径下执行 </span><br><span class="line">pip install -r requirements.txt -i 镜像源</span><br></pre></td></tr></table></figure><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Python" scheme="http://tianyong.fun/categories/Python/"/>
    
    
      <category term="pip" scheme="http://tianyong.fun/tags/pip/"/>
    
  </entry>
  
  <entry>
    <title>python乱码问题</title>
    <link href="http://tianyong.fun/python%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98.html"/>
    <id>http://tianyong.fun/python%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98.html</id>
    <published>2020-04-10T06:26:44.000Z</published>
    <updated>2020-04-10T07:07:53.973Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><p>一、在文件头部添加如下注释码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">coding=&lt;encoding name&gt; 例如，可添加<span class="comment"># coding=utf-8</span></span><br></pre></td></tr></table></figure><p>二、在文件头部添加如下两行注释码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: &lt;encoding name&gt; -*- 例如，可添加# -*- coding: utf-8 -*-</span></span><br></pre></td></tr></table></figure><p>三、在文件头部添加如下两行注释码：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vim: set fileencoding=&lt;encoding name&gt; : </span></span><br><span class="line">例如，可添加</span><br><span class="line"><span class="comment"># vim: set fileencoding=utf-8 :</span></span><br></pre></td></tr></table></figure><p>四、我们可以通过先把中文解码为unicode，然后在转化为gbk来解决这个问题：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'吃葡萄不吐葡萄皮儿'</span></span><br><span class="line">print(a..decode(<span class="string">'utf-8'</span>).encode(<span class="string">'gbk'</span>))</span><br></pre></td></tr></table></figure><p>五、通过改变cmd命令行窗口的输出格式来解决这个问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chcp <span class="number">65001</span> 就是换成UTF<span class="number">-8</span>代码页</span><br><span class="line">chcp <span class="number">936</span> 可以换回默认的GBK</span><br></pre></td></tr></table></figure><p><em>但是这样就降低了脚本的兼容性，在其他环境运行的时候可能还会出现这样的错误</em></p><p>————————————————<br>版权声明：本文为CSDN博主「TTOP」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/u013634961/article/details/38826189" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/u013634961/article/details/38826189</a></p><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Python" scheme="http://tianyong.fun/categories/Python/"/>
    
    
      <category term="乱码" scheme="http://tianyong.fun/tags/%E4%B9%B1%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>python解析库-Xpath</title>
    <link href="http://tianyong.fun/python%E8%A7%A3%E6%9E%90%E5%BA%93-Xpath.html"/>
    <id>http://tianyong.fun/python%E8%A7%A3%E6%9E%90%E5%BA%93-Xpath.html</id>
    <published>2020-04-06T06:27:47.000Z</published>
    <updated>2020-04-06T10:05:20.281Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="f542ab6385dc4a688c65a4a2978a7b295318ddfbad2d1c5cdc690f01c0c507a5"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是一篇加密文章
    
    </summary>
    
    
      <category term="python解析库" scheme="http://tianyong.fun/categories/python%E8%A7%A3%E6%9E%90%E5%BA%93/"/>
    
    
      <category term="xpath" scheme="http://tianyong.fun/tags/xpath/"/>
    
  </entry>
  
  <entry>
    <title>python数据库-pymongo</title>
    <link href="http://tianyong.fun/python%E6%95%B0%E6%8D%AE%E5%BA%93-pymongo.html"/>
    <id>http://tianyong.fun/python%E6%95%B0%E6%8D%AE%E5%BA%93-pymongo.html</id>
    <published>2020-04-06T04:24:37.000Z</published>
    <updated>2020-04-12T10:04:27.046Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="MongoDB存储"><a href="#MongoDB存储" class="headerlink" title="MongoDB存储"></a>MongoDB存储</h2><p><strong>[官方文档](<a href="http://api.mongodb.com/python/current/api/pymongo/" target="_blank" rel="external nofollow noopener noreferrer">http://api.mongodb.com/python/current/api/pymongo/</a><br>collection.html)</strong>  </p><p><em>MongoDB是 由 C++语言编写的非关系型数据库，是一个基于分布式文件存储的开源数据库系统，其内容存储形式类似JSON对 象 ，它的字段值可以包含其他文档、数组及文档数组，非常灵活。</em></p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p><em>安装好pymongo并启动服务</em></p><h3 id="连接MongoDB"><a href="#连接MongoDB" class="headerlink" title="连接MongoDB"></a>连接MongoDB</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line">client = pymongo.MongoClient(host=<span class="string">'localhost'</span>, port=<span class="number">27017</span>) </span><br><span class="line">等同于</span><br><span class="line">client = MogoClient(<span class="string">'mongodb://localhost:27017/'</span>)</span><br></pre></td></tr></table></figure><h3 id="指定数据库"><a href="#指定数据库" class="headerlink" title="指定数据库"></a>指定数据库</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db = client.数据库名</span><br><span class="line">等同于</span><br><span class="line">db = client[<span class="string">'数据库名'</span>]</span><br></pre></td></tr></table></figure><h3 id="指定集合"><a href="#指定集合" class="headerlink" title="指定集合"></a>指定集合</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">collection = db.集合名</span><br><span class="line">等同于</span><br><span class="line">collection = db[<span class="string">'集合名'</span>]</span><br></pre></td></tr></table></figure><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><h4 id="insert-，-insert-one-insert-many"><a href="#insert-，-insert-one-insert-many" class="headerlink" title="insert()， insert_one(), insert_many()"></a>insert()， insert_one(), insert_many()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 插入单条</span></span><br><span class="line">result = collection.insert(&#123;<span class="string">''</span>:<span class="string">""</span>&#125;) <span class="comment"># 会自动为数据产生_id标识，并返回</span></span><br><span class="line"><span class="comment"># 插入多条</span></span><br><span class="line">result = collection.insert([&#123;&#125;, &#123;&#125;]) <span class="comment"># 返回_id集合</span></span><br><span class="line">print(result)</span><br><span class="line"><span class="comment">## python3.x推荐使用下列方式,返回的是InsertOneResult</span></span><br><span class="line">insert_one()</span><br><span class="line">insert_many()</span><br><span class="line">print(result.inserted_id)</span><br><span class="line">print(result.inserted_ids)</span><br></pre></td></tr></table></figure><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><h4 id="find-find-one"><a href="#find-find-one" class="headerlink" title="find(), find_one()"></a>find(), find_one()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bson.objectid <span class="keyword">import</span> ObjectId</span><br><span class="line"><span class="comment"># 得到一个结果</span></span><br><span class="line">result = collection.find_one(&#123;<span class="string">"a"</span>:<span class="string">"b"</span>&#125;) <span class="comment"># 没有返回None</span></span><br><span class="line">result = collection.find_one(&#123;<span class="string">"_id"</span>:<span class="string">"ObjectId('1325645654')"</span>&#125;)</span><br><span class="line"><span class="comment"># 得到生成器对象</span></span><br><span class="line">results = collection.find(&#123;<span class="string">"age"</span>:<span class="string">"20"</span>&#125;) <span class="comment"># pymongo.cursor</span></span><br><span class="line"><span class="keyword">for</span> result <span class="keyword">in</span> results:</span><br><span class="line">    print(result)</span><br><span class="line"></span><br><span class="line">results = collection.find(&#123;<span class="string">"age"</span>:&#123;<span class="string">'$gt'</span>:<span class="number">20</span>&#125;&#125;) <span class="comment"># 大于20的</span></span><br></pre></td></tr></table></figure><h5 id="随机查询"><a href="#随机查询" class="headerlink" title="随机查询"></a>随机查询</h5><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">results = collection.aggregate([ &#123;<span class="string">'$sample'</span>: &#123;<span class="string">'size'</span>:<span class="number">2000</span>&#125;&#125;]) <span class="comment"># 生成生成器</span></span><br><span class="line"><span class="keyword">for</span> result <span class="keyword">in</span> results:</span><br><span class="line"><span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h5 id="比较符"><a href="#比较符" class="headerlink" title="比较符"></a>比较符</h5><p><a href="https://imgchr.com/i/GyHdBV" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/06/GyHdBV.png" alt="GyHdBV.png" border="0" width="600/"></a></p><h5 id="用正则表达式"><a href="#用正则表达式" class="headerlink" title="用正则表达式"></a>用正则表达式</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">results = collection.find (&#123; <span class="string">'name'</span>: &#123;<span class="string">'$ regex'</span>:<span class="string">'^M.*'</span>&#125;&#125; )</span><br><span class="line"><span class="comment"># 这里使用$regex来指定正则匹配，人M.*代表以 M 开头的正则表达式。</span></span><br></pre></td></tr></table></figure><h5 id="功能符"><a href="#功能符" class="headerlink" title="功能符"></a>功能符</h5><img src="https://s1.ax1x.com/2020/04/06/GybBrt.png" alt="GybBrt.png" border="0" width="600/"><h3 id="计数"><a href="#计数" class="headerlink" title="计数"></a>计数</h3><h4 id="count"><a href="#count" class="headerlink" title="count()"></a>count()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = colletion.find().count()</span><br></pre></td></tr></table></figure><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><h4 id="sort"><a href="#sort" class="headerlink" title="sort()"></a>sort()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">results = colletion.find().sort(<span class="string">'name'</span>,pymongo.ASCENDING)</span><br><span class="line">print([result[<span class="string">'name'</span>] <span class="keyword">for</span> result <span class="keyword">in</span> results])</span><br></pre></td></tr></table></figure><p><em>这里我们调用pymongo.ASCENDING指定升序。如果要降序排列，可以传入pymongo.DESCENDING</em>  </p><h3 id="偏移"><a href="#偏移" class="headerlink" title="偏移"></a>偏移</h3><h4 id="skip"><a href="#skip" class="headerlink" title="skip()"></a>skip()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">results = collection.find().sort(<span class="string">'name'</span>, pymongo.ASCENDING).skip(<span class="number">2</span>)</span><br><span class="line">print([result[<span class="string">'name'</span>] <span class="keyword">for</span> resuLt <span class="keyword">in</span> results])</span><br><span class="line">运行结果如下：</span><br><span class="line">[<span class="string">'Kevin'</span>, <span class="string">'Mark'</span>, <span class="string">'Mike'</span>]</span><br></pre></td></tr></table></figure><p><em>值得注意的是，在数据库数量非常庞大的时候，如千万、亿级别，最好不要使用大的偏移量来查询数据，因为这样很可能导致内存溢出。此时可以使用类似如下操作来查询</em>  </p><h4 id="limit"><a href="#limit" class="headerlink" title="limit()"></a>limit()</h4><p><em>设置结果个数</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">results = collection.find().sort(<span class="string">'name'</span>, pymongo.ASCENDING).skip(<span class="number">2</span>).limit(<span class="number">2</span>)</span><br><span class="line">print([result[<span class="string">'name'</span>] <span class="keyword">for</span> result <span class="keyword">in</span> results])</span><br><span class="line">运行结果如下：</span><br><span class="line">[<span class="string">'Kevin'</span>, <span class="string">'Mark'</span>]</span><br></pre></td></tr></table></figure><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><h4 id="update"><a href="#update" class="headerlink" title="update()"></a>update()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">condition &#x3D; &#123;&quot;d&quot;: &#39;c&#39;&#125;</span><br><span class="line">dict &#x3D; colletion.find_one(condition)</span><br><span class="line">dict[&quot;a&quot;] &#x3D; &quot;b&quot;</span><br><span class="line">collection.update(condition, dict) &#x2F;&#x2F; 覆盖以前的所有</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;&#123;&#39;ok&#39;: 1, &#39;nModified*: 1, &#39;n&#39;: 1, &#39;updatedExisting&#39;: True&#125;</span><br><span class="line"></span><br><span class="line">collection.update(condition, &#123;&#39;$set&#39;: dict&#125;) &#x2F;&#x2F; 只更新存在的字段，其它字段不会删除</span><br></pre></td></tr></table></figure><p><em>update( ) 方 法 其 实 也 是 官 方 不 推 荐 使 用 的 方 法 。这 里 也 分 为 update_one()方法和updatejnany()方法，用法更加严格，它们的第二个参数需要使用$类型操作符作为字典的键名</em></p><h4 id="update-one"><a href="#update-one" class="headerlink" title="update_one()"></a>update_one()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="update-many"><a href="#update-many" class="headerlink" title="update_many()"></a>update_many()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>其返回结果是UpdateResult类型。然后分别J调用 matched_count和 modified_count<br>属性，可以获得匹配的数据条数和影响的数据条数</em></p><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><h4 id="remove"><a href="#remove" class="headerlink" title="remove()"></a>remove()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">colletion.remove(condition)</span><br></pre></td></tr></table></figure><h4 id="delete-one"><a href="#delete-one" class="headerlink" title="delete_one()"></a>delete_one()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">collection.delete_one(condtion)</span><br></pre></td></tr></table></figure><h4 id="delete-many"><a href="#delete-many" class="headerlink" title="delete_many()"></a>delete_many()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">colletion.delete_one(&#123;<span class="string">'age'</span>:&#123;<span class="string">'$lt'</span>: <span class="number">25</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p><em>它们的返回结果 都 是 DeleteResult类型，可以调用deleted_count属性获取删除的数据条数。</em>  </p><h3 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h3><p><em>另外， PyMongo 还提供了一些组合方法，女口find_one_and_delete()、 find_one_and_replace()和find_one_and_update(),它们是查找后删除、替换和更新操作，其用法与上述方法基本一致。另外，还可以对索引进行操作，相 关 方 法 有 create_index()、 create_indexes()和 drop_index()等。</em>  </p><hr><blockquote><p>钟表可以回到起点，但永远不会回到昨天。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="python数据库" scheme="http://tianyong.fun/categories/python%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="pymongo" scheme="http://tianyong.fun/tags/pymongo/"/>
    
  </entry>
  
  <entry>
    <title>前端基础</title>
    <link href="http://tianyong.fun/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80.html"/>
    <id>http://tianyong.fun/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80.html</id>
    <published>2020-04-05T08:00:37.000Z</published>
    <updated>2020-04-05T08:01:19.821Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="20代表一个空格的意思"><a href="#20代表一个空格的意思" class="headerlink" title="%20代表一个空格的意思"></a>%20代表一个空格的意思</h2><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>python的HTTP的请求库-Request</title>
    <link href="http://tianyong.fun/python%E7%9A%84HTTP%E7%9A%84%E8%AF%B7%E6%B1%82%E5%BA%93-Request.html"/>
    <id>http://tianyong.fun/python%E7%9A%84HTTP%E7%9A%84%E8%AF%B7%E6%B1%82%E5%BA%93-Request.html</id>
    <published>2020-04-05T07:18:08.000Z</published>
    <updated>2020-04-06T06:25:02.816Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><hr><blockquote><p>有些路需要一个人走，有些事需要一个人扛，星光不问赶路人，时光不负有心人。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>python常用用法积累</title>
    <link href="http://tianyong.fun/python%E7%94%A8%E6%B3%95%E7%A7%AF%E7%B4%AF.html"/>
    <id>http://tianyong.fun/python%E7%94%A8%E6%B3%95%E7%A7%AF%E7%B4%AF.html</id>
    <published>2020-04-05T01:29:49.000Z</published>
    <updated>2020-04-11T02:24:40.453Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="print"><a href="#print" class="headerlink" title="print"></a>print</h2><h3 id="print-“a”-“b”-“c”-sep-’-n’"><a href="#print-“a”-“b”-“c”-sep-’-n’" class="headerlink" title="print(“a”, “b”, “c”, sep=’\n’)"></a>print(“a”, “b”, “c”, sep=’\n’)</h3><p><em>a, b, c隔行打印</em></p><h2 id="isinstance"><a href="#isinstance" class="headerlink" title="isinstance"></a>isinstance</h2><h3 id="isinstance-e-reason-socket-timeout"><a href="#isinstance-e-reason-socket-timeout" class="headerlink" title="isinstance(e.reason, socket.timeout)"></a>isinstance(e.reason, socket.timeout)</h3><p><em>是在urllib实例看到的</em></p><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="一个数组-不论是字符型还是数值型-，另一个元组引用它，更改新的元组后，旧元组也会改变"><a href="#一个数组-不论是字符型还是数值型-，另一个元组引用它，更改新的元组后，旧元组也会改变" class="headerlink" title="一个数组(不论是字符型还是数值型)，另一个元组引用它，更改新的元组后，旧元组也会改变"></a>一个数组(不论是字符型还是数值型)，另一个元组引用它，更改新的元组后，旧元组也会改变</h3><h2 id><a href="#" class="headerlink" title></a></h2><hr><blockquote><p>不见黄河心不死，不撞南墙头不回。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Python" scheme="http://tianyong.fun/categories/Python/"/>
    
    
      <category term="常用用法" scheme="http://tianyong.fun/tags/%E5%B8%B8%E7%94%A8%E7%94%A8%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫相关知识</title>
    <link href="http://tianyong.fun/python%E7%88%AC%E8%99%AB%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95.html"/>
    <id>http://tianyong.fun/python%E7%88%AC%E8%99%AB%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95.html</id>
    <published>2020-04-04T07:55:30.000Z</published>
    <updated>2020-04-06T09:32:30.565Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="HTTP和POST测试"><a href="#HTTP和POST测试" class="headerlink" title="HTTP和POST测试"></a>HTTP和POST测试</h2><p>​    <strong><a href="http://httpbin.org" target="_blank" rel="external nofollow noopener noreferrer">http://httpbin.org</a></strong>提供HTTP测试</p><p>​    <strong><a href="http://httpbin.org/post" target="_blank" rel="external nofollow noopener noreferrer">http://httpbin.org/post</a></strong>提供POST测试</p><h2 id="if-isinstance-e-reason-socket-timeout"><a href="#if-isinstance-e-reason-socket-timeout" class="headerlink" title="if isinstance(e.reason, socket.timeout)"></a>if isinstance(e.reason, socket.timeout)</h2><h2 id="一个标准的url格式"><a href="#一个标准的url格式" class="headerlink" title="一个标准的url格式"></a>一个标准的url格式</h2><p><strong>scheme://netloc/path;params?query#fragment</strong></p><p><em>//前面的就是scheme，代表协议；第一个/符号前面便是n e tlo c ,即域名，后面是 p a th ,即访问路径；分号;前面是param s,代表参数；问号?后面是查询条件query, 一般用作GET类型的URL；#后面是锚点，用于直接定位页面内部的下拉位置。</em></p><h2 id="网页标签属性值之间有空格，代表这是两个值"><a href="#网页标签属性值之间有空格，代表这是两个值" class="headerlink" title="网页标签属性值之间有空格，代表这是两个值"></a>网页标签属性值之间有空格，代表这是两个值</h2><p>**&lt;li class=”li li-first”xa href =”link.html”&gt;first item&lt;/ax/li&gt;  **</p><p><em>li和li-first就是两个不同的值</em></p><hr><blockquote><p>你给世界什么姿态，世界将还你什么样的人生。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
