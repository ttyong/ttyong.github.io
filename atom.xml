<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>田勇的博客</title>
  
  <subtitle>比你优秀的人都努力，有什么理由不努力！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tianyong.fun/"/>
  <updated>2021-01-20T07:32:32.382Z</updated>
  <id>http://tianyong.fun/</id>
  
  <author>
    <name>TTYONG</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>大数据开发工程师-第一周</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC%E4%B8%80%E5%91%A8.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC%E4%B8%80%E5%91%A8.html</id>
    <published>2021-01-20T05:58:10.000Z</published>
    <updated>2021-01-20T07:32:32.382Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="第一周"><a href="#第一周" class="headerlink" title="第一周"></a>第一周</h1><h2 id="群里问答"><a href="#群里问答" class="headerlink" title="群里问答"></a>群里问答</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">即系查询框架哪个用的多?</span><br><span class="line">impala，Elasticsearch、Druid、Presto、ClickHouse等都可以</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">你们写好的SparkStreaming测试是怎么测试?在本地测试还是扔到Yarn测试?</span><br><span class="line">一般是在测试环境里面测</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">先IDEA 本地跑一下自测,然后放到测试环境的HDFS上 让yarn调度一下么?</span><br><span class="line">是的，在本地验证代码的正确性，在测试集群中验证代码业务流程层面的正确性</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">对实时计算所涉及的事务、容错性、可靠性有深入的理解</span><br><span class="line"></span><br><span class="line">这种问题，面试的时候  一般怎么回答？</span><br><span class="line">分析下一下实时计算中的几种语义级别，能讲清楚就差不多了</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">实时计算事务也应该是弱事务吧</span><br><span class="line">是的，大数据的高性能和事务其实是有点矛盾的</span><br><span class="line">事务很少问，容错性会问到，这个课程里面有讲到，就是那几种语义级别，至少一次，仅一次等</span><br></pre></td></tr></table></figure><h2 id="群里配置问答"><a href="#群里配置问答" class="headerlink" title="群里配置问答"></a>群里配置问答</h2><h3 id="flume"><a href="#flume" class="headerlink" title="flume"></a>flume</h3><p><a href="https://imgchr.com/i/sWu1zQ" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/20/sWu1zQ.md.jpg" alt="sWu1zQ.jpg" border="0"></a></p><p><em>解决：没有配置flume的日志，缺少log4j的配置，在flume的conf目录下</em></p><h2 id="虚拟机网络问题"><a href="#虚拟机网络问题" class="headerlink" title="虚拟机网络问题"></a>虚拟机网络问题</h2><h3 id="为什么我这样配置ping不同外网-本机也Ping不了？"><a href="#为什么我这样配置ping不同外网-本机也Ping不了？" class="headerlink" title="为什么我这样配置ping不同外网 本机也Ping不了？"></a>为什么我这样配置ping不同外网 本机也Ping不了？</h3><p><a href="https://imgchr.com/i/sWuXY8" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/20/sWuXY8.jpg" alt="sWuXY8.jpg" border="0"></a><br><a href="https://imgchr.com/i/sWuOFf" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/20/sWuOFf.md.jpg" alt="sWuOFf.md.jpg" border="0"></a><br><a href="https://imgchr.com/i/sWuqTP" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/20/sWuqTP.md.jpg" alt="sWuqTP.md.jpg" border="0"></a><br><a href="https://imgchr.com/i/sWujfS" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/20/sWujfS.md.jpg" alt="sWujfS.md.jpg" border="0"></a></p><p><em>解决：虚拟机防火墙需要关闭，虚拟机网卡为nat模式，配置后要重启</em></p><p><a href="https://imgchr.com/i/sWY4EQ" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/20/sWY4EQ.md.jpg" alt="sWY4EQ.jpg" border="0"></a></p><h3 id="vmnet8"><a href="#vmnet8" class="headerlink" title="vmnet8"></a>vmnet8</h3><p><em>我虚拟机和主机不在同一个网段 可能就靠这个vmnet8来做nat网络地址转换</em></p><p><em>解答：vmnet8是你的一块网卡，让你的虚拟机和你的物理机处于同一个网络，这样你的物理机和虚拟机可以互联互通，而你的虚拟机访问外网，就通过nat映射，使用你的物理机ip对外访问，NAT对应的还有PAT技术</em></p><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据开发工程师" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
    
  </entry>
  
  <entry>
    <title>第六章-大数据预处理技术</title>
    <link href="http://tianyong.fun/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF.html"/>
    <id>http://tianyong.fun/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF.html</id>
    <published>2021-01-16T02:59:36.000Z</published>
    <updated>2021-01-16T03:22:18.406Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="构建数据仓库"><a href="#构建数据仓库" class="headerlink" title="构建数据仓库"></a>构建数据仓库</h1><p><strong>数组仓库的组成</strong>：维度表+事实表<br><strong>维度表</strong>：主要存放基础属性。<br><strong>事实表</strong>：主要存放各种业务数据</p><h2 id="构建维度表"><a href="#构建维度表" class="headerlink" title="构建维度表"></a>构建维度表</h2><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据预处理技术" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>第五章-大数据预处理技术</title>
    <link href="http://tianyong.fun/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF.html"/>
    <id>http://tianyong.fun/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF.html</id>
    <published>2021-01-16T02:43:31.000Z</published>
    <updated>2021-01-16T02:59:40.419Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="Kettle作业设计"><a href="#Kettle作业设计" class="headerlink" title="Kettle作业设计"></a>Kettle作业设计</h1><h2 id="作业的概念及组成"><a href="#作业的概念及组成" class="headerlink" title="作业的概念及组成"></a>作业的概念及组成</h2><p><em>一个作业包含一个或多个作业项，这些作业项以某种顺序来执行。作业执行顺序由作业项之间的跳和每个作业项的执行结果来决定。</em></p><p><strong>组成</strong>：作业项、作业跳(跳)、注释</p><h3 id="作业项"><a href="#作业项" class="headerlink" title="作业项"></a>作业项</h3><p><strong>与转换的步骤相比</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">有影子复制</span><br><span class="line">作业项之间传递一个结果对象</span><br><span class="line">可以并行执行</span><br><span class="line">后缀名：转换（ktr),作业（kjb)</span><br></pre></td></tr></table></figure><h3 id="跳"><a href="#跳" class="headerlink" title="跳"></a>跳</h3><p><strong>三种判断方式:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>两种状态</strong>：Enabled(可用)、Disabled(不可用)</p><h2 id="作业的创建及常用作业项"><a href="#作业的创建及常用作业项" class="headerlink" title="作业的创建及常用作业项"></a>作业的创建及常用作业项</h2><h2 id="执行方式"><a href="#执行方式" class="headerlink" title="执行方式"></a>执行方式</h2><p>回溯<br>多路径和回溯：作业运行的结果不是唯一的；<br>并行执行</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p><strong>定义</strong>：任意长度的字符串值，有自己的作用范围；<br><strong>定义变量的两种方式</strong>：系统设置和用户自定义；<br>系统设置：Java虚拟机、Kettle的内部变量；<br>用户自定义：使用kettle.properties文件。在“设置变量”中设置作业项的属性、获取属性文件中的变量</p><h2 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h2><p><strong>监控</strong>包括<strong>日志和邮件</strong>两种方式<br><em>日志包含的级别及其对应内容：</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Nothing:</span><br><span class="line">Error:</span><br><span class="line">Basic:</span><br><span class="line">Detailed:</span><br><span class="line">Debug:</span><br><span class="line">Rowlevel:</span><br><span class="line">Minimal:</span><br></pre></td></tr></table></figure><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据预处理技术" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>第四章-大数据预处理技术</title>
    <link href="http://tianyong.fun/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF.html"/>
    <id>http://tianyong.fun/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF.html</id>
    <published>2021-01-16T02:16:00.000Z</published>
    <updated>2021-01-16T04:09:03.579Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="第四章-数据清理"><a href="#第四章-数据清理" class="headerlink" title="第四章-数据清理"></a>第四章-数据清理</h1><h2 id="数据清理概述"><a href="#数据清理概述" class="headerlink" title="数据清理概述"></a>数据清理概述</h2><p><em>无论数据清理是在加载到数据仓库之前，还是在从数据仓库抽取数据时，都不可能跳过数据清理这个过程</em></p><h3 id="常用的数据清理步骤"><a href="#常用的数据清理步骤" class="headerlink" title="常用的数据清理步骤"></a>常用的数据清理步骤</h3><p><strong>kettle中几个常用数据清理步骤：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">计算器；</span><br><span class="line">字符串替换；</span><br><span class="line">字符串操作；</span><br><span class="line">字符串剪切：对字符串做剪切的功能；</span><br><span class="line">拆分字段；</span><br><span class="line">值映射；</span><br><span class="line">字段选择：可以对字段进行选择、删除、重命名等操作；</span><br><span class="line">去除重复记录和去除重复记录(哈希值)的两个步骤。</span><br></pre></td></tr></table></figure><h3 id="字符串清理"><a href="#字符串清理" class="headerlink" title="字符串清理"></a>字符串清理</h3><h3 id="字段清理"><a href="#字段清理" class="headerlink" title="字段清理"></a>字段清理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">拆分字段成多行(列拆分为多行)：支持正则表达式；</span><br><span class="line">拆分字段；</span><br><span class="line">合并字段；</span><br><span class="line">字段选择： “选择和修改”、“移除”和“元数据”三个分类</span><br></pre></td></tr></table></figure><h4 id="列拆分为多行"><a href="#列拆分为多行" class="headerlink" title="列拆分为多行"></a>列拆分为多行</h4><p><a href="https://imgchr.com/i/sBjjIA" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/16/sBjjIA.png" alt="sBjjIA.png" border="0"></a></p><h4 id="拆分字段"><a href="#拆分字段" class="headerlink" title="拆分字段"></a>拆分字段</h4><img src="https://s3.ax1x.com/2021/01/16/sBvwLD.png" alt="sBvwLD.png" border="0"><h2 id="数据排重"><a href="#数据排重" class="headerlink" title="数据排重"></a>数据排重</h2><h3 id="如何识别重复数据"><a href="#如何识别重复数据" class="headerlink" title="如何识别重复数据"></a>如何识别重复数据</h3><p><em>数据是否指的同一客观实体</em></p><p><strong>重复数据分为两类：</strong>完全重复数据，不完全重复数据</p><p><strong>完全重复数据</strong>：两个数据行的数据完全一致</p><p><strong>不完全重复数据：</strong>客观上表示现实世界的同一实体，但由于表达方式不同或拼写错误等原因，导致数据存在多条重复</p><h3 id="去除完全重复数据"><a href="#去除完全重复数据" class="headerlink" title="去除完全重复数据"></a>去除完全重复数据</h3><h4 id="去除重复记录"><a href="#去除重复记录" class="headerlink" title="去除重复记录"></a>去除重复记录</h4><p><em>只能处理事先排好序的数据</em></p><h4 id="去除重复记录-哈希值"><a href="#去除重复记录-哈希值" class="headerlink" title="去除重复记录(哈希值)"></a>去除重复记录(哈希值)</h4><h3 id="去除不完全重复数据"><a href="#去除不完全重复数据" class="headerlink" title="去除不完全重复数据"></a>去除不完全重复数据</h3><h2 id="使用脚本组件进行数据清理"><a href="#使用脚本组件进行数据清理" class="headerlink" title="使用脚本组件进行数据清理"></a>使用脚本组件进行数据清理</h2><h3 id="使用JavaScript代码组件清理数据"><a href="#使用JavaScript代码组件清理数据" class="headerlink" title="使用JavaScript代码组件清理数据"></a>使用JavaScript代码组件清理数据</h3><h3 id="使用正则表达式组件清理数据"><a href="#使用正则表达式组件清理数据" class="headerlink" title="使用正则表达式组件清理数据"></a>使用正则表达式组件清理数据</h3><h3 id="使用其它脚本组件清理数据"><a href="#使用其它脚本组件清理数据" class="headerlink" title="使用其它脚本组件清理数据"></a>使用其它脚本组件清理数据</h3><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据预处理技术" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>第三章-大数据预处理技术</title>
    <link href="http://tianyong.fun/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF.html"/>
    <id>http://tianyong.fun/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF.html</id>
    <published>2021-01-15T03:07:45.000Z</published>
    <updated>2021-01-16T02:15:25.897Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="第三章-基于kettle的数据导入与导出"><a href="#第三章-基于kettle的数据导入与导出" class="headerlink" title="第三章-基于kettle的数据导入与导出"></a>第三章-基于kettle的数据导入与导出</h1><h2 id="基于文件的数据导入与导出"><a href="#基于文件的数据导入与导出" class="headerlink" title="基于文件的数据导入与导出"></a>基于文件的数据导入与导出</h2><h3 id="文本文件的导入与导出"><a href="#文本文件的导入与导出" class="headerlink" title="文本文件的导入与导出"></a>文本文件的导入与导出</h3><p><strong>文本文件分类</strong>：分隔符文件；固定宽度文件</p><h3 id="文本文件的导入与导出案例"><a href="#文本文件的导入与导出案例" class="headerlink" title="文本文件的导入与导出案例"></a>文本文件的导入与导出案例</h3><h3 id="Excel文件的导入与导出"><a href="#Excel文件的导入与导出" class="headerlink" title="Excel文件的导入与导出"></a>Excel文件的导入与导出</h3><p><em>Excel文件：分为<strong>结构化的表格数据</strong>和<strong>非结构化的表格数据</strong>；对于非结构化表格数据，可能表里包含有多个字段值的列或者有重复的一组字段等</em></p><h3 id="Excel文件的导入与导出案例"><a href="#Excel文件的导入与导出案例" class="headerlink" title="Excel文件的导入与导出案例"></a>Excel文件的导入与导出案例</h3><h3 id="XML文件的导入与导出"><a href="#XML文件的导入与导出" class="headerlink" title="XML文件的导入与导出"></a>XML文件的导入与导出</h3><h3 id="XML文件的导入与导出案例"><a href="#XML文件的导入与导出案例" class="headerlink" title="XML文件的导入与导出案例"></a>XML文件的导入与导出案例</h3><h3 id="JSON文件的导入与导出"><a href="#JSON文件的导入与导出" class="headerlink" title="JSON文件的导入与导出"></a>JSON文件的导入与导出</h3><h3 id="JSON文件的导入与导出案例"><a href="#JSON文件的导入与导出案例" class="headerlink" title="JSON文件的导入与导出案例"></a>JSON文件的导入与导出案例</h3><h2 id="基于数据库的数据导入与导出"><a href="#基于数据库的数据导入与导出" class="headerlink" title="基于数据库的数据导入与导出"></a>基于数据库的数据导入与导出</h2><h3 id="关系型数据库的数据导入与导出"><a href="#关系型数据库的数据导入与导出" class="headerlink" title="关系型数据库的数据导入与导出"></a>关系型数据库的数据导入与导出</h3><p><em>面对关系型数据库，Kettle可以利用“表输入”、“表输出”步骤完成导入和导出</em></p><h3 id="MySQL数据库的数据导入与导出"><a href="#MySQL数据库的数据导入与导出" class="headerlink" title="MySQL数据库的数据导入与导出"></a>MySQL数据库的数据导入与导出</h3><p><em>“一般”选项卡常用的连接参数含义(主机名、数据库名称、端口号、用户名和密码)</em></p><h2 id="基于CDC变更数据的导入与导出"><a href="#基于CDC变更数据的导入与导出" class="headerlink" title="基于CDC变更数据的导入与导出"></a>基于CDC变更数据的导入与导出</h2><p><em>识别出变化的数据并只导入这部分数据被称为变化捕获数据(CDC)</em></p><h3 id="基于源数据的CDC"><a href="#基于源数据的CDC" class="headerlink" title="基于源数据的CDC"></a>基于源数据的CDC</h3><p><em>基于源数据的CDC：最常见的两个属性(时间戳、自增序列)</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 缺点</span><br><span class="line">1.只有源数据中包含了插入时间和更新时间两个属性列，才能区分插入时间和更新时间</span><br><span class="line">2.不能捕获物理删除，只能捕获逻辑删除</span><br><span class="line">3.如果同一个时间周期内，数据被更新多次，那么只能同步最后一次更新操作，中间的更新操作都无法导入</span><br><span class="line">4.时间戳和基于序列的CDC操作不适合用于实时场景下数据导入，一般用于批量操作</span><br></pre></td></tr></table></figure><h3 id="基于源数据的CDC案例"><a href="#基于源数据的CDC案例" class="headerlink" title="基于源数据的CDC案例"></a>基于源数据的CDC案例</h3><h3 id="基于自增序列的源数据CDC案例"><a href="#基于自增序列的源数据CDC案例" class="headerlink" title="基于自增序列的源数据CDC案例"></a>基于自增序列的源数据CDC案例</h3><h3 id="基于触发器的CDC"><a href="#基于触发器的CDC" class="headerlink" title="基于触发器的CDC"></a>基于触发器的CDC</h3><h3 id="基于触发器的CDC的案例"><a href="#基于触发器的CDC的案例" class="headerlink" title="基于触发器的CDC的案例"></a>基于触发器的CDC的案例</h3><h3 id="基于快照的CDC"><a href="#基于快照的CDC" class="headerlink" title="基于快照的CDC"></a>基于快照的CDC</h3><h3 id="基于快照的CDC案例"><a href="#基于快照的CDC案例" class="headerlink" title="基于快照的CDC案例"></a>基于快照的CDC案例</h3><h3 id="基于日志的CDC"><a href="#基于日志的CDC" class="headerlink" title="基于日志的CDC"></a>基于日志的CDC</h3><h3 id="基于日志的CDC案例"><a href="#基于日志的CDC案例" class="headerlink" title="基于日志的CDC案例"></a>基于日志的CDC案例</h3><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据预处理技术" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>第二章-大数据预处理技术</title>
    <link href="http://tianyong.fun/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF.html"/>
    <id>http://tianyong.fun/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF.html</id>
    <published>2021-01-13T03:39:50.000Z</published>
    <updated>2021-01-15T03:07:48.115Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="第二章-kettle的初步使用"><a href="#第二章-kettle的初步使用" class="headerlink" title="第二章-kettle的初步使用"></a>第二章-kettle的初步使用</h1><h2 id="kettle安装"><a href="#kettle安装" class="headerlink" title="kettle安装"></a>kettle安装</h2><h3 id="java安装"><a href="#java安装" class="headerlink" title="java安装"></a>java安装</h3><h3 id="kettle的下载安装与spoon的启动"><a href="#kettle的下载安装与spoon的启动" class="headerlink" title="kettle的下载安装与spoon的启动"></a>kettle的下载安装与spoon的启动</h3><h2 id="kettle的使用"><a href="#kettle的使用" class="headerlink" title="kettle的使用"></a>kettle的使用</h2><h3 id="转换的基本概念"><a href="#转换的基本概念" class="headerlink" title="转换的基本概念"></a>转换的基本概念</h3><p><strong>转换</strong>是ETL解决方案中最主要的部分，它负责处理抽取、转换、加载各阶段对数据行的各种操作</p><p><strong>组成</strong>：步骤、跳、注释</p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><p><strong>步骤</strong>是转换中的基本组成部分，是一个图形化的组件</p><p><em>关键特性：(四点)，最主要的一点是步骤的名字唯一</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 步骤的四个主要特性</span><br><span class="line">1.步骤的名字唯一</span><br><span class="line">2.每个步骤都会读，写数据行（生成步骤是例外，他只能写数据行）</span><br><span class="line">3.步骤之间通过跳进行数据行的单向传输</span><br><span class="line">4.大多数步骤都可以有多个输出跳</span><br><span class="line">5.在运行转换时，一个线程运行一个步骤，所有步骤的线程几乎同时进行</span><br></pre></td></tr></table></figure><h4 id="转换的跳"><a href="#转换的跳" class="headerlink" title="转换的跳"></a>转换的跳</h4><p><em>跳定义了步骤之间进行数据传输的单向通道</em></p><p><strong>从执行角度看</strong>：不可能定义执行的顺序和起点步骤、终点步骤；<br><strong>从功能角度看</strong>：有明确的起点步骤和终点步骤</p><h4 id="数据行"><a href="#数据行" class="headerlink" title="数据行"></a>数据行</h4><p><em>在kettle里数据的单位是<strong>行</strong>.</em></p><p>一个数据行是<strong>零</strong>到<strong>多个字段</strong>的结合，是kettle的数据单位，简称行。</p><p><strong>字段</strong>包括的<strong>数据类型</strong>：<strong>7大类</strong>(String、Number、Integer、Date、Boolean、Binary)</p><h3 id="第一个转换案例"><a href="#第一个转换案例" class="headerlink" title="第一个转换案例"></a>第一个转换案例</h3><h4 id="创建转换"><a href="#创建转换" class="headerlink" title="创建转换"></a>创建转换</h4><h4 id="核心对象"><a href="#核心对象" class="headerlink" title="核心对象"></a>核心对象</h4><h4 id="可视化编程"><a href="#可视化编程" class="headerlink" title="可视化编程"></a>可视化编程</h4><h4 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h4><h4 id="状态栏"><a href="#状态栏" class="headerlink" title="状态栏"></a>状态栏</h4><h4 id="主对象树"><a href="#主对象树" class="headerlink" title="主对象树"></a>主对象树</h4><h4 id="参数配置"><a href="#参数配置" class="headerlink" title="参数配置"></a>参数配置</h4><h5 id="环境变量配置"><a href="#环境变量配置" class="headerlink" title="环境变量配置"></a>环境变量配置</h5><p><strong>环境变量</strong>：全局的，对所有转换和作业有效</p><h5 id="命名参数配置"><a href="#命名参数配置" class="headerlink" title="命名参数配置"></a>命名参数配置</h5><p><strong>命名参数</strong>：局部的，仅对当前转换和作业有效</p><h5 id="定时启动转换"><a href="#定时启动转换" class="headerlink" title="定时启动转换"></a>定时启动转换</h5><p><em>在windows下，可以使用控制面板中的计划任务执行批处理</em></p><h6 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;d d:\data-integration</span><br><span class="line">pan &#x2F;file&#x3D;xxxxx.ktr &#x2F;level&#x3D;Dtailed &#x2F;logfile&#x3D;xxx.log0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;参数描述表</span><br><span class="line">参数名     参数值             作用</span><br><span class="line">file文件名指定转换或作业的文件名</span><br><span class="line">levelError, Nothing,  指定日志级别</span><br><span class="line">Detail,Debug,Rowlevel</span><br><span class="line">logfile日志文件名指定转换或作业的日志文件名</span><br></pre></td></tr></table></figure><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据预处理技术" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>第一章-大数据预处理技术</title>
    <link href="http://tianyong.fun/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF.html"/>
    <id>http://tianyong.fun/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF.html</id>
    <published>2021-01-13T02:55:50.000Z</published>
    <updated>2021-01-15T02:55:13.156Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="第一章-数据预处理概述"><a href="#第一章-数据预处理概述" class="headerlink" title="第一章-数据预处理概述"></a>第一章-数据预处理概述</h1><h2 id="数据与处理的背景与目的"><a href="#数据与处理的背景与目的" class="headerlink" title="数据与处理的背景与目的"></a>数据与处理的背景与目的</h2><h3 id="数据预处理背景：数据质量"><a href="#数据预处理背景：数据质量" class="headerlink" title="数据预处理背景：数据质量"></a>数据预处理背景：数据质量</h3><p><em>高质量数据：能满足应用要求</em></p><p><em>数据质量涉及的因素：<strong>准确性，完整性，一致性，时效性，相关性，可信性，可解释性</strong>.</em></p><h4 id="数据库和数据仓库的角度"><a href="#数据库和数据仓库的角度" class="headerlink" title="数据库和数据仓库的角度"></a>数据库和数据仓库的角度</h4><p><em>当今世界大型数据库和数据仓库的共同缺点是存在<strong>不正确</strong>，<strong>不完整</strong>，<strong>不一致</strong>.</em></p><h4 id="应用角度"><a href="#应用角度" class="headerlink" title="应用角度"></a>应用角度</h4><p><em>时效性，相关性</em></p><h4 id="用户角度"><a href="#用户角度" class="headerlink" title="用户角度"></a>用户角度</h4><p><em>可信性，可解释性</em></p><h3 id="数据预处理目的"><a href="#数据预处理目的" class="headerlink" title="数据预处理目的"></a>数据预处理目的</h3><p><em>在数据挖掘之前，必须对收集的原始数据进行预处理，达到改善数据的质量，提高数据挖掘过程的准确率和效率的目的</em></p><h2 id="数据预处理流程"><a href="#数据预处理流程" class="headerlink" title="数据预处理流程"></a>数据预处理流程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">初始数据采集&#x3D;&gt;数据清理&#x3D;&gt;数据集成&#x3D;》数据转换&#x3D;&gt;数据规约</span><br></pre></td></tr></table></figure><p><em>这里的流程顺序不用必须严格按照1/2/3/4顺序进行</em></p><h3 id="数据清理"><a href="#数据清理" class="headerlink" title="数据清理"></a>数据清理</h3><p><strong>脏数据</strong>：由于重复录入，并发处理等不规范的操作，导致产生不完整，不准确的，无效的数据。<br><strong>脏数据</strong>划分为<strong>缺省值</strong>和<strong>噪声</strong>(噪声是被测量变量的随机误差或方差）</p><p><em>数据清理：填充缺失值、光滑噪声和识别离群点</em></p><h4 id="缺失值"><a href="#缺失值" class="headerlink" title="缺失值"></a>缺失值</h4><h4 id="噪声数据"><a href="#噪声数据" class="headerlink" title="噪声数据"></a>噪声数据</h4><h4 id="不一致数据"><a href="#不一致数据" class="headerlink" title="不一致数据"></a>不一致数据</h4><h3 id="数据集成"><a href="#数据集成" class="headerlink" title="数据集成"></a>数据集成</h3><p><em>合并来自多个数据源的数据</em></p><h4 id="实体识别问题"><a href="#实体识别问题" class="headerlink" title="实体识别问题"></a>实体识别问题</h4><h4 id="冗余和相关分析"><a href="#冗余和相关分析" class="headerlink" title="冗余和相关分析"></a>冗余和相关分析</h4><h4 id="元组重复"><a href="#元组重复" class="headerlink" title="元组重复"></a>元组重复</h4><h4 id="数据值冲突的检测与处理"><a href="#数据值冲突的检测与处理" class="headerlink" title="数据值冲突的检测与处理"></a>数据值冲突的检测与处理</h4><h3 id="数据变换"><a href="#数据变换" class="headerlink" title="数据变换"></a>数据变换</h3><p><em>在数据预处理阶段，<strong>数据被变换或统一</strong>，使挖掘过程可能更有效，挖掘的模式可能更容易理解</em></p><h4 id="数据变换策略"><a href="#数据变换策略" class="headerlink" title="数据变换策略"></a>数据变换策略</h4><h4 id="通过规范化变换数据"><a href="#通过规范化变换数据" class="headerlink" title="通过规范化变换数据"></a>通过规范化变换数据</h4><h4 id="通过分箱离散化"><a href="#通过分箱离散化" class="headerlink" title="通过分箱离散化"></a>通过分箱离散化</h4><h4 id="通过直方图分析离散化"><a href="#通过直方图分析离散化" class="headerlink" title="通过直方图分析离散化"></a>通过直方图分析离散化</h4><h4 id="通过聚类，决策树和相关分析离散化"><a href="#通过聚类，决策树和相关分析离散化" class="headerlink" title="通过聚类，决策树和相关分析离散化"></a>通过聚类，决策树和相关分析离散化</h4><h4 id="标称数据的概念分层产生"><a href="#标称数据的概念分层产生" class="headerlink" title="标称数据的概念分层产生"></a>标称数据的概念分层产生</h4><h3 id="数据规约"><a href="#数据规约" class="headerlink" title="数据规约"></a>数据规约</h3><p><em>尽可能保持数据原貌的前提下，最大限度地精简数据量</em></p><p><strong>数据规约的策略</strong>：维规约、数量规约、数据压缩</p><h2 id="数据预处理的工具"><a href="#数据预处理的工具" class="headerlink" title="数据预处理的工具"></a>数据预处理的工具</h2><p><strong>工具类手段</strong>：Kettle<br><strong>编程类手段</strong>：Python语言</p><hr><blockquote><p>死并非生的对立面，是生的一部分永存。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据预处理技术" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>第五章-MongoDB基础</title>
    <link href="http://tianyong.fun/%E7%AC%AC%E4%BA%94%E7%AB%A0-NoSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E4%B8%8E%E4%B8%8E%E5%BA%94%E7%94%A8.html"/>
    <id>http://tianyong.fun/%E7%AC%AC%E4%BA%94%E7%AB%A0-NoSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E4%B8%8E%E4%B8%8E%E5%BA%94%E7%94%A8.html</id>
    <published>2021-01-05T05:21:20.000Z</published>
    <updated>2021-01-06T05:23:57.460Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="第五章-MongoDB基础"><a href="#第五章-MongoDB基础" class="headerlink" title="第五章-MongoDB基础"></a>第五章-MongoDB基础</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><em>开源数据库，是目前NoSQL数据库中使用最广泛的数据库之一</em></p><p><em>是一个开源文档数据库，是用C++语言编写的非关系型数据库</em></p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="文档数据模型"><a href="#文档数据模型" class="headerlink" title="文档数据模型"></a>文档数据模型</h3><p><em>传统的关系型数据库需要对表结构进行预先定义和严格的要求，而这样的严格要求，导致了处理数据的过程更加繁琐，甚至降低了执行效率。在数据量达到一定规模的情况下，传统关系型数据库反应迟钝。</em></p><p><em>文档存储支持对结构化数据的访问，与关系模型不同的是，文档存储没有强制的架构。文档存储以封包键值对的方式进行存储，文档存储模型支持嵌套结构</em></p><p><em>文档数据库无需事先定义数据存储结构</em>、</p><h3 id="文档存储结构"><a href="#文档存储结构" class="headerlink" title="文档存储结构"></a>文档存储结构</h3><p><em>文档存储结构可分为四个层次：键值对，文档，集合，数据库</em></p><h4 id="键值对"><a href="#键值对" class="headerlink" title="键值对"></a>键值对</h4><p><em>文档型数据库存储结构的基本单位，具体包含了数据和类型</em></p><p><em>键为字符串类型，值为五种基本类型，数组，日期，嵌套</em></p><h4 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h4><p><em>文档是MongoDB的核心概念，是数据的基本单元</em></p><p><em>是一组有序的键值对集合</em></p><h4 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h4><p><em>MongoDB将文档存储在集合中，一个集合是一些文档构成的集合</em></p><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><p><em>在MongoDB中，数据库有集合组成</em></p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p><em>MongoDB所采用的数据格式称为BSON，是一种基于JSON的二进制序列化格式</em></p><p><em>MongoDB改进的主要特性有下面三点：</em></p><p><em>(1) 更快的遍历速度</em></p><p><em>(2) 操作更加简单</em></p><p><em>(3) 支持更多的数据类型</em></p><h3 id="MongoDB的安装与测试"><a href="#MongoDB的安装与测试" class="headerlink" title="MongoDB的安装与测试"></a>MongoDB的安装与测试</h3><h2 id="数据库与集合的基本操作"><a href="#数据库与集合的基本操作" class="headerlink" title="数据库与集合的基本操作"></a>数据库与集合的基本操作</h2><h3 id="数据库命名规则"><a href="#数据库命名规则" class="headerlink" title="数据库命名规则"></a>数据库命名规则</h3><h3 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h3><h4 id="创建自定义数据库"><a href="#创建自定义数据库" class="headerlink" title="创建自定义数据库"></a>创建自定义数据库</h4><p><em>没有则创建该数据库</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use myDB</span><br></pre></td></tr></table></figure><h4 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show dbs</span><br></pre></td></tr></table></figure><h4 id="统计数据库信息"><a href="#统计数据库信息" class="headerlink" title="统计数据库信息"></a>统计数据库信息</h4><p><em>操作之前，要先切到该数据库</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use test</span><br><span class="line">db.stats()</span><br></pre></td></tr></table></figure><h4 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.dropDatabase()</span><br></pre></td></tr></table></figure><h4 id="查看集合"><a href="#查看集合" class="headerlink" title="查看集合"></a>查看集合</h4><p><em>查看当前数据库下的所有集合</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.getCollectionNames()</span><br></pre></td></tr></table></figure><h3 id="集合操作"><a href="#集合操作" class="headerlink" title="集合操作"></a>集合操作</h3><h4 id="集合名称的命名规则"><a href="#集合名称的命名规则" class="headerlink" title="集合名称的命名规则"></a>集合名称的命名规则</h4><h4 id="集合操作-1"><a href="#集合操作-1" class="headerlink" title="集合操作"></a>集合操作</h4><p><em>有显示和隐式创建集合两种方法</em></p><h5 id="集合参数"><a href="#集合参数" class="headerlink" title="集合参数"></a>集合参数</h5><p><em>capped</em>:<em>上限集合，是否限制大小</em></p><p><em>max<em>：</em>最大文档数，可选</em></p><p><em>size<em>：</em>具体集合大小，如果capped为True，则它必须命名</em></p><h5 id="显示创建"><a href="#显示创建" class="headerlink" title="显示创建"></a>显示创建</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use myDatabase</span><br><span class="line">db.createCollection(&quot;mycl&quot;,&#123;capped:true, size:6142800, max:10000&#125;)</span><br></pre></td></tr></table></figure><h5 id="隐式创建"><a href="#隐式创建" class="headerlink" title="隐式创建"></a>隐式创建</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.mycl.insert(&#123;&quot;name&quot;:&quot;tom&quot;&#125;)</span><br></pre></td></tr></table></figure><h4 id="集合的其它操作"><a href="#集合的其它操作" class="headerlink" title="集合的其它操作"></a>集合的其它操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="文档的基本操作"><a href="#文档的基本操作" class="headerlink" title="文档的基本操作"></a>文档的基本操作</h2><h3 id="文档的键定义规则"><a href="#文档的键定义规则" class="headerlink" title="文档的键定义规则"></a>文档的键定义规则</h3><h3 id="插入操作"><a href="#插入操作" class="headerlink" title="插入操作"></a>插入操作</h3><h3 id="更新操作"><a href="#更新操作" class="headerlink" title="更新操作"></a>更新操作</h3><h3 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h3><h3 id="查询操作"><a href="#查询操作" class="headerlink" title="查询操作"></a>查询操作</h3><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="NoSQL数据库原理与与应用" scheme="http://tianyong.fun/categories/NoSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E4%B8%8E%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>第一章-NoSQL数据库原理与应用</title>
    <link href="http://tianyong.fun/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E6%95%B0NoSQL%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E4%B8%8E%E4%B8%8E%E5%BA%94%E7%94%A8.html"/>
    <id>http://tianyong.fun/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E6%95%B0NoSQL%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E4%B8%8E%E4%B8%8E%E5%BA%94%E7%94%A8.html</id>
    <published>2021-01-04T05:28:04.000Z</published>
    <updated>2021-01-05T05:21:30.032Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="第一章-NoSQL数据库原理与应用"><a href="#第一章-NoSQL数据库原理与应用" class="headerlink" title="第一章-NoSQL数据库原理与应用"></a>第一章-NoSQL数据库原理与应用</h1><h2 id="数据库系统"><a href="#数据库系统" class="headerlink" title="数据库系统"></a>数据库系统</h2><p><em>由数据库，数据库管理系统，应用程序，用户组成</em></p><h3 id="数据库系统的基本概念"><a href="#数据库系统的基本概念" class="headerlink" title="数据库系统的基本概念"></a>数据库系统的基本概念</h3><h4 id="数据库DBS"><a href="#数据库DBS" class="headerlink" title="数据库DBS"></a>数据库DBS</h4><p><em>是长期存储在计算机内，<strong>有组织</strong>，<strong>统一管理的</strong>，可以<strong>表现为多种形式的</strong>，<strong>可共享</strong>的数据集合</em></p><p><em>数据库根据不同的逻辑模型可以分为三种：层次型，网状型，关系型</em></p><p><em>层次型：简单，冗余度过高</em></p><p><em>网状型：随着应用范围的扩展，数据库的结构变得越来越复杂</em></p><p><em>关系型：二维表格来表示实体集合以及数据间的联系的一种模型</em></p><h4 id="数据库管理系统DBMS"><a href="#数据库管理系统DBMS" class="headerlink" title="数据库管理系统DBMS"></a>数据库管理系统DBMS</h4><p><em>是一种操作和管理数据库的大型软件，用于建立，使用和维护数据库</em></p><h5 id="数据定义"><a href="#数据定义" class="headerlink" title="数据定义"></a>数据定义</h5><p><em>DBMS提供数据定义语言DDL，供用户定义，创建和修改数据库的结构</em></p><h5 id="数据操纵"><a href="#数据操纵" class="headerlink" title="数据操纵"></a>数据操纵</h5><p><em>DBMS提供数据操纵语言DML，实现用户对数据的操纵功能，包括对数据库数据的插入，删除，更新等操作</em></p><h5 id="数据库的运行管理"><a href="#数据库的运行管理" class="headerlink" title="数据库的运行管理"></a>数据库的运行管理</h5><h5 id="数据组织，存储与管理"><a href="#数据组织，存储与管理" class="headerlink" title="数据组织，存储与管理"></a>数据组织，存储与管理</h5><h5 id="数据库的维护"><a href="#数据库的维护" class="headerlink" title="数据库的维护"></a>数据库的维护</h5><h5 id="通信"><a href="#通信" class="headerlink" title="通信"></a>通信</h5><h4 id="应用程序"><a href="#应用程序" class="headerlink" title="应用程序"></a>应用程序</h4><h3 id="关系型数据库"><a href="#关系型数据库" class="headerlink" title="关系型数据库"></a>关系型数据库</h3><h4 id="关系型数据库的基本概念"><a href="#关系型数据库的基本概念" class="headerlink" title="关系型数据库的基本概念"></a>关系型数据库的基本概念</h4><p><em>在关系型数据库中，实体以及实体间的联系均由单一的结构类型表示，这种逻辑结构是一张二维表</em></p><h4 id="结构化查询语言"><a href="#结构化查询语言" class="headerlink" title="结构化查询语言"></a>结构化查询语言</h4><p><em>关系型数据库的核心是其结构化查询语言SQL，SQL涵盖数据的定义，操纵，查询，控制，是一个综合的，通用的且简单易懂的数据库管理语言</em></p><h5 id="数据定义语言DDL"><a href="#数据定义语言DDL" class="headerlink" title="数据定义语言DDL"></a>数据定义语言DDL</h5><p><em>CREATE，DROP，ALTER</em></p><h5 id="数据查询语言DQL"><a href="#数据查询语言DQL" class="headerlink" title="数据查询语言DQL"></a>数据查询语言DQL</h5><p><em>SELECT</em></p><h5 id="数据操纵语言"><a href="#数据操纵语言" class="headerlink" title="数据操纵语言"></a>数据操纵语言</h5><p><em>INSERT，DELETE，UPDATE</em></p><h5 id="数据控制语言DCL"><a href="#数据控制语言DCL" class="headerlink" title="数据控制语言DCL"></a>数据控制语言DCL</h5><p><em>是对数据访问权进行控制的指令</em></p><h4 id="关系型数据库的优缺点"><a href="#关系型数据库的优缺点" class="headerlink" title="关系型数据库的优缺点"></a>关系型数据库的优缺点</h4><h5 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h5><p><em>易于理解，使用方便，易于维护</em></p><h5 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h5><p><em>高并发读写能力差，对海量数据的读写效率低，扩展性差</em></p><h3 id="NoSQL数据库的特点"><a href="#NoSQL数据库的特点" class="headerlink" title="NoSQL数据库的特点"></a>NoSQL数据库的特点</h3><p><em>最初为满足互联网时代的业务需求而产生。互联网时代具有大量化，多样化，快速化等特点。数据不仅仅是传统的结构化数据，还包含大量非结构化和半结构化数据，关系型数据库无法存储此类数据</em></p><h4 id="灵活的数据模型"><a href="#灵活的数据模型" class="headerlink" title="灵活的数据模型"></a>灵活的数据模型</h4><h4 id="可伸缩性强"><a href="#可伸缩性强" class="headerlink" title="可伸缩性强"></a>可伸缩性强</h4><p><em>关系型数据库：中心化，是纵向扩展而不是横向扩展的。这使得它们不适合那些需要简单且动态可伸缩性的应用</em></p><p><em>NoSQL数据库从一开始就是分布式，横向扩展的，因此非常适合互联网应用分布式的特性</em></p><h4 id="自动分片"><a href="#自动分片" class="headerlink" title="自动分片"></a>自动分片</h4><h4 id="自动复制"><a href="#自动复制" class="headerlink" title="自动复制"></a>自动复制</h4><h2 id="分布式数据库的数据管理"><a href="#分布式数据库的数据管理" class="headerlink" title="分布式数据库的数据管理"></a>分布式数据库的数据管理</h2><h3 id="分布式数据处理"><a href="#分布式数据处理" class="headerlink" title="分布式数据处理"></a>分布式数据处理</h3><h3 id="CAP理论"><a href="#CAP理论" class="headerlink" title="CAP理论"></a>CAP理论</h3><p><em>CAP理论是指在一个分布式系统中，一致性C，可用性A，分区容错性P，三者不可兼得</em></p><h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><h5 id="一致性C"><a href="#一致性C" class="headerlink" title="一致性C"></a>一致性C</h5><p><em>是指更新操作成功后，所有节点在同一时间的数据完全一致</em></p><p><em>一致性在并发读写时才会出现的问题</em></p><h5 id="可用性A"><a href="#可用性A" class="headerlink" title="可用性A"></a>可用性A</h5><p><em>即用户访问数据时，系统能否在正常响应时间返回结果</em></p><p><em>在通常情况下，可用性与分布式数据冗余，负载均衡等有很大的关联</em></p><h5 id="分区容错性P"><a href="#分区容错性P" class="headerlink" title="分区容错性P"></a>分区容错性P</h5><p><em>即分布式系统在遇到某节点或网络分区故障的时候，仍然能够对外提供满足一致性和可用性的服务</em></p><h4 id="相互关联"><a href="#相互关联" class="headerlink" title="相互关联"></a>相互关联</h4><h5 id="CA-without-P"><a href="#CA-without-P" class="headerlink" title="CA without P"></a>CA without P</h5><h5 id="CP-without-A"><a href="#CP-without-A" class="headerlink" title="CP without A"></a>CP without A</h5><h5 id="PA-without-C"><a href="#PA-without-C" class="headerlink" title="PA without C"></a>PA without C</h5><h3 id="ACID与BASE"><a href="#ACID与BASE" class="headerlink" title="ACID与BASE"></a>ACID与BASE</h3><h4 id="ACID特性"><a href="#ACID特性" class="headerlink" title="ACID特性"></a>ACID特性</h4><h4 id="BASE原理"><a href="#BASE原理" class="headerlink" title="BASE原理"></a>BASE原理</h4><h3 id="NoSQL数据库分类"><a href="#NoSQL数据库分类" class="headerlink" title="NoSQL数据库分类"></a>NoSQL数据库分类</h3><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="NoSQL数据库原理与应用" scheme="http://tianyong.fun/categories/NoSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>第八章-基于python的数据整理</title>
    <link href="http://tianyong.fun/%E7%AC%AC%E5%85%AB%E7%AB%A0-%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E6%95%B0%E6%8D%AE%E6%95%B4%E7%90%86.html"/>
    <id>http://tianyong.fun/%E7%AC%AC%E5%85%AB%E7%AB%A0-%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E6%95%B0%E6%8D%AE%E6%95%B4%E7%90%86.html</id>
    <published>2021-01-02T11:34:58.000Z</published>
    <updated>2021-01-04T03:02:06.890Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="第八章-基于python的数据整理"><a href="#第八章-基于python的数据整理" class="headerlink" title="第八章-基于python的数据整理"></a>第八章-基于python的数据整理</h1><h2 id="合并多个数据集"><a href="#合并多个数据集" class="headerlink" title="合并多个数据集"></a>合并多个数据集</h2><p><em>pandas提供以下几种方法合并多个数据集：</em></p><p><strong>pandas.merge</strong>:<em>基于一个键或多个键连接多个DataFrame的行</em></p><p><strong>pandas.concat</strong>:<em>按行或按列将不同的对象叠加到一起</em></p><p><strong>combine_first</strong>:<em>使用一个对象中的数据填充另一个对象中对应位置的缺失值</em></p><h3 id="merge"><a href="#merge" class="headerlink" title="merge"></a>merge</h3><p><em>默认连接为类似sql的inner join操作</em></p><p><em>利用how参数，实现其它连接方式，left join, right join, outer join</em></p><h4 id="不指明使用某一列作为连接键"><a href="#不指明使用某一列作为连接键" class="headerlink" title="不指明使用某一列作为连接键"></a>不指明使用某一列作为连接键</h4><p><em>在这种情况下使用重叠列作为键进行连接</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> DataFrame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df1 = DataFrame(&#123;<span class="string">'key'</span>:[<span class="string">'b'</span>, <span class="string">'b'</span>, <span class="string">'a'</span>, <span class="string">'c'</span>, <span class="string">'a'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>], <span class="string">'data2'</span>:range(<span class="number">7</span>)&#125;)</span><br><span class="line">df2 = DataFrame(&#123;<span class="string">'key'</span>:[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>], <span class="string">'data2'</span>:range(<span class="number">3</span>)&#125;)</span><br><span class="line">pd.merge(df1, df2)</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/s9SNY6" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/03/s9SNY6.png" alt="s9SNY6.png" border="0"></a></p><h4 id="指明连接键"><a href="#指明连接键" class="headerlink" title="指明连接键"></a>指明连接键</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 等同于上例</span><br><span class="line">pd.merge(df1,df2, on=<span class="string">'key'</span>)</span><br></pre></td></tr></table></figure><h4 id="使用不同名的键连接"><a href="#使用不同名的键连接" class="headerlink" title="使用不同名的键连接"></a>使用不同名的键连接</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df3 = DataFrame(&#123;<span class="string">'lkey'</span>:[<span class="string">'b'</span>,<span class="string">'b'</span>, <span class="string">'a'</span>, <span class="string">'c'</span>, <span class="string">'a'</span>,<span class="string">'a'</span>, <span class="string">'b'</span>], <span class="string">'data1'</span>:range(<span class="number">7</span>)&#125;)</span><br><span class="line">df4 = DaraFrame(&#123;<span class="string">'rkey'</span>:[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>], <span class="string">'data2'</span>:range(<span class="number">3</span>)&#125;)</span><br><span class="line">pd.merge(df1,df2, left_on=<span class="string">'lkey'</span>, right_on=<span class="string">'rkey'</span>)</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/s9pOUI" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/03/s9pOUI.png" alt="s9pOUI.png" border="0"></a></p><h4 id="how参数"><a href="#how参数" class="headerlink" title="how参数"></a>how参数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.merge(df1, df2, how=<span class="string">'outer'</span>)</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/s99YRK" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/03/s99YRK.png" alt="s99YRK.png" border="0"></a></p><h4 id="使用多个键连接"><a href="#使用多个键连接" class="headerlink" title="使用多个键连接"></a>使用多个键连接</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">left = DataFrame(&#123;<span class="string">'key1'</span>:[<span class="string">'foo'</span>, <span class="string">'foo'</span>, <span class="string">'bar'</span>],</span><br><span class="line">                 <span class="string">'key2'</span>:[<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'one'</span>],</span><br><span class="line">                 <span class="string">'lval'</span>:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]&#125;)</span><br><span class="line">right = DataFrame(&#123;<span class="string">'key1'</span>:[<span class="string">'foo'</span>, <span class="string">'foo'</span>, <span class="string">'bar'</span>,<span class="string">'bar'</span>],</span><br><span class="line">                  <span class="string">'key2'</span>:[<span class="string">'one'</span>, <span class="string">'one'</span>, <span class="string">'one'</span>, <span class="string">'two'</span>],</span><br><span class="line">                  <span class="string">'rval'</span>:[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]&#125;)</span><br><span class="line">pd.merge(left, right, on=[<span class="string">'key1'</span>, <span class="string">'key2'</span>], how=<span class="string">'outer'</span>)</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/s9FQl6" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/03/s9FQl6.png" alt="s9FQl6.png" border="0"></a></p><h3 id="使用index进行DataFrame合并"><a href="#使用index进行DataFrame合并" class="headerlink" title="使用index进行DataFrame合并"></a>使用index进行DataFrame合并</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">left1=DataFrame(&#123;<span class="string">'key'</span>:[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'a'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>],</span><br><span class="line">                <span class="string">'value'</span>:range(<span class="number">6</span>)&#125;)</span><br><span class="line">right1=DataFrame(&#123;<span class="string">'group_val'</span>:[<span class="number">3.5</span>, <span class="number">7</span>]&#125;,</span><br><span class="line">                 index=[<span class="string">'a'</span>, <span class="string">'b'</span>])</span><br><span class="line">pd.merge(left1, right1, left_on=<span class="string">'key'</span>, right_index=<span class="literal">True</span>, how=<span class="string">'outer'</span>)</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/sCQuGT" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/03/sCQuGT.png" alt="sCQuGT.png" border="0"></a></p><h3 id="沿着横轴或纵轴串接"><a href="#沿着横轴或纵轴串接" class="headerlink" title="沿着横轴或纵轴串接"></a>沿着横轴或纵轴串接</h3><h4 id="numpy的concatenate函数"><a href="#numpy的concatenate函数" class="headerlink" title="numpy的concatenate函数"></a>numpy的concatenate函数</h4><p><em>NumPy库的concatenate函数用于串接起NumPy的原生数组</em></p><p><em>axis参数默认为0，沿着竖轴连接</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">arr = np.arange(<span class="number">12</span>).reshape((<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line">np.concatenate([arr, arr], axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/sCQ7oq" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/03/sCQ7oq.png" alt="sCQ7oq.png" border="0"></a></p><h4 id="pandas的concat函数"><a href="#pandas的concat函数" class="headerlink" title="pandas的concat函数"></a>pandas的concat函数</h4><h5 id="用于Series数据类型"><a href="#用于Series数据类型" class="headerlink" title="用于Series数据类型"></a>用于Series数据类型</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">s1 = Series([<span class="number">0</span>,<span class="number">1</span>], index=[<span class="string">'a'</span>,<span class="string">'b'</span>])</span><br><span class="line">s2 = Series([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>], index=[<span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>])</span><br><span class="line">pd.concat([s1, s2])</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">a <span class="number">0</span></span><br><span class="line">    b <span class="number">1</span></span><br><span class="line">    c <span class="number">2</span></span><br><span class="line">    d <span class="number">3</span></span><br><span class="line">    e <span class="number">4</span></span><br><span class="line">pd.concat([s1, s2], axis=<span class="number">1</span>) // 此时得到DataFrame对象，连接方式为outer join</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/sC1JC6" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/03/sC1JC6.png" alt="sC1JC6.png" border="0"></a></p><p><em>可以通过join参数修改连接方式</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s1 = Series([<span class="number">0</span>,<span class="number">1</span>], index=[<span class="string">'a'</span>,<span class="string">'b'</span>])</span><br><span class="line">s3= Series([<span class="number">5</span>,<span class="number">6</span>], index=[<span class="string">'f'</span>,<span class="string">'g'</span>])</span><br><span class="line">s4 = pd.concat([s1*<span class="number">5</span>,s3])</span><br><span class="line">pd.concat([s1, s4], axis=<span class="number">1</span>)</span><br><span class="line">pd.concat([s1, s4], axis=<span class="number">1</span>, join=<span class="string">'inner'</span>)</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/sC8qHJ" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/03/sC8qHJ.png" alt="sC8qHJ.png" border="0"></a></p><h5 id="用于DataFrame数据类型"><a href="#用于DataFrame数据类型" class="headerlink" title="用于DataFrame数据类型"></a>用于DataFrame数据类型</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df1 = DataFrame(np.arange(<span class="number">6</span>).reshape(<span class="number">3</span>,<span class="number">2</span>),index=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>],columns=[<span class="string">'one'</span>, <span class="string">'two'</span>])</span><br><span class="line">df2 = DataFrame(<span class="number">5</span>+np.arange(<span class="number">4</span>).reshape(<span class="number">2</span>,<span class="number">2</span>), index=[<span class="string">'a'</span>,<span class="string">'c'</span>], columns=[<span class="string">'three'</span>,<span class="string">'four'</span>])</span><br><span class="line">pd.concat([df1, df2], axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/sCbLlj" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/04/sCbLlj.png" alt="sCbLlj.png" border="0"></a></p><h2 id="数据重塑"><a href="#数据重塑" class="headerlink" title="数据重塑"></a>数据重塑</h2><p><em>数据重塑：是指转换输入的数据结构，使其适合后续的分析</em></p><p><em>pandas提供了数据重塑的基本操作，这些操作被用于二维度表格数据</em></p><h3 id="多级索引数据的重塑"><a href="#多级索引数据的重塑" class="headerlink" title="多级索引数据的重塑"></a>多级索引数据的重塑</h3><p><em>DataFrame可以设置多级索引。对于多级索引的数据，pandas的stack方法将数据集的列旋转为行</em></p><h4 id="stack"><a href="#stack" class="headerlink" title="stack"></a>stack</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data=DataFrame(np.arange(<span class="number">6.</span>reshape((<span class="number">2</span>,<span class="number">3</span>)),index=pd.Index([<span class="string">'ohio'</span>,<span class="string">'colorado'</span>], name=<span class="string">'state'</span>), columns=pd.Index([<span class="string">'one'</span>,<span class="string">'two'</span>,<span class="string">'three'</span>], name=<span class="string">'number'</span>))</span><br><span class="line">&gt;&gt;&gt;data.stack()</span><br></pre></td></tr></table></figure><h4 id="unstack"><a href="#unstack" class="headerlink" title="unstack"></a>unstack</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">result = data.stack()</span><br><span class="line">result = data.unstack()</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/sCXL5V" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/04/sCXL5V.png" alt="sCXL5V.png" border="0"></a></p><p><em>默认情况下转换内层级别索引，通过传递一个级别的标号或级别的别称，可以指定要转换的级别，以下两种操作方式：</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result.unstack(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result.unstack(<span class="string">'state'</span>)</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/sCxoKe" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/04/sCxoKe.png" alt="sCxoKe.png" border="0"></a></p><h3 id="应用pivot方法重塑数据"><a href="#应用pivot方法重塑数据" class="headerlink" title="应用pivot方法重塑数据"></a>应用pivot方法重塑数据</h3><h2 id="数据转换"><a href="#数据转换" class="headerlink" title="数据转换"></a>数据转换</h2><h3 id="移除重复数据"><a href="#移除重复数据" class="headerlink" title="移除重复数据"></a>移除重复数据</h3><p><em>这两个方法默认以整行判断，也可以指定进行部分列判断重复</em></p><h4 id="duplicated"><a href="#duplicated" class="headerlink" title="duplicated()"></a>duplicated()</h4><p><em>判断是否重复，返回一个bool型series</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = DataFrame(&#123;<span class="string">'k1'</span>:[<span class="string">'zhongxing'</span>,<span class="string">'Huawei'</span>]*<span class="number">3</span>+[<span class="string">'Huawei'</span>], <span class="string">'k2'</span>:[<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>]&#125;)</span><br><span class="line">data.duplicated()</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/sCzXw9" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/04/sCzXw9.png" alt="sCzXw9.png" border="0"></a></p><h4 id="drop-duplicates"><a href="#drop-duplicates" class="headerlink" title="drop_duplicates()"></a>drop_duplicates()</h4><p><em>删除重复行</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.drop_duplicates()</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/sPSCQO" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s3.ax1x.com/2021/01/04/sPSCQO.png" alt="sPSCQO.png" border="0"></a></p><h3 id="利用函数或隐射进行数据转换"><a href="#利用函数或隐射进行数据转换" class="headerlink" title="利用函数或隐射进行数据转换"></a>利用函数或隐射进行数据转换</h3><h3 id="值转换"><a href="#值转换" class="headerlink" title="值转换"></a>值转换</h3><h3 id="重命名轴索引"><a href="#重命名轴索引" class="headerlink" title="重命名轴索引"></a>重命名轴索引</h3><h3 id="离散化和面元划分"><a href="#离散化和面元划分" class="headerlink" title="离散化和面元划分"></a>离散化和面元划分</h3><h3 id="检测或过滤异常值"><a href="#检测或过滤异常值" class="headerlink" title="检测或过滤异常值"></a>检测或过滤异常值</h3><h3 id="排列和随机采样"><a href="#排列和随机采样" class="headerlink" title="排列和随机采样"></a>排列和随机采样</h3><h3 id="计算指标-哑变量"><a href="#计算指标-哑变量" class="headerlink" title="计算指标/哑变量"></a>计算指标/哑变量</h3><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据预处理技术" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>第七章-基于python的数据导入与导出</title>
    <link href="http://tianyong.fun/%E7%AC%AC%E4%B8%83%E7%AB%A0-%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E4%B8%8E%E5%AF%BC%E5%87%BA.html"/>
    <id>http://tianyong.fun/%E7%AC%AC%E4%B8%83%E7%AB%A0-%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E4%B8%8E%E5%AF%BC%E5%87%BA.html</id>
    <published>2021-01-02T09:13:44.000Z</published>
    <updated>2021-01-02T11:12:53.531Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="第七章-基于python的数据导入与导出"><a href="#第七章-基于python的数据导入与导出" class="headerlink" title="第七章-基于python的数据导入与导出"></a>第七章-基于python的数据导入与导出</h1><h2 id="Pandas"><a href="#Pandas" class="headerlink" title="Pandas"></a>Pandas</h2><p><em>pandas是python的一个开源库，提供了高性能且易于使用的数据结构及数据分析工具</em></p><p><a href="https://www.pypandas.cn/" target="_blank" rel="external nofollow noopener noreferrer">pandas中文文档</a></p><p><a href="https://pandas.pydata.org/docs/" target="_blank" rel="external nofollow noopener noreferrer">pandas官方文档</a></p><h3 id="Series"><a href="#Series" class="headerlink" title="Series"></a>Series</h3><p><em>处理一维数据</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">s = Series([<span class="number">5</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>])</span><br><span class="line">&gt;&gt;&gt;s</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="number">0</span> <span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">2</span> <span class="number">8</span></span><br><span class="line"><span class="number">3</span> <span class="number">4</span></span><br><span class="line">dtype: int64</span><br></pre></td></tr></table></figure><h4 id="index和values属性"><a href="#index和values属性" class="headerlink" title="index和values属性"></a>index和values属性</h4><p><em>通过Series的index和values属性获取元素值和index值</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s.index</span><br><span class="line">&gt;&gt;&gt;RangeIndex(start=<span class="number">0</span>, stop=<span class="number">3</span>, step=<span class="number">1</span>)</span><br><span class="line">s.values</span><br><span class="line">&gt;&gt;&gt;array([<span class="number">5</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>])</span><br></pre></td></tr></table></figure><h4 id="使用自己提供的index"><a href="#使用自己提供的index" class="headerlink" title="使用自己提供的index"></a>使用自己提供的index</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s2 = Series([<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">7</span>], index = [<span class="string">'a'</span>,<span class="string">'c'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>])</span><br><span class="line">&gt;&gt;&gt;s2</span><br><span class="line">&gt;&gt;&gt;a <span class="number">2</span></span><br><span class="line">&gt;&gt;&gt;c <span class="number">5</span></span><br><span class="line">&gt;&gt;&gt;b <span class="number">8</span></span><br><span class="line">&gt;&gt;&gt;d <span class="number">7</span></span><br><span class="line">&gt;&gt;&gt;dtype:int64</span><br><span class="line">&gt;&gt;&gt;s2.index</span><br><span class="line">&gt;&gt;&gt;Index([<span class="string">'a'</span>,<span class="string">'c'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>],dtype=<span class="string">'object'</span>)</span><br></pre></td></tr></table></figure><h4 id="访问元素"><a href="#访问元素" class="headerlink" title="访问元素"></a>访问元素</h4><h5 id="访问单个"><a href="#访问单个" class="headerlink" title="访问单个"></a>访问单个</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s2[<span class="string">'a'</span>] // <span class="number">2</span></span><br></pre></td></tr></table></figure><h5 id="访问多个"><a href="#访问多个" class="headerlink" title="访问多个"></a>访问多个</h5><p><em>返回新的Series对象</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s2[[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>]] </span><br><span class="line">a <span class="number">2</span></span><br><span class="line">b <span class="number">8</span></span><br><span class="line">d <span class="number">7</span></span><br></pre></td></tr></table></figure><h4 id="Series和实数做算数运算"><a href="#Series和实数做算数运算" class="headerlink" title="Series和实数做算数运算"></a>Series和实数做算数运算</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = Series([<span class="number">5</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>])</span><br><span class="line">&gt;&gt;&gt;s*<span class="number">2</span></span><br><span class="line"><span class="number">0</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span></span><br><span class="line"><span class="number">2</span> <span class="number">16</span></span><br><span class="line"><span class="number">3</span> <span class="number">8</span></span><br><span class="line">dtype: int64</span><br></pre></td></tr></table></figure><h4 id="Series和实数做逻辑运算"><a href="#Series和实数做逻辑运算" class="headerlink" title="Series和实数做逻辑运算"></a>Series和实数做逻辑运算</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = Series([<span class="number">5</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>])</span><br><span class="line">&gt;&gt;&gt;s&gt;<span class="number">5</span></span><br><span class="line"><span class="number">0</span> <span class="literal">False</span></span><br><span class="line"><span class="number">1</span> <span class="literal">False</span></span><br><span class="line"><span class="number">2</span> <span class="literal">True</span></span><br><span class="line"><span class="number">3</span> <span class="literal">False</span></span><br><span class="line">dtype: bool</span><br></pre></td></tr></table></figure><h4 id="bool序列来过滤Series对象"><a href="#bool序列来过滤Series对象" class="headerlink" title="bool序列来过滤Series对象"></a>bool序列来过滤Series对象</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = Series([<span class="number">5</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>])</span><br><span class="line">&gt;&gt;&gt;s[s&gt;<span class="number">5</span>]</span><br><span class="line">&gt;&gt;&gt;<span class="number">2</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><h4 id="map"><a href="#map" class="headerlink" title="map"></a>map</h4><p><em>除了可以将Series看成类似数组的结构，也可以看成定长且有序的map</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s3 = Series(&#123;<span class="string">'a'</span>:<span class="number">1</span>, <span class="string">'c'</span>:<span class="number">3</span>, <span class="string">'b'</span>:<span class="number">2</span>&#125;)</span><br><span class="line">&gt;&gt;&gt;<span class="string">'a'</span> <span class="keyword">in</span> s3</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">True</span></span><br></pre></td></tr></table></figure><h4 id="修改值和index"><a href="#修改值和index" class="headerlink" title="修改值和index"></a>修改值和index</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = Series([<span class="number">5</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>])</span><br><span class="line">s[<span class="number">0</span>]=<span class="number">9</span></span><br><span class="line">s.index = [<span class="string">'a'</span>, <span class="string">'b'</span>,<span class="string">'c'</span>, <span class="string">'d'</span>]</span><br></pre></td></tr></table></figure><h3 id="DataFrame"><a href="#DataFrame" class="headerlink" title="DataFrame"></a>DataFrame</h3><h2 id="文本文件的导入与导出"><a href="#文本文件的导入与导出" class="headerlink" title="文本文件的导入与导出"></a>文本文件的导入与导出</h2><h3 id="导入CSV文件"><a href="#导入CSV文件" class="headerlink" title="导入CSV文件"></a>导入CSV文件</h3><p><em>CSV文件：一种简单的文本，广泛用于存储表格格式的行列数据</em></p><p><em>pandas提供read_csv()，read_table()两种方式导入csv文件，返回结果为DataFrame类型</em></p><h4 id="read-csv"><a href="#read-csv" class="headerlink" title="read_csv()"></a>read_csv()</h4><p><em>默认分隔符为’,’，且只能读入这种分隔符的csv文件</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!type mycsv.csv</span><br><span class="line">df = pd.read_csv(<span class="string">'mycsv.csv'</span>)</span><br></pre></td></tr></table></figure><h4 id="read-table"><a href="#read-table" class="headerlink" title="read_table()"></a>read_table()</h4><p><em>默认分隔符为’\t’，可以读入其它分隔符CSV文件</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_table(<span class="string">'mycsv.csv'</span>, sep=<span class="string">','</span>)</span><br></pre></td></tr></table></figure><h5 id="待读取文件没属性列名称"><a href="#待读取文件没属性列名称" class="headerlink" title="待读取文件没属性列名称"></a>待读取文件没属性列名称</h5><p><em>自动以数字零开始，取名属性列</em></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pd.read_table(<span class="string">'....csv'</span>, header=<span class="literal">None</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>   <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> ....</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0</span>  . . . .</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">1</span>  . . . .</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span>  . . . .</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>....</span><br></pre></td></tr></table></figure><h5 id="自己取名列名"><a href="#自己取名列名" class="headerlink" title="自己取名列名"></a>自己取名列名</h5><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.read_table(<span class="string">'...csv'</span>, names = [.....])</span><br></pre></td></tr></table></figure><h5 id="以某一列为index"><a href="#以某一列为index" class="headerlink" title="以某一列为index"></a>以某一列为index</h5><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.read_table(<span class="string">'...csv'</span>, names=[....], index_col=<span class="string">'某一列的名字'</span>)</span><br></pre></td></tr></table></figure><h5 id="正则表达式匹配"><a href="#正则表达式匹配" class="headerlink" title="正则表达式匹配"></a>正则表达式匹配</h5><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.read_table(<span class="string">'...csv'</span>, sep=<span class="string">'/s+'</span>)</span><br></pre></td></tr></table></figure><h5 id="当第一行比后续行少一个"><a href="#当第一行比后续行少一个" class="headerlink" title="当第一行比后续行少一个"></a>当第一行比后续行少一个</h5><p><em>则相当于已有了index和属性名</em></p><h4 id="read-csv和read-table的其它参数"><a href="#read-csv和read-table的其它参数" class="headerlink" title="read_csv和read_table的其它参数"></a>read_csv和read_table的其它参数</h4><h5 id="skiprows"><a href="#skiprows" class="headerlink" title="skiprows"></a>skiprows</h5><p><em>用于文件中的一些无用行</em></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.read_csv(<span class="string">'...csv'</span>, skiprows=[<span class="number">2</span>,<span class="number">8</span>,<span class="number">9</span>])</span><br></pre></td></tr></table></figure><h5 id="nrows"><a href="#nrows" class="headerlink" title="nrows"></a>nrows</h5><p><em>只显示前n行</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.read_csv(<span class="string">'...csv'</span>, nrows=<span class="number">5</span>)</span><br></pre></td></tr></table></figure><h4 id="缺失值处理"><a href="#缺失值处理" class="headerlink" title="缺失值处理"></a>缺失值处理</h4><p><em>默认用NaN填写缺失值</em></p><h5 id="isnull"><a href="#isnull" class="headerlink" title="isnull()"></a>isnull()</h5><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.isnull(dataframe对象)</span><br></pre></td></tr></table></figure><h3 id="导出CSV文件"><a href="#导出CSV文件" class="headerlink" title="导出CSV文件"></a>导出CSV文件</h3><h3 id="JSON格式数据的导入与导出"><a href="#JSON格式数据的导入与导出" class="headerlink" title="JSON格式数据的导入与导出"></a>JSON格式数据的导入与导出</h3><h2 id="二进制文件的导入与导出"><a href="#二进制文件的导入与导出" class="headerlink" title="二进制文件的导入与导出"></a>二进制文件的导入与导出</h2><p><em>ASCII文件也称为<strong>文本文件</strong>，这du种文件在磁盘中存放时每个字符对应一个字节，用于存放对应的ASCII码。例如，数5678的存储形式为：5 6 7 8<br><strong>二进制文件</strong>是按二进制的编码方式来存放文件的。 例如， 数5678的存储形式为： 00010110 00101110只占二个字节。二进制文件虽然也可在屏幕上显示， 但其内容无法读懂。C系统在处理这些文件时，并不区分类型，都看成是字符流，按字节进行处理。 输入输出字符流的开始和结束只由程序控制而不受物理符号(如回车符)的控制。 因此也把这种文件称作“流式文件”。</em></p><p><strong>二进制文件类型很多，都有自己独特的存储方式。处理这些文件可能涉及非常复杂的过程。由于二进制文件格式复杂且不通用，数据导入工作应尽可能避免使用程序直接处理二进制格式文件</strong></p><h3 id="ExcelFile类型"><a href="#ExcelFile类型" class="headerlink" title="ExcelFile类型"></a>ExcelFile类型</h3><p><em>pandas通过<strong>ExcelFile类型</strong>提供对Excel文件的基本支持</em></p><p><em>ExcelFile类在内部使用<strong>xlrd</strong>和<strong>openpyxl包</strong>来操作Excel文件，需要提前安装</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">xls = pd.ExcelFile(<span class="string">'mydata.xls'</span>) // 首先导入excel文件，需要创建ExcelFile实例</span><br><span class="line">df = xls.parse(<span class="string">'mysheet'</span>) // 加入mydata.xls存在一个mysheet的表格，使用parse来解析它，获得一个dataframe对象</span><br></pre></td></tr></table></figure><h2 id="to-excel"><a href="#to-excel" class="headerlink" title="to_excel()"></a>to_excel()</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.DataFrame(pf).to_excel(<span class="string">'out.xlsx'</span>, sheet_name=<span class="string">'mydata'</span>,index=<span class="literal">False</span>,header=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h2 id="数据库的导入与导出"><a href="#数据库的导入与导出" class="headerlink" title="数据库的导入与导出"></a>数据库的导入与导出</h2><h3 id="关系型数据库的导入和导出"><a href="#关系型数据库的导入和导出" class="headerlink" title="关系型数据库的导入和导出"></a>关系型数据库的导入和导出</h3><h3 id="非关系型数据库的导入和导出"><a href="#非关系型数据库的导入和导出" class="headerlink" title="非关系型数据库的导入和导出"></a>非关系型数据库的导入和导出</h3><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据预处理技术" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="python" scheme="http://tianyong.fun/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>账单金额P图</title>
    <link href="http://tianyong.fun/%E8%B4%A6%E5%8D%95%E9%87%91%E9%A2%9DP%E5%9B%BE.html"/>
    <id>http://tianyong.fun/%E8%B4%A6%E5%8D%95%E9%87%91%E9%A2%9DP%E5%9B%BE.html</id>
    <published>2020-11-06T08:40:07.000Z</published>
    <updated>2020-11-06T08:41:20.351Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="账单金额P图"><a href="#账单金额P图" class="headerlink" title="账单金额P图"></a>账单金额P图</h1><p><a href="https://jingyan.baidu.com/article/066074d6497b38c3c21cb028.html" target="_blank" rel="external nofollow noopener noreferrer">URL</a></p><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="PS" scheme="http://tianyong.fun/categories/PS/"/>
    
    
  </entry>
  
  <entry>
    <title>排序算法-直接插入排序</title>
    <link href="http://tianyong.fun/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95-%E7%9B%B4%E6%8E%A5%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F.html"/>
    <id>http://tianyong.fun/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95-%E7%9B%B4%E6%8E%A5%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F.html</id>
    <published>2020-10-15T08:36:20.000Z</published>
    <updated>2020-10-17T05:51:27.836Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h2><h2 id="常识"><a href="#常识" class="headerlink" title="常识"></a>常识</h2><p><a href="https://imgchr.com/i/0T6DFf" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/10/15/0T6DFf.png" alt="0T6DFf.png" border="0"></a></p><p><a href="https://imgchr.com/i/0T6sfS" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/10/15/0T6sfS.png" alt="0T6sfS.png" border="0"></a></p><p><a href="https://imgchr.com/i/0T6jTx" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/10/15/0T6jTx.md.png" alt="0T6jTx.png" border="0"></a></p><h3 id="直接插入排序"><a href="#直接插入排序" class="headerlink" title="直接插入排序"></a>直接插入排序</h3><h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_sort</span><span class="params">(l, new)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(l)):</span><br><span class="line">        <span class="keyword">if</span> l[i] &gt;= new:</span><br><span class="line">            l.insert(i, new)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        l.append(new)  <span class="comment"># 新知识当for循环正常退出，没有遇到break的前提下，会执行else；如果遇到了就不执行else</span></span><br><span class="line">    <span class="keyword">return</span> l</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    l = list(range(<span class="number">1</span>, <span class="number">100</span>, <span class="number">2</span>))</span><br><span class="line">    print(l)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        l = insert_sort(l, random.randint(<span class="number">1</span>, <span class="number">200</span>))</span><br><span class="line">    print(l)</span><br></pre></td></tr></table></figure><h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert_sort</span><span class="params">(<span class="keyword">int</span> *a, <span class="keyword">int</span> len)</span></span>;</span><br><span class="line">main()&#123;</span><br><span class="line"><span class="keyword">int</span> a[] = &#123;<span class="number">5</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">insert_sort(a, <span class="keyword">sizeof</span>(a)/<span class="keyword">sizeof</span>(a[<span class="number">0</span>]));</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="keyword">sizeof</span>(a)/<span class="keyword">sizeof</span>(a[<span class="number">0</span>]); i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, a[i]);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert_sort</span><span class="params">(<span class="keyword">int</span> *a, <span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j, tmp;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;len; i++)&#123;</span><br><span class="line">tmp = a[i];</span><br><span class="line"><span class="keyword">for</span>(j = i<span class="number">-1</span>; j &gt;=<span class="number">0</span>; j--)&#123;</span><br><span class="line"><span class="keyword">if</span>(tmp&lt;a[j])&#123;</span><br><span class="line">a[j+<span class="number">1</span>] = a[j];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">a[j+<span class="number">1</span>]=tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">selectSort</span><span class="params">(arr)</span>:</span></span><br><span class="line">    length = len(arr)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(length<span class="number">-1</span>):</span><br><span class="line">        minIndex = i</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, length):</span><br><span class="line">            <span class="keyword">if</span> arr[i] &gt; arr[j]:</span><br><span class="line">                minIndex = j</span><br><span class="line">        <span class="keyword">if</span> i!=minIndex:</span><br><span class="line">            arr[minIndex], arr[i] = arr[i], arr[minIndex]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    arr = [<span class="number">5</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">    print(arr)</span><br><span class="line">    selectSort(arr)</span><br><span class="line">    print(arr)</span><br></pre></td></tr></table></figure><h3 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="排序算法" scheme="http://tianyong.fun/categories/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="直接插入排序" scheme="http://tianyong.fun/tags/%E7%9B%B4%E6%8E%A5%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>C语言-高级计算机语言和编译器</title>
    <link href="http://tianyong.fun/C%E8%AF%AD%E8%A8%80-%E9%AB%98%E7%BA%A7%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E5%92%8C%E7%BC%96%E8%AF%91%E5%99%A8.html"/>
    <id>http://tianyong.fun/C%E8%AF%AD%E8%A8%80-%E9%AB%98%E7%BA%A7%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E5%92%8C%E7%BC%96%E8%AF%91%E5%99%A8.html</id>
    <published>2020-09-25T07:21:08.000Z</published>
    <updated>2020-09-25T07:29:02.911Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="高级计算机语言和编译器"><a href="#高级计算机语言和编译器" class="headerlink" title="高级计算机语言和编译器"></a>高级计算机语言和编译器</h1><h2 id="高级计算机语言"><a href="#高级计算机语言" class="headerlink" title="高级计算机语言"></a>高级计算机语言</h2><p><em>高级计算机语言编程，在更抽象地层面贴近编程者思维，不用考虑计算机机器指令，使编程变得更加容易</em></p><h2 id="编译器"><a href="#编译器" class="headerlink" title="编译器"></a>编译器</h2><p><em>高级计算机语言编写的程序在计算机看来，是一堆没用的指令，需要编译器将程序编译成机器码</em></p><p><em>而且不同cpu厂商生产的处理器的指令系统和编码格式不同；其它机型编译后的机器码不能在另一个机型上使用；所以有对应不同处理器的编译器</em></p><blockquote><p>The more endeavor you make, the more luck you will gain !</p></blockquote><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="C" scheme="http://tianyong.fun/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>数据挖掘与机器学习-实验一</title>
    <link href="http://tianyong.fun/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E4%B8%8E%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E5%AE%9E%E9%AA%8C%E4%B8%80.html"/>
    <id>http://tianyong.fun/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E4%B8%8E%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E5%AE%9E%E9%AA%8C%E4%B8%80.html</id>
    <published>2020-09-23T10:22:20.000Z</published>
    <updated>2020-09-23T10:45:33.419Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="数据挖掘与机器学习-实验一"><a href="#数据挖掘与机器学习-实验一" class="headerlink" title="数据挖掘与机器学习-实验一"></a>数据挖掘与机器学习-实验一</h1><h2 id="pandas"><a href="#pandas" class="headerlink" title="pandas"></a>pandas</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><h3 id="三种数据类型"><a href="#三种数据类型" class="headerlink" title="三种数据类型"></a>三种数据类型</h3><h4 id="Series"><a href="#Series" class="headerlink" title="Series"></a>Series</h4><h4 id="DataFrame"><a href="#DataFrame" class="headerlink" title="DataFrame"></a>DataFrame</h4><h4 id><a href="#" class="headerlink" title></a></h4><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><h3 id="date-range"><a href="#date-range" class="headerlink" title="date_range"></a>date_range</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;date_time_index = pd.date_range(start=<span class="string">"2018-06-29"</span>, <span class="built_in">end</span>=<span class="string">"2018-07-02"</span>)</span><br><span class="line">&gt;&gt;&gt;date_time_index = pd.date_range(start=<span class="string">"2018-06-29"</span>, periods=<span class="number">4</span>)</span><br><span class="line">&gt;&gt;&gt;date_time_index = pd.date_range(periods=<span class="number">4</span>, <span class="built_in">end</span>=<span class="string">"2018-07-02"</span>)</span><br><span class="line">&gt;&gt;&gt;date_time_index = pd.date_range(start=<span class="string">"2018-01-01"</span>, <span class="built_in">end</span>=<span class="string">"2018-07-01"</span>, freq=<span class="string">'M'</span>)</span><br><span class="line">&gt;&gt;&gt;date_time_index = pd.date_range(start=<span class="string">"2018-01-01"</span>, <span class="built_in">end</span>=<span class="string">"2018-07-01"</span>, freq=<span class="string">'D'</span>)</span><br></pre></td></tr></table></figure><h2 id="numpy"><a href="#numpy" class="headerlink" title="numpy"></a>numpy</h2><h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><h3 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h3><h4 id="loadtxt"><a href="#loadtxt" class="headerlink" title="loadtxt"></a>loadtxt</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">input_file = <span class="string">r"xxx.txt"</span></span><br><span class="line">data = np.loadtxt(input_file, delimiter=<span class="string">','</span>)</span><br></pre></td></tr></table></figure><h2 id="matplotlib"><a href="#matplotlib" class="headerlink" title="matplotlib"></a>matplotlib</h2><h2 id="实验代码"><a href="#实验代码" class="headerlink" title="实验代码"></a>实验代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment">###STEP2###</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert_data_to_timeseries</span><span class="params">(input_file, column, verbose=False)</span>:</span></span><br><span class="line">    <span class="comment"># 导入数据</span></span><br><span class="line">    data = np.loadtxt(input_file, delimiter=<span class="string">','</span>)</span><br><span class="line">    <span class="comment"># 确定索引的开始与结束时间</span></span><br><span class="line">    start_date = str(int(data[<span class="number">0</span>,<span class="number">0</span>])) + <span class="string">'-'</span> + str(int(data[<span class="number">0</span>,<span class="number">1</span>]))</span><br><span class="line">    end_date = str(int(data[<span class="number">-1</span>,<span class="number">0</span>] + <span class="number">1</span>)) + <span class="string">'-'</span> + str(int(data[<span class="number">-1</span>,<span class="number">1</span>] % <span class="number">12</span> + <span class="number">1</span>))</span><br><span class="line">    <span class="comment">###问题一：完善函数###</span></span><br><span class="line">    <span class="comment">###提示：通过pandas的date_range函数获取索引###</span></span><br><span class="line"></span><br><span class="line">    date_time_index = pd.date_range(start=start_date, end=end_date, freq=<span class="string">'M'</span>)</span><br><span class="line">    data_timeseries = pd.Series(data[:,column], index=date_time_index)</span><br><span class="line">    <span class="keyword">return</span> data_timeseries</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###STEP3###</span></span><br><span class="line"><span class="comment"># 文件路径</span></span><br><span class="line">input_file = <span class="string">r'C:\Users\Ty\Desktop\实验手册-实验二pandas\实验手册-实验二pandas\data.txt'</span></span><br><span class="line">column_num = <span class="number">2</span></span><br><span class="line">data_timeseries = convert_data_to_timeseries(input_file, column_num)</span><br><span class="line"><span class="comment"># Plot方法成图</span></span><br><span class="line">data_timeseries.plot()</span><br><span class="line">plt.title(<span class="string">'Input data'</span>)</span><br><span class="line"><span class="comment"># # 图像太密集了，我们换一个时间范围</span></span><br><span class="line">start = <span class="string">'2007-2'</span></span><br><span class="line">end = <span class="string">'2007-11'</span></span><br><span class="line">plt.figure()</span><br><span class="line">data_timeseries[start:end].plot()</span><br><span class="line">plt.title(<span class="string">'Data from '</span> + start + <span class="string">' to '</span> + end)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ###STEP4###</span></span><br><span class="line"><span class="comment"># ###问题二：将数据的第三,四列转换为二维数据结构dataframe,索引为时间###</span></span><br><span class="line">data1 = convert_data_to_timeseries(input_file, <span class="number">2</span>)</span><br><span class="line">data2 = convert_data_to_timeseries(input_file, <span class="number">3</span>)</span><br><span class="line"><span class="comment"># # 将两组数据同时成图</span></span><br><span class="line">pd.dataframe[<span class="string">'1955'</span>:<span class="string">'1960'</span>].plot()</span><br><span class="line">plt.title(<span class="string">'Data overlapped on top of each other'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ###STEP5###</span></span><br><span class="line"><span class="comment"># # 查看两组数据是否有线性关联</span></span><br><span class="line">plt.figure()</span><br><span class="line">difference = pd.dataframe[<span class="string">'1952'</span>:<span class="string">'1955'</span>][<span class="string">'first'</span>] - pd.dataframe[<span class="string">'1952'</span>:<span class="string">'1955'</span>][<span class="string">'second'</span>]</span><br><span class="line">difference.plot()</span><br><span class="line">plt.title(<span class="string">'Difference (first - second)'</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment">###STEP6###</span></span><br><span class="line"><span class="comment">###问题三：请统计两组数组的最大最小值和均值###</span></span><br><span class="line"><span class="comment">###问题三：计算数据的相关系数，调用corr函数###</span></span><br><span class="line">print(<span class="string">'\nMaximum:\n'</span>, pd.dataframe.max())</span><br><span class="line">print(<span class="string">'\nMinimum:\n'</span>, pd.dataframe.min())</span><br><span class="line">print(<span class="string">'\nMean:\n'</span>, pd.dataframe.mean())</span><br><span class="line">print(<span class="string">'\nCorrelation coefficients:\n'</span>, pd.dataframe.corr())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###STEP7###</span></span><br><span class="line"><span class="comment"># 打印两组数据相关性</span></span><br><span class="line">plt.figure()</span><br><span class="line">pd.rolling_corr(pd.dataframe[<span class="string">'first'</span>], pd.dataframe[<span class="string">'second'</span>], window=<span class="number">60</span>).plot()</span><br><span class="line">pd.dataframe[<span class="string">'first'</span>].rolling(<span class="number">60</span>).corr(pd.dataframe[<span class="string">'second'</span>]).plot()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>C语言-数学函数</title>
    <link href="http://tianyong.fun/C%E8%AF%AD%E8%A8%80-%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0.html"/>
    <id>http://tianyong.fun/C%E8%AF%AD%E8%A8%80-%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0.html</id>
    <published>2020-09-22T08:16:06.000Z</published>
    <updated>2020-09-22T09:16:10.332Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h1><h2 id="pow"><a href="#pow" class="headerlink" title="pow"></a>pow</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pow</span>(<span class="number">2</span>,<span class="number">0.5</span>);</span><br></pre></td></tr></table></figure><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>C语言-地址</title>
    <link href="http://tianyong.fun/C%E8%AF%AD%E8%A8%80-%E5%9C%B0%E5%9D%80.html"/>
    <id>http://tianyong.fun/C%E8%AF%AD%E8%A8%80-%E5%9C%B0%E5%9D%80.html</id>
    <published>2020-09-20T09:35:29.000Z</published>
    <updated>2020-09-20T09:35:29.045Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据库原理与应用-hbase</title>
    <link href="http://tianyong.fun/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8-hbase.html"/>
    <id>http://tianyong.fun/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8-hbase.html</id>
    <published>2020-09-20T06:36:13.000Z</published>
    <updated>2020-09-20T07:48:57.230Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="hbase"><a href="#hbase" class="headerlink" title="hbase"></a>hbase</h1><h2 id="hbase安装"><a href="#hbase安装" class="headerlink" title="hbase安装"></a>hbase安装</h2><h2 id="hbase命令"><a href="#hbase命令" class="headerlink" title="hbase命令"></a>hbase命令</h2><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create &#39;user&#39;, &#39;info1&#39;, &#39;info2&#39;</span><br></pre></td></tr></table></figure><h3 id="增"><a href="#增" class="headerlink" title="增"></a>增</h3><p><em>put ‘表名’, ‘rowKey’, ‘列族 : 列’  ,  ‘值’</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">put &#39;user&#39;, &#39;1234&#39;, &#39;info1:Name&#39;, &#39;ttyong&#39;</span><br></pre></td></tr></table></figure><h3 id="删"><a href="#删" class="headerlink" title="删"></a>删</h3><p><em>delete ‘表名’,‘行名’,‘列族：列’ 来删除某个记录</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>deleteall ‘表名’,’rowkey’来删除整行记录</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>truncate ‘表名’来清空表所有的记录</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="改"><a href="#改" class="headerlink" title="改"></a>改</h3><p><em>put就是重写一遍，进行覆盖，hbase没有修改，都是追加，即对相同rowKey、列族和列名的数据再次添加即为数据的更新</em></p><h3 id="查"><a href="#查" class="headerlink" title="查"></a>查</h3><p><em>scan ‘表名’来查看表的所有记录</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>get  ‘表名’ , ‘rowKey’ 来查看某个rowKey下的所有记录</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>get ‘表名’,’rowkey’,’列族’来查看某个rowKey列族的记录</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>get ‘表名’,’rowkey’,’列族：列’来查看rowKey列族的某个列记录</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="查看存在的表"><a href="#查看存在的表" class="headerlink" title="查看存在的表"></a>查看存在的表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list &#39;user&#39;</span><br></pre></td></tr></table></figure><h3 id="查看表的具体结构"><a href="#查看表的具体结构" class="headerlink" title="查看表的具体结构"></a>查看表的具体结构</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">describe &#39;user&#39;</span><br></pre></td></tr></table></figure><h2 id="hbase遇到的问题"><a href="#hbase遇到的问题" class="headerlink" title="hbase遇到的问题"></a>hbase遇到的问题</h2><p><a href="https://imgchr.com/i/wTZSzQ" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/20/wTZSzQ.md.png" alt="wTZSzQ.md.png" border="0"></a></p><img src="https://s1.ax1x.com/2020/09/20/wTZ0eI.png" alt="wTZ0eI.png" border="0"><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><img src="https://s1.ax1x.com/2020/09/20/wTVzRg.png" alt="wTVzRg.png" border="0"><p><em>1.将regionservers里的localhost改为虚拟机名字</em></p><p><em>2.将hadoop的namenode的tmp文件删除(有更改为固定路径，就删除更改后的文件)，然后重新格式化</em></p><p><em>3.hbase的hbase-site.xml里的端口改为hadoop端口一致的8020</em></p><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数据库原理与应用" scheme="http://tianyong.fun/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言-strcpy</title>
    <link href="http://tianyong.fun/C%E8%AF%AD%E8%A8%80-strcpy.html"/>
    <id>http://tianyong.fun/C%E8%AF%AD%E8%A8%80-strcpy.html</id>
    <published>2020-09-11T08:23:44.000Z</published>
    <updated>2020-09-11T08:23:45.022Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>C语言-strcmp</title>
    <link href="http://tianyong.fun/C%E8%AF%AD%E8%A8%80-strcmp.html"/>
    <id>http://tianyong.fun/C%E8%AF%AD%E8%A8%80-strcmp.html</id>
    <published>2020-09-11T08:21:26.000Z</published>
    <updated>2020-09-11T08:21:26.114Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
