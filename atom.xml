<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>田勇的博客</title>
  
  <subtitle>比你优秀的人都努力，有什么理由不努力！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tianyong.fun/"/>
  <updated>2020-05-16T12:22:16.884Z</updated>
  <id>http://tianyong.fun/</id>
  
  <author>
    <name>TTYONG</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>线性代数-第一章</title>
    <link href="http://tianyong.fun/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E7%AC%AC%E4%B8%80%E7%AB%A0.html"/>
    <id>http://tianyong.fun/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E7%AC%AC%E4%B8%80%E7%AB%A0.html</id>
    <published>2020-05-16T00:03:41.000Z</published>
    <updated>2020-05-16T12:22:16.884Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="第一章-行列式"><a href="#第一章-行列式" class="headerlink" title="第一章 行列式"></a>第一章 行列式</h2><h3 id="二阶与三阶行列式"><a href="#二阶与三阶行列式" class="headerlink" title="二阶与三阶行列式"></a>二阶与三阶行列式</h3><p><a href="https://imgchr.com/i/YyoAun" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/16/YyoAun.png" alt="YyoAun.png" border="0"></a><br><a href="https://imgchr.com/i/YyoEBq" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/16/YyoEBq.md.png" alt="YyoEBq.md.png" border="0"></a></p><h3 id="行列式的性质"><a href="#行列式的性质" class="headerlink" title="行列式的性质"></a>行列式的性质</h3><p>*<em>性质 1 行列式与它的转置行列式相等.  *</em></p><p>*<em>性质 2 对换行列式的两行（列） ， 行列式变号  *</em></p><p><strong>推论 如果行列式两行(列)完全相同，则此行列式为0</strong></p><p><strong>性质3 行列式的某一行(列)中所有的元素都乘以同一数k,等于k乘以这个行列式</strong></p><p> <strong>推论 行列式中某一行(列)的所有元素的公因子可以提到行列式记号的外面</strong></p><p><strong>性质4 行列式中如果有两行（列） 元素成比例， 则此行列式等于零</strong></p><p><strong>性质5 若行列式的某一行（列） 的元素都是两数之和， 例如第 i 行的元素都是两数之和</strong></p><p><strong>性质 6 把行列式的某一行（列） 的各元素乘同一数然后加到另一行（列） 对<br>应的元素上去， 行列式不变</strong></p><h3 id="逆序数"><a href="#逆序数" class="headerlink" title="逆序数"></a>逆序数</h3><p><em>对于 n 个不同的元素， 先规定各元素之间有一个标准次序（例如 n 个不同的<br>自然数， 可规定由小到大为标准次序）， 于是在这 n 个元素的任一排列中， 当某一<br>对元素的先后次序与标准次序不同时， 就说它构成 1 个逆序.一个排列中所有逆<br>序的总数叫做这个排列的逆序数</em></p><h3 id="上三角法求矩阵"><a href="#上三角法求矩阵" class="headerlink" title="上三角法求矩阵"></a>上三角法求矩阵</h3><p><em>等于主对角线的乘积</em></p><h3 id="行列式按行-列-展开"><a href="#行列式按行-列-展开" class="headerlink" title="行列式按行(列)展开"></a>行列式按行(列)展开</h3><p><em>行列式等于它的任一行(列)的各元素与其对应的代数余子式乘积之和</em></p><p><em>行列式某一行（列） 的元素与另一行（列） 的对应元素的代数余子式<br>乘积之和等于零</em></p><img src="https://s1.ax1x.com/2020/05/16/Y6bih6.png" alt="Y6bih6.png" border="0"><h2 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h2><p><em>当常数项 b1， b2， …， bm 不全为零时， 线性方程组（1） 叫做<strong>n元非齐次线性方程组</strong>.</em></p><p><strong>n 元齐次线性方程组</strong></p><p><em>n 元齐次线性方程组一定有零解，可能有非零解</em></p><p><em>元素是实数的矩阵称为实矩阵， 元素是复数的矩阵称为复矩阵</em></p><p><em>只有一行的矩阵A =（a1，a2… an）称为<strong>行矩阵</strong>， 又称<strong>行向量</strong>.</em></p><p><em>只有一列的矩阵称为<strong>列矩阵</strong>， 又称<strong>列向量*</strong>.</em></p><p>  A 称为<strong>系数矩阵</strong>， x 称为<strong>未知数矩阵</strong>， b 称为<strong>常数项矩阵</strong>， B 称为<strong>增广矩阵</strong></p><p><strong>对角矩阵</strong>， <em>简称对角阵.对角阵也记作:</em><br>$$<br>A = diag（λ1， λ2， …， λn）<br>$$<br>   <em>位矩阵， 简称单位阵</em></p><h3 id="矩阵运算"><a href="#矩阵运算" class="headerlink" title="矩阵运算"></a>矩阵运算</h3><h4 id="矩阵加法"><a href="#矩阵加法" class="headerlink" title="矩阵加法"></a>矩阵加法</h4><p>（i） A +B = B +A；<br>（ii） （A +B） + C = A +（B +C） </p><h4 id="数与矩阵相乘"><a href="#数与矩阵相乘" class="headerlink" title="数与矩阵相乘"></a>数与矩阵相乘</h4><p><a href="https://imgchr.com/i/YcBNOe" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/16/YcBNOe.png" alt="YcBNOe.png" border="0"></a></p><p>（i） （λμ)A =λ（μA） ；<br>（ii） （λ +μ） A =λA +μA；<br>（iii） λ（A +B） =λA +λ B.  </p><h4 id="矩阵乘矩阵"><a href="#矩阵乘矩阵" class="headerlink" title="矩阵乘矩阵"></a>矩阵乘矩阵</h4><p><em>定义4 设A=（ai）j 是一个m×s矩阵， B=（bi）j 是一个s×n矩阵， 那么规定矩<br>阵 A 与矩阵 B 的乘积是一个 m×n 矩阵 C =（cij）</em></p><p><strong>必须注意： 只有当第一个矩阵（左矩阵） 的列数等于第二个矩阵（右矩阵） 的<br>行数时， 两个矩阵才能相乘</strong></p><p>*<em>总之， 矩阵的乘法不满足交换律， 即在一般情形下， A B≠ BA *</em><br>$$<br>（i） （A B） C = A（B C） ；<br>$$</p><p>$$<br>（ii） λ（A B） =（λA） B = A（λB） （其中λ 为数） ；<br>$$</p><p>$$<br>（iii） A（B + C） = A B +A C， （B + C） A = BA + CA.<br>$$</p><p>$$<br>对于单位矩阵 E， 容易验证E m A m × n = A m × n， A m × n E n = A m × n，或简写成E A = A E = A .<br>$$</p><h4 id="矩阵的幂"><a href="#矩阵的幂" class="headerlink" title="矩阵的幂"></a>矩阵的幂</h4><p>$$<br>A kA l = A k+l， （A k） l = A kl<br>$$</p><p>$$<br>又因矩阵乘法一般不满足交换律， 所以对于两个 n 阶矩阵 A与 B， 一般说来（A B） k≠ A k B k， 只有当 A 与 B 可交换时， 才有（A B） k = A k B k<br>$$</p><p><em>例如（A +B） 2 = A 2 +2A B + B 2、 （A - B） （A + B） = A 2 - B 2 等公式， 也只有当 A与 B 可交换时才成立</em></p><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>sql语句异常</title>
    <link href="http://tianyong.fun/sql%E8%AF%AD%E5%8F%A5%E5%BC%82%E5%B8%B8.html"/>
    <id>http://tianyong.fun/sql%E8%AF%AD%E5%8F%A5%E5%BC%82%E5%B8%B8.html</id>
    <published>2020-05-13T08:35:45.000Z</published>
    <updated>2020-05-13T09:24:21.604Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="CREATE-VIEW-不是在查询语句第一行"><a href="#CREATE-VIEW-不是在查询语句第一行" class="headerlink" title="CREATE VIEW 不是在查询语句第一行"></a>CREATE VIEW 不是在查询语句第一行</h2><p><em>前面加一个go</em></p><h2 id="CASCADE-RESTRICT-在sql-server中只能用于定义时，删除时不能用"><a href="#CASCADE-RESTRICT-在sql-server中只能用于定义时，删除时不能用" class="headerlink" title="CASCADE/RESTRICT 在sql server中只能用于定义时，删除时不能用"></a>CASCADE/RESTRICT 在sql server中只能用于定义时，删除时不能用</h2><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据库系统-空值</title>
    <link href="http://tianyong.fun/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F-%E7%A9%BA%E5%80%BC.html"/>
    <id>http://tianyong.fun/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F-%E7%A9%BA%E5%80%BC.html</id>
    <published>2020-05-12T06:09:20.000Z</published>
    <updated>2020-05-17T02:54:24.210Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="空值"><a href="#空值" class="headerlink" title="空值"></a>空值</h2><p><em>所谓空值就是<strong>不知道</strong>或 <strong>不存在</strong>或 <strong>无意义</strong>的值。</em></p><p>SQ L语言中允许某些元组的某些属性在一定情况下取空值。 一般有以下几种情况：<br>•该属性应该有一个值，但目前不知道它的具体值。例如，某学生的年龄属性，因为<br>学生登记表漏填了，不知道该学生年龄，因此取空值。<br>•该属性不应该有值。例如，缺考学生的成绩为空，因为他没有参加考试。<br>. 由于某种原因不便于填写。例如， 一个人的电话号码不想让大家知道，则取空值。  </p><h3 id="空值的产生"><a href="#空值的产生" class="headerlink" title="空值的产生"></a>空值的产生</h3><h4 id="插入时默认空值"><a href="#插入时默认空值" class="headerlink" title="插入时默认空值"></a>插入时默认空值</h4><h4 id="显示写入空值"><a href="#显示写入空值" class="headerlink" title="显示写入空值"></a>显示写入空值</h4><h4 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h4><h4 id="空值的关系运算"><a href="#空值的关系运算" class="headerlink" title="空值的关系运算"></a>空值的关系运算</h4><h3 id="空值判断"><a href="#空值判断" class="headerlink" title="空值判断"></a>空值判断</h3><p><strong>IS NULL OR IS NOT NULL</strong></p><h3 id="空值的约束"><a href="#空值的约束" class="headerlink" title="空值的约束"></a>空值的约束</h3><p><em>有not null ，加了UNIQUE限制的属性</em></p><h3 id="空值的算数运算，比较运算和逻辑运算"><a href="#空值的算数运算，比较运算和逻辑运算" class="headerlink" title="空值的算数运算，比较运算和逻辑运算"></a>空值的算数运算，比较运算和逻辑运算</h3><p><em>空值与空值运算为空值；空值与另一个值为<strong>UNKNOWN</strong>.</em></p><p><em>有了<strong>UNKNOWN</strong>后常见的二值逻辑就由TRUE,FALSE变成了三值</em></p><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数据库系统" scheme="http://tianyong.fun/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>数据库系统-视图</title>
    <link href="http://tianyong.fun/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F-%E8%A7%86%E5%9B%BE.html"/>
    <id>http://tianyong.fun/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F-%E8%A7%86%E5%9B%BE.html</id>
    <published>2020-05-12T06:08:44.000Z</published>
    <updated>2020-05-17T02:35:05.002Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><p><em>视图是从<strong>一个或几个基本表</strong>（或视图）导出的表</em></p><p><em>它与基本表不同，是一个<strong>虚表</strong>.</em></p><p><em>数据库中只<strong>*存放视图的定义</strong>，而<strong>不存放视图对应的数据</strong>，这些数据仍存放在原来的基本表中。所以一旦基本表中的数据发生变化，从视图中查询出的数据也就随之改变了</em></p><p><em>视图就像一个窗口，透过它可以看到数据库中自己感兴趣的数据及其变化</em></p><p><em>视图一经定义，就可以和基本表一样被查询、被删除。也可以在一个视图之上再定义新的视图，但对视图的更新（增 、删 、改）操作则有一定的限制</em></p><p><em>如果已有视图建立在基本表上，这时修改基本表属性，可能导致视图不能运作；可以先删除视图，建立新视图</em></p><h3 id="定义视图"><a href="#定义视图" class="headerlink" title="定义视图"></a>定义视图</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> &lt;视图名&gt;[ （&lt;列名&gt; ［,&lt;列名&gt;］ …）]</span><br><span class="line"><span class="keyword">AS</span> &lt;子查询&gt;</span><br><span class="line">［<span class="keyword">WITH</span> <span class="keyword">CHECK</span> <span class="keyword">OPTION</span>］;</span><br></pre></td></tr></table></figure><p><em>子查询<strong>可以是任意的SELECT语句</strong>，是否可以含有ORDER B Y 子句和 DISTINCT<br>短语，则取决于具体系统的实现(<strong>通常不能用ODER BY 和 DISTINCT</strong>)</em></p><p><strong>WITH CHECK OPTION</strong>表<em>示对视图进行 UPDATE、 INSERT和 DELETE操作时要<br>保证更新、插入或删除的行<strong>满足视图定义中的谓词条件（即子查询中的条件表达式</strong>）</em></p><p><em>组成视图的属性列名或者全部省略或者全部指定，没有第三种选择</em></p><p>但在下列三种情况下<strong>必须明确指定组成视图的所有列名</strong>：<br>（1） 某个目标列不是单纯的属性名，而是聚集函数或列表达式<br>（2 ） 多表连接时选出了几个同名列作为视图的字段<br>（3 ） 需要在视图中为某个列启用新的更合适的名字  </p><h4 id="建立在一个基本表"><a href="#建立在一个基本表" class="headerlink" title="建立在一个基本表"></a>建立在一个基本表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> IS_Student</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> Sno,Sname,Sage</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Sdept=<span class="string">'IS'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> IS_Student</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> Sno,Sname,Sage</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Sdept=<span class="string">'IS'</span></span><br><span class="line"><span class="keyword">WITH</span> <span class="keyword">CHECK</span> <span class="keyword">OPTION</span>;</span><br><span class="line"><span class="comment">/*由于在定义IS_Student视图时加上了 WITH CHECK OPT1ON子句，以后对该视图进</span></span><br><span class="line"><span class="comment">行插入、修改和删除操作时，关系数据库管理系统会自动加上Sdept='IS'的条件。*/</span></span><br></pre></td></tr></table></figure><p><em>关系数据库管理系统执行CREATE VIEW 语句的结果只是把视图的定义存入<strong>数据字<br>典</strong>，<strong>并不执行其中的SELECT语句。只是在</strong>对视图查询时，才按视图的定义从基本表中将数据査出</em>  </p><p><em>若一个视图是从单个基本表导出的，并且只是去掉了基本表的某些行和某些列，但<br>保留了主码，则称这类视图为<strong>行列子集视图</strong>。 IS_Student视图就是一个行列子集视图</em></p><h4 id="建立在多个基本表"><a href="#建立在多个基本表" class="headerlink" title="建立在多个基本表"></a>建立在多个基本表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> IS_Sl(Sno,Sname,Grade)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> Student.Sno,Sname,Grade</span><br><span class="line"><span class="keyword">FROM</span> Student,SC</span><br><span class="line"><span class="keyword">WHERE</span> Sdept=<span class="string">'IS'</span> <span class="keyword">AND</span></span><br><span class="line">Student.Sno=SC.Sno <span class="keyword">AND</span></span><br><span class="line">SC.Cno=<span class="string">'1'</span>;</span><br></pre></td></tr></table></figure><p><em>由于视图IS_S1的属性列中包含了 Student表 与 SC 表的同名列Sno ,所以必须在视图名后面明确说明视图的各个属性列名。</em></p><p><em>由基本数据经过各种计算派生出的数据一般是不存储的。这些派生属性由于在基本表中并不实际存在，也称它们为虚拟列。带虚拟列的视图也称为<strong>带表达式的视图</strong>。</em>    </p><h4 id="建立在一个视图上"><a href="#建立在一个视图上" class="headerlink" title="建立在一个视图上"></a>建立在一个视图上</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> IS_S2</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> Sno,Sname,Grade</span><br><span class="line"><span class="keyword">FROM</span> IS_S1</span><br><span class="line"><span class="keyword">WHERE</span> Grade&gt;=<span class="number">90</span>;</span><br></pre></td></tr></table></figure><h4 id="建立在多个视图上"><a href="#建立在多个视图上" class="headerlink" title="建立在多个视图上"></a>建立在多个视图上</h4><h4 id="分组视图"><a href="#分组视图" class="headerlink" title="分组视图"></a>分组视图</h4><p><em>GROUP BY 子句的查询来定义视图，这种视图称为分组视图</em></p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> S_G(Sno,Gavg)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> Sno,<span class="keyword">AVG</span>(Grade)</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Sno;</span><br><span class="line"><span class="comment">/*由于AS子句中SELECT语句的目标列平均成绩是通过作用聚集函数得到的，所CREATE VIEW 中必须明确定义组成S_G 视图的各个属性列名。 S_G 是一个分组视图*/</span></span><br></pre></td></tr></table></figure><h4 id="删除视图"><a href="#删除视图" class="headerlink" title="删除视图"></a>删除视图</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> &lt;视图名&gt; ［<span class="keyword">CASCADE</span>］ ;</span><br></pre></td></tr></table></figure><p><em>视图删除后<strong>视图的定义将从数据字典中删除</strong>。如果该视图上还导出了其他视图，则使用 <strong>CASCADE级联</strong>删除语句把该视图和由它导出的所有视图一起删除</em></p><p> <em>基本表删除后，由该基本表导出的所有视图均无法使用了，但是视图的定义没有从<br>字典中清除。删除这些视图定义需要显式地使用DROP VIEW 语句</em></p><h3 id="查询视图"><a href="#查询视图" class="headerlink" title="查询视图"></a>查询视图</h3><p><em>与查询基本表差不多</em></p><p><em>关系数据库管理系统执行对视图的查询时，<strong>首先</strong>进行有效性检查，检查查询中涉及的表 、视图等是否存在。<strong>如果存在，则</strong>从数据字典中取出视图的定义，把定义中的子查询和用户的查询结合起来，<strong>转换成等价的对基本表的查询</strong>，然后再执行修正了的查询。这一转换过程称为<strong>视图消解</strong>(view resolution)</em> </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Sno,Sage</span><br><span class="line"><span class="keyword">FROM</span> IS_Student</span><br><span class="line"><span class="keyword">WHERE</span> Sage&lt;<span class="number">20</span>;</span><br><span class="line"><span class="comment">/*本例转换后的查询语句为*/</span></span><br><span class="line"><span class="keyword">SELECT</span> Sno,Sage</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Sdept=<span class="string">'lS'</span> <span class="keyword">AND</span> Sage&lt;<span class="number">20</span>;</span><br></pre></td></tr></table></figure><p><strong>而有时候可能出现转换错误</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> S_G</span><br><span class="line"><span class="keyword">WHERE</span> Gavg&gt;=<span class="number">90</span>;</span><br><span class="line"><span class="comment">/*将本例中的查询语句与定义S_G 视图的子查询结合，形成下列查询语句：*/</span></span><br><span class="line"><span class="keyword">SELECT</span> Sno,<span class="keyword">AVG</span>(Grade)</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">AVG</span>(Grade)&gt;=<span class="number">90</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Sno;</span><br></pre></td></tr></table></figure><p><em>WHERE子句中是不能用聚集函数作为条件表达式的，因此执行此修正后的查询<br>将会出现语法错误</em></p><p><em>目前多数关系数据库系统对<strong>行列子集视图</strong>的查询均能进行正确转换。但对非行列<br>子 集 视 图 的 查 询  就 不 一 定 能 做 转 换 了 ，因此这类查询应该直接对<strong>基本表</strong>进行 。</em>  </p><p><em>定义视图并查询视图与基于派生表的查询是有区别的。视图一旦定义，其定义将永<br>久保存在数据字典中，之后的所有查询都可以直接引用该视图。而派生表只是在语句执行时临时定义，语句执行后该定义即被删除</em>  </p><h3 id="更新视图"><a href="#更新视图" class="headerlink" title="更新视图"></a>更新视图</h3><h4 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE"></a>UPDATE</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> IS_Student</span><br><span class="line"><span class="keyword">SET</span> Sname=<span class="string">'刘辰'</span>，</span><br><span class="line"><span class="keyword">WHERE</span> Sno=<span class="string">'201215122'</span>;</span><br><span class="line">转换后的更新语句为</span><br><span class="line"><span class="keyword">UPDATE</span> Student</span><br><span class="line"><span class="keyword">SET</span> Sname=<span class="string">'刘辰'</span>，</span><br><span class="line"><span class="keyword">WHERE</span> Sno=<span class="string">'201215122'</span> <span class="keyword">AND</span> Sdept=<span class="string">'IS'</span>;</span><br></pre></td></tr></table></figure><h4 id="INSERT"><a href="#INSERT" class="headerlink" title="INSERT"></a>INSERT</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">INTO</span> IS_Student</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'201215129'</span>, <span class="string">'丁赵新'</span>,<span class="number">20</span>);</span><br><span class="line">转换为对基本表的更新：</span><br><span class="line"><span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">INTO</span> Student(Sno,Sname,Sage,Sdept)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'2O1215129'</span>,<span class="string">'赵新'</span>,<span class="number">20</span>,<span class="string">'IS'</span>);</span><br></pre></td></tr></table></figure><h4 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> IS_Student</span><br><span class="line"><span class="keyword">WHERE</span> Sno=<span class="string">'201215129'</span>；</span><br><span class="line">转换为对基本表的更新：</span><br><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Sno=<span class="string">'201215129'</span> <span class="keyword">AND</span> Sdept=<span class="string">'IS'</span>;</span><br></pre></td></tr></table></figure><p><em>在关系数据库中，<strong>并不是所有的视图都是可更新的</strong>，因为有些视图的更新不能唯一地有意义地转换成对相应基本表的更新</em></p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> S_G（Sno,Gavg）</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> Sno,<span class="keyword">AVG</span>（Grade）</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Sno;</span><br><span class="line"><span class="comment">/*如果想把视图S_G 中学号为“ 201215121 ” 的学生的平均成绩改成9 0 分 ， SQL语句如下：*/</span></span><br><span class="line"><span class="keyword">UPDATE</span> S_G</span><br><span class="line"><span class="keyword">SET</span> Gavg=<span class="number">90</span></span><br><span class="line"><span class="keyword">WHERE</span> Sno=<span class="string">'20121512'</span>；</span><br></pre></td></tr></table></figure><p><em>但这个对视图的更新是无法转换成对基本表S C 的更新的，因为系统无法修改各科成绩，以使平均成绩成为90。所 以 S_G 视图是不可更新的。</em></p><p><em>一般地，行列子集视图是可更新的</em>  </p><h4 id="受限更新"><a href="#受限更新" class="headerlink" title="受限更新"></a>受限更新</h4><p><strong>例如， DB2规定:</strong><br>（1 ） 若视图是由两个以上基本表导出的，则此视图不允许更新。<br>（2 ） 若视图的字段来自字段表达式或常数，则不允许对此视图执行INSERT和 UPDATE操作，但允许执行DELETE操作。<br>（3 ） 若视图的字段来自<strong>聚集函数</strong>，则此视图不允许更新。<br>（4 ） 若视图定义中含有<strong>GROUP BY</strong>子句，则此视图不允许更新。<br>（5） 若视图定义中含有<strong>DISTINCT</strong>短语，则此视图不允许更新。<br>（6 ）若视图定义中<strong>有嵌套查询，并且内层查询的FROM 子句</strong>中涉及的表也是导出该视图的基本表，则此视图不允许更新。  </p><h3 id="视图作用"><a href="#视图作用" class="headerlink" title="视图作用"></a>视图作用</h3><ul><li>视图能够简化用户的操作  </li><li>视图使用户能以多种角度看待同一数据  </li><li>视图对重构数据库提供了一定程度的逻辑独立性  </li><li>视图能够对机密数据提供安全保护  </li><li>适当利用视图可以更清晰地表达查询  </li></ul><h3 id="视图查看"><a href="#视图查看" class="headerlink" title="视图查看"></a>视图查看</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sp_helptext 视图名</span><br></pre></td></tr></table></figure><h3 id="视图加密"><a href="#视图加密" class="headerlink" title="视图加密"></a>视图加密</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> 视图名</span><br><span class="line"></span><br><span class="line"><span class="keyword">WITH</span> ENCRYPTION <span class="comment">-- 加密</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">sp_helptext 视图名 报错</span><br></pre></td></tr></table></figure><hr><blockquote><p>即使慢，驰而不息，纵会落后，纵会失败，但一定可以达到他所向的目标。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数据库系统" scheme="http://tianyong.fun/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>hadoop理论课-第六章Hbase, Hive, Pig</title>
    <link href="http://tianyong.fun/hadoop%E7%90%86%E8%AE%BA%E8%AF%BE-%E7%AC%AC%E5%85%AD%E7%AB%A0Hbase,%20Hive,%20Pig.html"/>
    <id>http://tianyong.fun/hadoop%E7%90%86%E8%AE%BA%E8%AF%BE-%E7%AC%AC%E5%85%AD%E7%AB%A0Hbase,%20Hive,%20Pig.html</id>
    <published>2020-05-11T08:09:32.000Z</published>
    <updated>2020-05-11T09:43:27.493Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="Hbase"><a href="#Hbase" class="headerlink" title="Hbase"></a>Hbase</h2><p><em>采用列式存储</em></p><h3 id="行式存储和列式存储"><a href="#行式存储和列式存储" class="headerlink" title="行式存储和列式存储"></a>行式存储和列式存储</h3><img src="https://s1.ax1x.com/2020/05/11/YJmulD.png" alt="YJmulD.png" border="0"><h4 id="OLTP-amp-OLAP"><a href="#OLTP-amp-OLAP" class="headerlink" title="OLTP &amp; OLAP"></a>OLTP &amp; OLAP</h4><h5 id="OLTP"><a href="#OLTP" class="headerlink" title="OLTP"></a>OLTP</h5><p><em>On-Line Transaction Processing（联机事务处理过程）。<br>也称为面向交易的处理过程，其基本特征是前台接收的用户数据可以立即传送到计算中心进行处理，并在很短的时间内给出处理结果，是对用户操作快速响应的方式之一。</em></p><p><em>典型案例：银行转账</em></p><p>（1）对于单列，获取频率较高，就使用列式存储。<br>（2）如果针对多列查询，使用并行处理查询效率也是很高，可采用列式存储。<br>（3）对于大数据的环境，利于数据压缩和线性扩展，也可以采用列式存储。<br>（4）事务使用率不高，数据量非常大。<br>（5）对于更新某些行的频率不高，也可以选择列式存储</p><h5 id="OLAP"><a href="#OLAP" class="headerlink" title="OLAP"></a>OLAP</h5><p><em>On-Line Analytic Processing（联机分析处理过程）。<br>OLAP是数据仓库系统的主要应用，支持复杂的分析操作，侧重决策支持，并且提供直观易懂的查询结果。</em></p><p><em>典型案例：商品推荐</em></p><p>（1）关系之间的解决方案，表与表之关联大，可以采用行式存储。主键–外键<br>（2）强事务特性，如消费、资金的业务。<br>（3）如数据小于千万级，可考虑行式存储</p><p><strong>OLTP是用于事务和查询处理<br>OLAP用于数据分析</strong></p><h3 id="Hbase简介"><a href="#Hbase简介" class="headerlink" title="Hbase简介"></a>Hbase简介</h3><p><em>HBase是一个分布式的、面向列的开源数据库，该技术来源于Google论文。HBase在Hadoop之上提供了类似于Bigtable的能力。</em></p><h4 id="HBase的特性"><a href="#HBase的特性" class="headerlink" title="HBase的特性"></a>HBase的特性</h4><p><strong>伸缩性</strong>：表可以很“高”（数十亿个数据行），可以很“宽”（数百万个列）。<br><strong>自动分区</strong>：当表增长时，表会自动分裂成Region，并分布到可用节点上。<br><strong>线性扩展和对于新节点的自动处理</strong>：增加节点，指它指向RegionServer，Region自动负载均衡。<br><strong>普通商用硬件支持</strong><br><strong>容错</strong>：HBase在Hadoop的文件系统之上，利用了Hadoop的文件系统（HDFS）提供的容错能力。<br><strong>检索性能</strong>：HBase是一个数据模型，类似于谷歌的大表设计，可以提供快速随机访问海量结构化数据。</p><h4 id="HBase数据模型"><a href="#HBase数据模型" class="headerlink" title="HBase数据模型"></a>HBase数据模型</h4><h5 id="关系型数据库和Hbase对比"><a href="#关系型数据库和Hbase对比" class="headerlink" title="关系型数据库和Hbase对比"></a>关系型数据库和Hbase对比</h5><p><a href="https://imgchr.com/i/YJQCZQ" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/11/YJQCZQ.md.png" alt="YJQCZQ.png" border="0"></a></p><h5 id="列族存储的概念"><a href="#列族存储的概念" class="headerlink" title="列族存储的概念"></a>列族存储的概念</h5><p><a href="https://imgchr.com/i/YJQReg" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/11/YJQReg.md.png" alt="YJQReg.png" border="0"></a></p><img src="https://s1.ax1x.com/2020/05/11/YJ3xYj.png" alt="YJ3xYj.png" border="0"><h5 id="列数据属性"><a href="#列数据属性" class="headerlink" title="列数据属性"></a>列数据属性</h5><img src="https://s1.ax1x.com/2020/05/11/YJ8Yhd.png" alt="YJ8Yhd.png" border="0"><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hadoop" scheme="http://tianyong.fun/categories/Hadoop/"/>
    
    
  </entry>
  
  <entry>
    <title>算法-第二章</title>
    <link href="http://tianyong.fun/%E7%AE%97%E6%B3%95-%E7%AC%AC%E4%BA%8C%E7%AB%A0.html"/>
    <id>http://tianyong.fun/%E7%AE%97%E6%B3%95-%E7%AC%AC%E4%BA%8C%E7%AB%A0.html</id>
    <published>2020-05-10T10:17:27.000Z</published>
    <updated>2020-05-10T11:15:42.683Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><h3 id="数组和链表"><a href="#数组和链表" class="headerlink" title="数组和链表"></a>数组和链表</h3><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p><em>在内存中需要分配连续的存储空间</em></p><p><em>支持顺序访问和随机访问</em></p><p><strong>数组擅长随机访问，链表擅长删除和插入</strong></p><h4 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h4><p><em>链表中的元素可以存储在内存中任何地方</em></p><p><em>只支持顺序访问</em></p><p><em>每个元素存储了下一个元素的位置，将每个元素连接起来</em></p><p><em>对于需要直接定位到某个元素，链表比数组效率要低，因为需要上一个元素知道下一个元素的地址</em></p><p><em>删除和插入操作，链表比数组跟高效</em></p><p><em>删除一定会成功，插入不一定，因为可能内存不够</em></p><img src="https://s1.ax1x.com/2020/05/10/Y3zj9x.png" alt="Y3zj9x.png" border="0"><p><em>链表和数组混合使用</em></p><h3 id="选择排序-1"><a href="#选择排序-1" class="headerlink" title="选择排序"></a>选择排序</h3><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="算法" scheme="http://tianyong.fun/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>算法-第一章</title>
    <link href="http://tianyong.fun/%E7%AE%97%E6%B3%95-%E7%AC%AC%E4%B8%80%E7%AB%A0.html"/>
    <id>http://tianyong.fun/%E7%AE%97%E6%B3%95-%E7%AC%AC%E4%B8%80%E7%AB%A0.html</id>
    <published>2020-05-10T00:59:22.000Z</published>
    <updated>2020-05-10T10:19:37.717Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><h2 id="算法简介"><a href="#算法简介" class="headerlink" title="算法简介"></a>算法简介</h2><p><em>算法是一组完成任务的指令。任何代码都可以叫做算法</em></p><h3 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h3><p><em>二分查找时一种算法，其输入是一个<strong>有序</strong>的元素列表</em></p><h4 id="次数"><a href="#次数" class="headerlink" title="次数"></a>次数</h4><p><em>1到100的数字集，只需要<strong>7步</strong>就可以找到正确的数值</em></p><p><em>一般而言，对于包含n个元素的列表，用二分查找最多需：</em><br>$$<br>log2n<br>$$</p><h4 id="python实现"><a href="#python实现" class="headerlink" title="python实现"></a>python实现</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_search</span><span class="params">(list, item)</span>:</span></span><br><span class="line">    low = <span class="number">0</span></span><br><span class="line">    high = len(list) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> low &lt;= high:</span><br><span class="line">        mid = (low + high) / <span class="number">2</span></span><br><span class="line">        guess = list[mid]</span><br><span class="line">        <span class="keyword">if</span> guess &gt; item:</span><br><span class="line">            high = mid - <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> guess &lt; item:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">            <span class="keyword">return</span> mid</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><h4 id="运行时间"><a href="#运行时间" class="headerlink" title="运行时间"></a>运行时间</h4><p>简单查询(线性时间)：O(n)</p><p>二分查找(对数时间)：O(log2n)</p><h3 id="大O表示法"><a href="#大O表示法" class="headerlink" title="大O表示法"></a>大O表示法</h3><p><em>大O表示法能够比较操作次数，它指出了算法运行时间的增速</em></p><p><em>表示的是最糟糕情况下的时间</em></p><p><strong>除最糟糕情况下的运行时间外，还应该考虑平均情况的运行时间，这是很重要的</strong></p><p><em>大O表示法并不考虑乘以，除以，加上，减去的数字</em></p><p><em>常见的五种大O运行时间：</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">O(log2n)  对数时间  二分查找</span><br><span class="line"></span><br><span class="line">O(n)  线性时间，简单查找</span><br><span class="line"></span><br><span class="line">O(n*log2n)  快速排序</span><br><span class="line"></span><br><span class="line">O(n^2)  一种速度较慢的排序方法</span><br><span class="line"></span><br><span class="line">O(n!)  旅行商问题</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/Y17M6I" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/10/Y17M6I.md.png" alt="Y17M6I.png" border="0"></a></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p><em>算法的速度并非指时间，而是操作数的增速</em></p><p><em>谈论算法的时间时，我们说的是输入的增加，其运行时间以什么样的速度增加</em></p><p><em>算法的时间并不以秒为单位</em></p><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="算法" scheme="http://tianyong.fun/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="二分查找" scheme="http://tianyong.fun/tags/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
    
  </entry>
  
  <entry>
    <title>tkinter常用组件目录</title>
    <link href="http://tianyong.fun/tkinter%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6%E7%9B%AE%E5%BD%95.html"/>
    <id>http://tianyong.fun/tkinter%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6%E7%9B%AE%E5%BD%95.html</id>
    <published>2020-05-08T15:07:58.000Z</published>
    <updated>2020-05-08T15:08:10.572Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><p><a href="https://www.cnblogs.com/kongzhagen/p/6145437.html" target="_blank" rel="external nofollow noopener noreferrer">https://www.cnblogs.com/kongzhagen/p/6145437.html</a></p><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>tkinter之checkbutton</title>
    <link href="http://tianyong.fun/tkinter%E4%B9%8Bcheckbutton.html"/>
    <id>http://tianyong.fun/tkinter%E4%B9%8Bcheckbutton.html</id>
    <published>2020-05-08T14:34:55.000Z</published>
    <updated>2020-05-08T16:00:10.328Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="checkbutton"><a href="#checkbutton" class="headerlink" title="checkbutton"></a>checkbutton</h2><h3 id="状态值"><a href="#状态值" class="headerlink" title="状态值"></a>状态值</h3><p><em>具有on和off两种状态</em></p><h4 id="设置状态值为0-1"><a href="#设置状态值为0-1" class="headerlink" title="设置状态值为0,1"></a>设置状态值为0,1</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">on为<span class="number">1</span>， off为<span class="number">0</span></span><br><span class="line">intvar = IntVar()</span><br><span class="line">checkbt = Checkbutton(root, text=<span class="string">''</span>, varibale=intvar, command=...)</span><br></pre></td></tr></table></figure><h4 id="设置状态值为设置的值"><a href="#设置状态值为设置的值" class="headerlink" title="设置状态值为设置的值"></a>设置状态值为设置的值</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stringVar = StringVar()</span><br><span class="line">checkbt = Checkbutton(root, text=<span class="string">''</span>, varibale=stringVar, onvalue=<span class="string">'AA'</span>, offvalue=<span class="string">'BB'</span>, command=...)</span><br></pre></td></tr></table></figure><h3 id="获取复选框文本值"><a href="#获取复选框文本值" class="headerlink" title="获取复选框文本值"></a>获取复选框文本值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">value = checkbutton[<span class="string">'text'</span>]</span><br></pre></td></tr></table></figure><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>tkinter之Text</title>
    <link href="http://tianyong.fun/tkinter%E4%B9%8BText.html"/>
    <id>http://tianyong.fun/tkinter%E4%B9%8BText.html</id>
    <published>2020-05-08T06:07:36.000Z</published>
    <updated>2020-05-08T13:59:39.186Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="Tkinter"><a href="#Tkinter" class="headerlink" title="Tkinter"></a>Tkinter</h1><p><em>Text（文本）组件用于显示和处理多行文本。在 Tkinter 的所有组件中，Text 组件显得异常强大和灵活，适用于多种任务。虽然该组件的主要目的是显示多行文本，但它常常也被用于作为简单的文本编辑器和网页浏览器使用</em></p><p><em>Text 组件用于显示文本文档，包含纯文本或格式化文本（使用不同字体，嵌入图片，显示链接，甚至是带 CSS 格式的 HTML 等）</em></p><h2 id="写入内容"><a href="#写入内容" class="headerlink" title="写入内容"></a>写入内容</h2><h3 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"> </span><br><span class="line">root = tk.Tk()</span><br><span class="line"> </span><br><span class="line">text = tk.Text(root)</span><br><span class="line">text.pack()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># "insert" 索引表示插入光标当前的位置</span></span><br><span class="line">text.insert(<span class="string">"insert"</span>, <span class="string">"I love "</span>)</span><br><span class="line">text.insert(<span class="string">"end"</span>, <span class="string">"Python.com!"</span>)</span><br><span class="line"> </span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure><h4 id="指定标签"><a href="#指定标签" class="headerlink" title="指定标签"></a>指定标签</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"> </span><br><span class="line">root = tk.Tk()</span><br><span class="line"> </span><br><span class="line">text = tk.Text(root, width=<span class="number">20</span>, height=<span class="number">5</span>)</span><br><span class="line">text.pack()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置 tag</span></span><br><span class="line">text.tag_config(<span class="string">"tag_1"</span>, backgroun=<span class="string">"yellow"</span>, foreground=<span class="string">"red"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># "insert" 索引表示插入光标当前的位置</span></span><br><span class="line">text.insert(<span class="string">"insert"</span>, <span class="string">"I love "</span>)</span><br><span class="line">text.insert(<span class="string">"end"</span>, <span class="string">"FishC.com!"</span>, <span class="string">"tag_1"</span>)</span><br><span class="line"> </span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p><em>在 Text 组件中插入对象，可以使用 window_create() 和 image_create() 方法</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"> </span><br><span class="line">root = tk.Tk()</span><br><span class="line"> </span><br><span class="line">text = tk.Text(root, width=<span class="number">20</span>, height=<span class="number">5</span>)</span><br><span class="line">text.pack()</span><br><span class="line"> </span><br><span class="line">text.insert(<span class="string">"insert"</span>, <span class="string">"I love Python!"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"哎呀，我被点了一下~"</span>)</span><br><span class="line">    </span><br><span class="line">b1 = tk.Button(text, text=<span class="string">"点我点我"</span>, command=show)</span><br><span class="line">text.window_create(<span class="string">"insert"</span>, window=b1)</span><br><span class="line"> </span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure><h2 id="删除内容"><a href="#删除内容" class="headerlink" title="删除内容"></a>删除内容</h2><h3 id="全部内容"><a href="#全部内容" class="headerlink" title="全部内容"></a>全部内容</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text.delete(<span class="number">1.0</span>, <span class="string">"end"</span>)</span><br></pre></td></tr></table></figure><h3 id="删除一个对象"><a href="#删除一个对象" class="headerlink" title="删除一个对象"></a>删除一个对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text.delete(object)</span><br></pre></td></tr></table></figure><h2 id="获取内容"><a href="#获取内容" class="headerlink" title="获取内容"></a>获取内容</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">contents = text.get(<span class="number">1.0</span>, <span class="string">"end"</span>)</span><br></pre></td></tr></table></figure><h2 id="index"><a href="#index" class="headerlink" title="index()"></a>index()</h2><p><em>index() 方法用于将所有支持的“索引”格式（请参考下方【Indexes 用法】）转换为“行.列”格式的索引号</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"> </span><br><span class="line">root = tk.Tk()</span><br><span class="line"> </span><br><span class="line">text = tk.Text(root, width=<span class="number">20</span>, height=<span class="number">5</span>)</span><br><span class="line">text.pack()</span><br><span class="line"> </span><br><span class="line">print(text.index(<span class="string">"insert"</span>))</span><br><span class="line">text.insert(<span class="string">"insert"</span>, <span class="string">"You are good!"</span>)</span><br><span class="line">print(text.index(<span class="string">"insert"</span>))</span><br><span class="line"> </span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure><h2 id="mark-set"><a href="#mark-set" class="headerlink" title="mark_set()"></a>mark_set()</h2><p><em>如果你需要跟踪一个位置，那么你可以将该位置“标记”下来</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"> </span><br><span class="line">root = tk.Tk()</span><br><span class="line"> </span><br><span class="line">text = tk.Text(root, width=<span class="number">20</span>, height=<span class="number">5</span>)</span><br><span class="line">text.pack()</span><br><span class="line"> </span><br><span class="line">text.insert(<span class="string">"insert"</span>, <span class="string">"You are good!"</span>)</span><br><span class="line">text.mark_set(<span class="string">"here"</span>, <span class="string">'1.8'</span>)</span><br><span class="line">text.insert(<span class="string">"here"</span>, <span class="string">"very "</span>)</span><br><span class="line"> </span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure><h2 id="search"><a href="#search" class="headerlink" title="search()"></a>search()</h2><h2 id="文本换行输入"><a href="#文本换行输入" class="headerlink" title="文本换行输入"></a>文本换行输入</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text.insert(END/INSERT, <span class="string">'..../n'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">text.insert(...)</span><br><span class="line">text.insert(INSERT, <span class="string">'/n'</span>)</span><br></pre></td></tr></table></figure><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="tkinter" scheme="http://tianyong.fun/categories/tkinter/"/>
    
    
      <category term="Text" scheme="http://tianyong.fun/tags/Text/"/>
    
  </entry>
  
  <entry>
    <title>java笔记</title>
    <link href="http://tianyong.fun/java%E7%AC%94%E8%AE%B0.html"/>
    <id>http://tianyong.fun/java%E7%AC%94%E8%AE%B0.html</id>
    <published>2020-05-07T03:41:57.000Z</published>
    <updated>2020-05-07T04:18:48.810Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="eclipse代码快速排版"><a href="#eclipse代码快速排版" class="headerlink" title="eclipse代码快速排版"></a>eclipse代码快速排版</h2><p><em>ctrl+shif+f</em></p><h2 id><a href="#" class="headerlink" title></a></h2><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="java" scheme="http://tianyong.fun/categories/java/"/>
    
    
      <category term="java" scheme="http://tianyong.fun/tags/java/"/>
    
      <category term="排版" scheme="http://tianyong.fun/tags/%E6%8E%92%E7%89%88/"/>
    
      <category term="对齐" scheme="http://tianyong.fun/tags/%E5%AF%B9%E9%BD%90/"/>
    
  </entry>
  
  <entry>
    <title>hadoop笔记</title>
    <link href="http://tianyong.fun/hadoop%E7%AC%94%E8%AE%B0.html"/>
    <id>http://tianyong.fun/hadoop%E7%AC%94%E8%AE%B0.html</id>
    <published>2020-05-07T01:54:26.000Z</published>
    <updated>2020-05-07T02:47:11.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="eclipse关联hadoop源码"><a href="#eclipse关联hadoop源码" class="headerlink" title="eclipse关联hadoop源码"></a>eclipse关联hadoop源码</h2><p><em>解压hadoop-2.7.1-src.tar.gz</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzf hadoop-2.7.1-src.tar.gz*</span><br></pre></td></tr></table></figure><p><em>eclipse选择解压后的文件</em></p><h2 id><a href="#" class="headerlink" title></a></h2><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hadoop" scheme="http://tianyong.fun/categories/Hadoop/"/>
    
    
      <category term="hadoop源码" scheme="http://tianyong.fun/tags/hadoop%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>数据库系统-数据更新</title>
    <link href="http://tianyong.fun/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F-%E6%95%B0%E6%8D%AE%E6%9B%B4%E6%96%B0.html"/>
    <id>http://tianyong.fun/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F-%E6%95%B0%E6%8D%AE%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-05-06T05:36:58.000Z</published>
    <updated>2020-05-17T02:08:49.126Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="数据更新"><a href="#数据更新" class="headerlink" title="数据更新"></a>数据更新</h2><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><h4 id="插入元组"><a href="#插入元组" class="headerlink" title="插入元组"></a>插入元组</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*全部属性插入值*/</span></span><br><span class="line"><span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">INTO</span> TABLENAME</span><br><span class="line"><span class="keyword">VALUES</span>(...) <span class="comment">/*必须和表的顺序相同*/</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*特定属性插入值*/</span></span><br><span class="line"><span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">INTO</span> TABLENAME(...) <span class="comment">/*属性顺序可以和表的顺序不同*/</span></span><br><span class="line"><span class="keyword">VALUES</span>(...) <span class="comment">/*要和上面顺序相同;用单引号*/</span></span><br></pre></td></tr></table></figure><p><em>不赋值的话会默认赋空值；也可以显示的赋NULL</em></p><h4 id="插入子查询结果"><a href="#插入子查询结果" class="headerlink" title="插入子查询结果"></a>插入子查询结果</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">INTO</span> <span class="keyword">INTO</span> ＜表名＞ ［(＜属性列<span class="number">1</span>＞ ［,＜属性列<span class="number">2</span>＞…］ )</span><br><span class="line">子査询；</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">INTO</span> Dept_age(Sdept,Avg_age)</span><br><span class="line"><span class="keyword">SELECT</span> Sdept,<span class="keyword">AVG</span>(Sage)</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Sdept;</span><br></pre></td></tr></table></figure><p><em>可以转换为连接操作</em></p><h4 id="SELECT…INTO"><a href="#SELECT…INTO" class="headerlink" title="SELECT…INTO"></a>SELECT…INTO</h4><p><em>将一个表中的数据插入到另一个表</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">INTO</span> newTable</span><br><span class="line"><span class="keyword">FROM</span> oldTable</span><br><span class="line"><span class="keyword">WHERE</span> ...</span><br></pre></td></tr></table></figure><h3 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> ＜表名＞</span><br><span class="line"><span class="keyword">SET</span>＜列名＞=＜表达式＞ ［,＜列名＞=＜表达式＞］ …</span><br><span class="line">［<span class="keyword">WHERE</span> ＜条件＞］;</span><br></pre></td></tr></table></figure><h4 id="修改某一个元组的值"><a href="#修改某一个元组的值" class="headerlink" title="修改某一个元组的值"></a>修改某一个元组的值</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> Student</span><br><span class="line"><span class="keyword">SET</span> Sage=<span class="number">22</span></span><br><span class="line"><span class="keyword">WHERE</span> Sno=<span class="string">'2012J5121'</span>;</span><br></pre></td></tr></table></figure><h4 id="修改多个元组的值"><a href="#修改多个元组的值" class="headerlink" title="修改多个元组的值"></a>修改多个元组的值</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> Student116</span><br><span class="line"><span class="keyword">SET</span> Sage=Sage+l;</span><br></pre></td></tr></table></figure><h4 id="带子查询的修改语句"><a href="#带子查询的修改语句" class="headerlink" title="带子查询的修改语句"></a>带子查询的修改语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> SC</span><br><span class="line"><span class="keyword">SET</span> Grade=O</span><br><span class="line"><span class="keyword">WHERE</span> Sno <span class="keyword">IN</span></span><br><span class="line">( SELETE Sno</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Sdept=<span class="string">'CS'</span>);</span><br></pre></td></tr></table></figure><img src="https://s1.ax1x.com/2020/05/06/YAbXIf.png" alt="YAbXIf.png" border="0"><p><em>可以转换为连接操作</em></p><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> ＜表名＞</span><br><span class="line">［<span class="keyword">WHERE</span> ＜条件＞］;</span><br></pre></td></tr></table></figure><h4 id="删除某一个元组的值"><a href="#删除某一个元组的值" class="headerlink" title="删除某一个元组的值"></a>删除某一个元组的值</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Sno=<span class="string">'201215128'</span>；</span><br></pre></td></tr></table></figure><h4 id="删除多个元组"><a href="#删除多个元组" class="headerlink" title="删除多个元组"></a>删除多个元组</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> SC;</span><br></pre></td></tr></table></figure><h4 id="带子查询的删除语句"><a href="#带子查询的删除语句" class="headerlink" title="带子查询的删除语句"></a>带子查询的删除语句</h4> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> Sno <span class="keyword">IN</span></span><br><span class="line">( SELETE Sno</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Sdept=<span class="string">'CS'</span>);</span><br></pre></td></tr></table></figure><p><em>注意：删除操作不可以用连接代替</em></p><img src="https://s1.ax1x.com/2020/05/06/YAOGxe.png" alt="YAOGxe.png" border="0"><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数据库系统" scheme="http://tianyong.fun/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="数据更新" scheme="http://tianyong.fun/tags/%E6%95%B0%E6%8D%AE%E6%9B%B4%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>高数</title>
    <link href="http://tianyong.fun/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6.html"/>
    <id>http://tianyong.fun/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6.html</id>
    <published>2020-05-06T03:44:08.000Z</published>
    <updated>2020-05-11T07:47:37.368Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="高等数学"><a href="#高等数学" class="headerlink" title="高等数学"></a>高等数学</h2><h3 id="函数与极限"><a href="#函数与极限" class="headerlink" title="函数与极限"></a>函数与极限</h3><h4 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h4><p><em>定义：设X,Y是两个非空集合，如果存在一个法则，使得X中的每一个元素按照法则f,在Y中都有唯一的元素y与之对应，那么则称f为从X到Y的<strong>映射</strong>.</em></p><p><em>元素y称为x(在映射f下)的像；x称为元素y在(在映射f下)的<strong>原像</strong>.</em></p><p><em>可能是一对多</em></p><p><strong>满射</strong>：<em>Y中每一个元素都是X中某元素的像</em></p><p><strong>单射</strong>：<em>像只有唯一的原像</em></p><p><strong>一一映射</strong>：<em>既是单射又是满射</em></p><p><em>映射又叫算子</em></p><p><em>非空数集X到数集Y的映射又称为X上的泛函</em></p><p><em>非空数集X到数集X的映射称为X上的转换</em></p><p><em>非空实数集X到实数集Y的映射又称为X上的函数</em></p><h4 id="逆映射与复合映射"><a href="#逆映射与复合映射" class="headerlink" title="逆映射与复合映射"></a>逆映射与复合映射</h4><p><em>单射才存在逆映射</em></p><p><em>映射的值域作为逆映射的定义域</em></p><p><em>复合映射的条件是，g的值域必须包含在f的定义域内</em></p><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p><em>实数到实数的映射</em></p><p><strong>构成函数的条件</strong>：<em>定义域和对应法则</em></p><p><em>两个函数相同的条件：定义域和法则都相同</em></p><h2 id="证明一个点左右的连续性"><a href="#证明一个点左右的连续性" class="headerlink" title="证明一个点左右的连续性"></a>证明一个点左右的连续性</h2><p><em>左右极限相等且等于该点函数值，则函数在该点连续</em></p><h2 id="三次方程求解方法"><a href="#三次方程求解方法" class="headerlink" title="三次方程求解方法"></a>三次方程求解方法</h2><h3 id="因式分解"><a href="#因式分解" class="headerlink" title="因式分解"></a>因式分解</h3><h3 id="先算出一个根"><a href="#先算出一个根" class="headerlink" title="先算出一个根"></a>先算出一个根</h3><p><a href="https://imgchr.com/i/YG0nTx" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/11/YG0nTx.md.png" alt="YG0nTx.png" border="0"></a></p><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>线性代数</title>
    <link href="http://tianyong.fun/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0.html"/>
    <id>http://tianyong.fun/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0.html</id>
    <published>2020-05-05T12:58:26.000Z</published>
    <updated>2020-05-16T07:42:50.028Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="行列式"><a href="#行列式" class="headerlink" title="行列式"></a>行列式</h2><img src="https://s1.ax1x.com/2020/05/05/YkPeFs.png" alt="YkPeFs.png" border="0"><img src="https://s1.ax1x.com/2020/05/05/YkPgfI.png" alt="YkPgfI.png" border="0"><h3 id="三阶行列式的求法"><a href="#三阶行列式的求法" class="headerlink" title="三阶行列式的求法"></a>三阶行列式的求法</h3><img src="https://s1.ax1x.com/2020/05/11/YGUkq0.png" alt="YGUkq0.png" border="0"><h3 id="按某一行某一列展开计算"><a href="#按某一行某一列展开计算" class="headerlink" title="按某一行某一列展开计算"></a>按某一行某一列展开计算</h3><p><a href="https://imgchr.com/i/YG0CkV" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/11/YG0CkV.md.jpg" alt="YG0CkV.jpg" border="0"></a></p><h3 id="转换为上三角矩阵"><a href="#转换为上三角矩阵" class="headerlink" title="转换为上三角矩阵"></a>转换为上三角矩阵</h3><p><em>结果等于主对角线的乘积</em></p><h2 id="矩阵转置"><a href="#矩阵转置" class="headerlink" title="矩阵转置"></a>矩阵转置</h2><p><em>把矩阵元素aij放到aji的位置</em></p><img src="https://s1.ax1x.com/2020/05/06/YkOa01.png" alt="YkOa01.png" border="0"><h2 id="伴随矩阵"><a href="#伴随矩阵" class="headerlink" title="伴随矩阵"></a>伴随矩阵</h2><img src="https://s1.ax1x.com/2020/05/05/Yki9AJ.png" alt="Yki9AJ.png" border="0"><img src="https://s1.ax1x.com/2020/05/05/YkFUsK.png" alt="YkFUsK.png" border="0"><img src="https://s1.ax1x.com/2020/05/05/YkFXeU.png" alt="YkFXeU.png" border="0"><h2 id="逆矩阵"><a href="#逆矩阵" class="headerlink" title="逆矩阵"></a>逆矩阵</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p><em>设A为n阶矩阵，若存在n阶矩阵B使得:AB=BA=E(单位矩阵)，则称A是可逆的且矩阵B是矩阵A的逆矩阵</em></p><h3 id="逆矩阵唯一性证明"><a href="#逆矩阵唯一性证明" class="headerlink" title="逆矩阵唯一性证明"></a>逆矩阵唯一性证明</h3><p><strong>若A是可逆矩阵，则A的逆矩阵是唯一的。证明：</strong></p><img src="https://s1.ax1x.com/2020/05/05/YFxDm9.png" alt="YFxDm9.png" border="0"><p><a href="https://imgchr.com/i/YkZSHK" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/05/YkZeDP.png" alt="YkZeDP.png" border="0"></a></p><h3 id="求逆矩阵"><a href="#求逆矩阵" class="headerlink" title="求逆矩阵"></a>求逆矩阵</h3><h4 id="定义求"><a href="#定义求" class="headerlink" title="定义求"></a>定义求</h4><h4 id="初等变换法"><a href="#初等变换法" class="headerlink" title="初等变换法"></a>初等变换法</h4><h4 id="伴随阵法"><a href="#伴随阵法" class="headerlink" title="伴随阵法"></a>伴随阵法</h4><img src="https://s1.ax1x.com/2020/05/05/YkAlC9.png" alt="YkAlC9.png" border="0"><h3 id="矩阵的特征值和特征向量"><a href="#矩阵的特征值和特征向量" class="headerlink" title="矩阵的特征值和特征向量"></a>矩阵的特征值和特征向量</h3><p><a href="https://imgchr.com/i/YGGEy6" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/11/YGGEy6.md.png" alt="YGGEy6.md.png" border="0"></a><br><a href="https://imgchr.com/i/YGGAQx" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/11/YGGAQx.png" alt="YGGAQx.png" border="0"></a><br><a href="https://imgchr.com/i/YGGeeO" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/11/YGGeeO.png" alt="YGGeeO.png" border="0"></a><br><a href="https://imgchr.com/i/YGGVOK" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/11/YGGVOK.png" alt="YGGVOK.png" border="0"></a></p><p><a href="https://imgchr.com/i/YGGOtH" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/11/YGGOtH.md.jpg" alt="YGGOtH.jpg" border="0"></a></p><h2 id="奇异方程和非奇异方程"><a href="#奇异方程和非奇异方程" class="headerlink" title="奇异方程和非奇异方程"></a>奇异方程和非奇异方程</h2><p><em>奇异方程的行列式为0</em></p><hr><blockquote><p>授人以鱼，不如授人以渔。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>成语</title>
    <link href="http://tianyong.fun/%E6%88%90%E8%AF%AD%E7%BE%8E%E5%8F%A5.html"/>
    <id>http://tianyong.fun/%E6%88%90%E8%AF%AD%E7%BE%8E%E5%8F%A5.html</id>
    <published>2020-05-04T08:22:51.000Z</published>
    <updated>2020-05-04T09:26:19.225Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="舌灿莲花"><a href="#舌灿莲花" class="headerlink" title="舌灿莲花"></a>舌灿莲花</h2><p><em>形容人口才好，口齿伶俐，能说善道，有如莲花般地美妙</em></p><h2 id="絮聒不休"><a href="#絮聒不休" class="headerlink" title="絮聒不休"></a>絮聒不休</h2><p><em>多形容，话多，不停歇，没完没了</em></p><h2 id="吐佳言如锯木屑，霏霏不绝"><a href="#吐佳言如锯木屑，霏霏不绝" class="headerlink" title="吐佳言如锯木屑，霏霏不绝"></a>吐佳言如锯木屑，霏霏不绝</h2><h2 id="谈霏玉屑"><a href="#谈霏玉屑" class="headerlink" title="谈霏玉屑"></a>谈霏玉屑</h2><p><em>谈话时美好的言辞像玉的碎末纷纷洒落一样。言谈美妙，滔滔不绝</em></p><h2 id="话如连珠"><a href="#话如连珠" class="headerlink" title="话如连珠"></a>话如连珠</h2><p>​p><h2 id="音容并茂"><a href="#音容并茂" class="headerlink" title="音容并茂"></a>音容并茂</h2><p><em>说话时语言和表情都十分丰富</em></p><h2 id="钳口结舌"><a href="#钳口结舌" class="headerlink" title="钳口结舌"></a>钳口结舌</h2><p><em>形容理屈词穷说不出话来。也指慑于淫威不敢讲话</em></p><h2 id="三缄其口"><a href="#三缄其口" class="headerlink" title="三缄其口"></a>三缄其口</h2><p><em>形容说话谨慎。现在也形容不肯或不敢开口</em></p><hr><blockquote><p>善谈和健谈不同，健谈者能使四座生春，但多少有点霸道，善谈者尽管舌灿莲花，但总还要给别人留些说话的机会。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>梗</title>
    <link href="http://tianyong.fun/%E6%A2%97.html"/>
    <id>http://tianyong.fun/%E6%A2%97.html</id>
    <published>2020-05-04T07:06:28.000Z</published>
    <updated>2020-05-04T07:59:16.383Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="df3bed18e79639a00c58eaa8fa452a73c16ab9a76af713393f49259efaccb1a4">b0c437b3beff531915a15d7156f4a2ccab261e2a563e90527e1e6bd77213d64fbe99135195d702c34891935ba5641f292e9eaae659e4a78885e910bf5d11695ae1db0432f21468845f73c5aa8f40db4dbe4d56a87e6ce9aa5b142ab4b9a0efb31f2746f55dbdde7eaf2b5e84e6dadeb134944a06770f37b260ed47938dd51f95177a7c8dbedcf1c030c06bd0de3b7a9a5859bba8fdc3e3ee1332acabcbd4156c336e4d6ca6f55f50f980fb2729097f5a8d5e5ca0ec1fd749e633f1dd9bb76fb6280d79a70aeb2deb7062d4b4be47dba8de5fa25834c14ab43dfbd17f7108681bba25760fc98bf588932c0d9e90606018bf205fe8416fc330a8c8e7124a3ecd64ed98635955ff914dfbe25cec259276237b1327efd81f383834728fef1e8afba3218913fdd54a9ca502f12266e02d96c73e4b1405909e55c355646e2e51b73b9f742bc5c4d026844017c1dc1abe0abe8bea7c41a7c76dc1afe6ba4195fec5c19a83645fb43d5557e4dbc1fd1daf4aa92eca4f845ab0e200d8842c98ee8844ba1cce4296a2e3a093b360e07ba70232606fb6d97b982797749578b7bff718a2c49a400505c02804fecf4852e59eb989047f7040747d993d76d2fccc2af366cb4554c3fb72670dc960c443d846d2c8b1da204fca1365e30c5e2a26801c953f464cd05868f15c5dc65a67c8481e2b8eb7d702c7450cd52879cac4a0f2aa8026d338a07c982410a69d0eb4b5a8b779a645d62f698658d57e334ef419c84191f548c90a2b785b903e75ee355f52536c7c98b0e6b4874dad713407673cbf63275982a776f59ca77e0618aa1658b11160ea1c31586b9d31ae9f45d7da7984b3730c0a42f0dfee8d97213a49244c24eb340e35153494038e474b470c6872b947ac0cdda064903e677795ce58803122c7b7f7f4374eb6dcb7ec352362a4812aff6859ef4f9e9cab3b79cdb46b2b804fa348fcf3d54d6fdf62836da2d062bc82a208fd05815a5ee69a58dd9eacbda59cd39df3762be0e5b9e0c9b86f91796c08ef78b370de14ef24f0ea62d46daccdfbaf952ea85a08ad1322aebfdd91fd22c538cd147f21efcacaabd8ca5a433696d0112154908a7845437cc6a25ca29b257bea477f7a0824121d98a7bb25cdd1c4d942b4c205ff3a5446a1504eb2b281dd4e7733c10324049ba6d86cede0ed85cd019a536f9998f23164cb102e5b5a93127bba2c7c7d5db00506a59adb8ff88cff518a9272c8508aa12c4fd0cf60ba6348f593c1c53b0b983080f599424fa593dbe7c963a9dce73d3ecc3ad43546644cbe19c781f86057636f31ca09c76dbf399308126d1be4669bc620d764b3ae69aa26f131a97bd72bcdd5c5eace8d17aa583d12f51c1c830d1e1836cf2c2859b548369b57db98c7c8d633d32811c17359366e2f9dc974f716c0453cbd100906ff8363f664135df0e8fca985e9fb8223d7134febb14720f4ee9023ea63174d1d7ee7a322c7df7b3f7b3b</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是一篇加密文章
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>hadoop理论课-第一章</title>
    <link href="http://tianyong.fun/hadoop%E7%90%86%E8%AE%BA%E8%AF%BE-%E7%AC%AC%E4%B8%80%E7%AB%A0(%E5%88%9D%E8%AF%86%20Hadoop%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF).html"/>
    <id>http://tianyong.fun/hadoop%E7%90%86%E8%AE%BA%E8%AF%BE-%E7%AC%AC%E4%B8%80%E7%AB%A0(%E5%88%9D%E8%AF%86%20Hadoop%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF).html</id>
    <published>2020-05-03T07:03:23.000Z</published>
    <updated>2020-05-03T09:00:51.858Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="初识-Hadoop-大数据技术"><a href="#初识-Hadoop-大数据技术" class="headerlink" title="初识 Hadoop 大数据技术"></a>初识 Hadoop 大数据技术</h2><h3 id="大数据技术概述"><a href="#大数据技术概述" class="headerlink" title="大数据技术概述"></a>大数据技术概述</h3><h4 id="大数据产生的背景"><a href="#大数据产生的背景" class="headerlink" title="大数据产生的背景"></a>大数据产生的背景</h4><p><em>计算机诞生; 互联网发展</em>  </p><h4 id="大数据的定义"><a href="#大数据的定义" class="headerlink" title="大数据的定义"></a>大数据的定义</h4><p>“大数据”是一个<strong>涵盖多种技术的概念</strong>，简单地说，是指无法在一定时间内用常规软件工具对<br>其内容进行抓取、管理和处理的数据集合。     </p><p>IBM 公司将“大数据”理念定义为 4 个 V，即<strong>大量化( Volume）、多样化（ Variety）、快速化（ Velocity）及由此产生的价值（ Value）</strong>。  </p><ul><li>数据体量大：大数据的数据量从 TB 级别跃升到 PB 级别。</li><li>数据类型多：大数据的数据类型包括前文提到的网络日志、视频、图片、地理位置信息等。</li><li>处理速度快： 1 秒定律。最后这一点是大数据技术与传统数据挖掘技术的本质区别。</li><li>价值密度低：以视频为例，连续不间断监控过程中，可能有用的数据仅仅有一两秒  </li></ul><h4 id="大数据技术的发展"><a href="#大数据技术的发展" class="headerlink" title="大数据技术的发展"></a>大数据技术的发展</h4><p><em>大数据技术要面对的基本问题，也是最核心的问题，就是海量数据<strong>如何可靠存储和如何高效计算的问题</strong>。</em>  </p><h3 id="Google-的“三驾马车”"><a href="#Google-的“三驾马车”" class="headerlink" title="Google 的“三驾马车”"></a>Google 的“三驾马车”</h3><h4 id="GFS-的思想"><a href="#GFS-的思想" class="headerlink" title="GFS 的思想"></a>GFS 的思想</h4><p><em>论文“The Google File System”描述了一个分布式文件系统的设计思路</em></p><p><em>从交互实体上划分，分布式文件系统有两个基本组成部分，一个是<strong>客户端（ Client）</strong>，一个是<strong>服务端（ Server）</strong>.</em>  </p><p><em>如果客户端把文件上传到服务端，但是服务端的硬盘不够大，怎么办？ 多加硬盘，或多增加主机</em> </p><p><em>数据的存储可靠性怎么保证？ 数据冗余存储</em> </p><p><em>主机或硬盘如何被管理起来?  管理节点</em></p><p><em>GFS 解决这些问题的思路是这样的，增加一个<strong>管理节点</strong>，去管理这些存放数据的主机。存放数据的主机称为<strong>数据节点</strong>。 而上传的文件会按<strong>固定的大小进行分块</strong>。 数据节点上保存的是<strong>数据块</strong>，而非独立的文件。数据块<strong>冗余度默认是 3</strong>。<strong>上传文件时</strong>，客户端先连接管理节点，管理节点生成数据块的信息，包括文件名、文件大小、上传时间、数据块的位置信息等。这些信息称为文件的元信息，它会保存在管理节点。客户端获取这些元信息之后，就开始把数据块一个个上传。客户端把数据块先上传到第一个数据节点，然后，在管理节点的管理下，通过水平复制，复制几份数据块到其他节点，最终达到冗余度的要求。<strong>水平复制需要考虑两个要求：可靠性、可用性</strong>.</em></p><p><a href="https://imgchr.com/i/YSnxw4" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/03/YSnxw4.md.png" alt="YSnxw4.md.png" border="0"></a><br><a href="https://imgchr.com/i/YSnvmF" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/03/YSnvmF.md.png" alt="YSnvmF.md.png" border="0"></a></p><h4 id="MapReduce-的思想"><a href="#MapReduce-的思想" class="headerlink" title="MapReduce 的思想"></a>MapReduce 的思想</h4><p><em>PageRank，即网页排名，又称网页级别</em>  </p><p><em>MapReduce 采用“分而治之”的思想，把对大规模数据集的操作，分发给一个主节点管理下的各个子节点共同完成，然后整合各个子节点的中间结果，得到最终的计算结果。简而言之， MapReduce 就是“分散任务，汇总结果”</em> </p><h4 id="BigTable的思想"><a href="#BigTable的思想" class="headerlink" title="BigTable的思想"></a>BigTable的思想</h4><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>vmware安装tools</title>
    <link href="http://tianyong.fun/vmware%E5%AE%89%E8%A3%85tools.html"/>
    <id>http://tianyong.fun/vmware%E5%AE%89%E8%A3%85tools.html</id>
    <published>2020-04-28T02:39:58.000Z</published>
    <updated>2020-05-01T06:31:17.857Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h2 id="安装vmware-tools"><a href="#安装vmware-tools" class="headerlink" title="安装vmware tools"></a>安装vmware tools</h2><h3 id="选择Linux-iso"><a href="#选择Linux-iso" class="headerlink" title="选择Linux.iso"></a>选择Linux.iso</h3><p><em>关闭vmware重新打开，编辑虚拟系统设置-&gt;CD/DVD-&gt;浏览-&gt;选择linux.iso(在vmware的安装路径下，可以复制到虚拟系统镜像文件iso处-&gt;确定)</em></p><p><a href="https://imgchr.com/i/J4YiTO" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/28/J4YiTO.md.png" alt="J4YiTO.png" border="0"></a></p><h3 id="安装Tools"><a href="#安装Tools" class="headerlink" title="安装Tools"></a>安装Tools</h3><p><em>打开虚拟系统-&gt;桌面-&gt;左侧导航栏的CD/DVD-&gt;复制里面的tools压缩包到桌面-&gt;右键选择extract here-&gt;打开解压后文件-&gt;shift + 右键-&gt;open terminal -&gt; sudo ./vmware-install.pl-&gt;根据提示成功安装</em></p><p><a href="https://imgchr.com/i/J4tgPg" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/28/J4tgPg.md.png" alt="J4tgPg.md.png" border="0"></a></p><p><a href="https://imgchr.com/i/J4tR2j" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/28/J4tR2j.md.png" alt="J4tR2j.md.png" border="0"></a></p><p><a href="https://imgchr.com/i/J4t2GQ" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/28/J4t2GQ.md.png" alt="J4t2GQ.md.png" border="0"></a></p><h3 id><a href="#" class="headerlink" title></a></h3><hr><blockquote><p>随意春芳歇，王孙自可留。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="vmware" scheme="http://tianyong.fun/categories/vmware/"/>
    
    
      <category term="vmware" scheme="http://tianyong.fun/tags/vmware/"/>
    
      <category term="tools" scheme="http://tianyong.fun/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>数值分析-方程组</title>
    <link href="http://tianyong.fun/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90-%E6%96%B9%E7%A8%8B%E7%BB%84.html"/>
    <id>http://tianyong.fun/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90-%E6%96%B9%E7%A8%8B%E7%BB%84.html</id>
    <published>2020-04-26T03:13:22.000Z</published>
    <updated>2020-05-15T12:50:59.215Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="方程组"><a href="#方程组" class="headerlink" title="方程组"></a>方程组</h1><h2 id="高斯消去法"><a href="#高斯消去法" class="headerlink" title="高斯消去法"></a>高斯消去法</h2><p><em>难于求解或求高精度的解</em></p><h3 id="朴素的高斯消去法"><a href="#朴素的高斯消去法" class="headerlink" title="朴素的高斯消去法"></a>朴素的高斯消去法</h3><p><strong>主元</strong>：主对角线上的元素</p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><h5 id="消去步骤"><a href="#消去步骤" class="headerlink" title="消去步骤"></a>消去步骤</h5><h6 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h6><img src="https://s1.ax1x.com/2020/05/02/JjR2DO.png" alt="JjR2DO.png" border="0"><p><em>没有在aij的位置放零是因为后续不会用到该值，提高效率</em></p><p><em>当遇到主元为零是程序会终止</em></p><h5 id="回代或向后求解"><a href="#回代或向后求解" class="headerlink" title="回代或向后求解"></a>回代或向后求解</h5><h6 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h6><p><a href="https://imgchr.com/i/JjfqAg" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/02/JjfqAg.md.png" alt="JjfqAg.md.png" border="0"></a></p><h4 id="操作次数"><a href="#操作次数" class="headerlink" title="操作次数"></a>操作次数</h4><p><em>对消去步骤和回代步骤的计算次数进行统计</em></p><h5 id="高斯消去法中消去步骤的操作次数"><a href="#高斯消去法中消去步骤的操作次数" class="headerlink" title="高斯消去法中消去步骤的操作次数"></a>高斯消去法中消去步骤的操作次数</h5><p><em>把第一列转化为0，需要(2n+1)(n-1)次计算：</em></p><p>（1+n+n)(n-1)</p><img src="https://s1.ax1x.com/2020/04/26/JcgErR.png" alt="JcgErR.png" border="0"><p>n个方程n个未知数的消去计算，可以在2/3n^3+1/2n^2-7/6n次操作后完成</p><h6 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h6><p>O(n^3)</p><h5 id="高斯消去法中回代步骤的操作次数"><a href="#高斯消去法中回代步骤的操作次数" class="headerlink" title="高斯消去法中回代步骤的操作次数"></a>高斯消去法中回代步骤的操作次数</h5><p><a href="https://imgchr.com/i/JjfHHS" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/02/JjfHHS.png" alt="JjfHHS.png" border="0"></a></p><img src="https://s1.ax1x.com/2020/05/02/JjfqAg.md.png" alt="JjfqAg.md.png" border="0"><p><em>n个 方 程 n个 未 知 数 的 三 角 形 系 统 的 回 代 过 程 可 以 使 用 n^2次操作完成</em></p><p>*<em>当n很大时，消去步骤的低阶可以省略; 换 句 话 说 ， 对 于 “，在 复 杂 度 计 算 中 的 低 阶 项 对 于 算 法 运 行 时 间 的 估 计 没 有 大的 影 响 ，并可以忽略.  *</em></p><h5 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h5><p><a href="https://imgchr.com/i/Jj7rPU" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/02/Jj7rPU.png" alt="Jj7rPU.png" border="0"></a></p><h2 id="高斯主元素消去法"><a href="#高斯主元素消去法" class="headerlink" title="高斯主元素消去法"></a>高斯主元素消去法</h2><p><em>由高斯消去法知道在消元过程中可能出现的情况主元素为0，这时消去法将无法进行；即使主元素但很小时，用其作除数，会导致其他元素数量级的严重增长和舍入误差的扩散，最后也使得计算解不可靠</em></p><h2 id="LU分解"><a href="#LU分解" class="headerlink" title="LU分解"></a>LU分解</h2><h3 id="LU分解过程"><a href="#LU分解过程" class="headerlink" title="LU分解过程"></a>LU分解过程</h3><h3 id="法一"><a href="#法一" class="headerlink" title="法一"></a>法一</h3><p><em>在高斯消去法的基础上把0的位置写上倍数</em></p><p><a href="https://imgchr.com/i/JorlBF" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/29/JorlBF.md.png" alt="JorlBF.png" border="0"></a></p><h3 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h3><p><code>Amn = Lm1U1n + Lm2U2n + ...+ Umn</code></p><p><a href="https://imgchr.com/i/JorhDS" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/29/JorhDS.md.jpg" alt="JorhDS.md.jpg" border="0"></a><br><a href="https://imgchr.com/i/Jorfu8" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/04/29/Jorfu8.md.jpg" alt="Jorfu8.md.jpg" border="0"></a></p><h3 id="使用LU分解回代"><a href="#使用LU分解回代" class="headerlink" title="使用LU分解回代"></a>使用LU分解回代</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Ax &#x3D; b</span><br><span class="line">LUx &#x3D; b</span><br><span class="line">Ly &#x3D; b 法二可以直接最初把b也写上，最后b这一列就是y</span><br><span class="line">Ux &#x3D; y</span><br><span class="line">求出x</span><br></pre></td></tr></table></figure><h3 id="复杂度-1"><a href="#复杂度-1" class="headerlink" title="复杂度"></a>复杂度</h3><h2 id="追赶法"><a href="#追赶法" class="headerlink" title="追赶法"></a>追赶法</h2><p><em>在一些实际问题中， 例如解常微分方程边值问题，热传导方程以及船体数学放样中建立三次样条函数等，都会要求解系数矩阵为<strong>对角占优的三对角线方程组</strong>.</em></p><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><img src="https://s1.ax1x.com/2020/05/06/YAFFk4.jpg" alt="YAFFk4.jpg" border="0"><h3 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h3><img src="https://s1.ax1x.com/2020/05/06/YAiQWn.jpg" alt="YAiQWn.jpg" border="0"><img src="https://s1.ax1x.com/2020/05/06/YAVNGQ.jpg" alt="YAVNGQ.jpg" border="0"><h2 id="向量与矩阵的范数"><a href="#向量与矩阵的范数" class="headerlink" title="向量与矩阵的范数"></a>向量与矩阵的范数</h2><h3 id="向量范数"><a href="#向量范数" class="headerlink" title="向量范数"></a>向量范数</h3><h3 id="矩阵范数"><a href="#矩阵范数" class="headerlink" title="矩阵范数"></a>矩阵范数</h3><h5 id="例题-2"><a href="#例题-2" class="headerlink" title="例题"></a>例题</h5><p><a href="https://imgchr.com/i/YGw0y9" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/11/YGw0y9.md.png" alt="YGw0y9.png" border="0"></a></p><p><a href="https://imgchr.com/i/YG0CkV" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/11/YG0CkV.md.jpg" alt="YG0CkV.md.jpg" border="0"></a><br><a href="https://imgchr.com/i/YGwOSg" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/11/YGwOSg.md.jpg" alt="YGwOSg.md.jpg" border="0"></a><br><a href="https://imgchr.com/i/YGwbY8" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/11/YGwbY8.jpg" alt="YGwbY8.jpg" border="0"></a></p><h3 id="条件数"><a href="#条件数" class="headerlink" title="条件数"></a>条件数</h3><p><em>与矩阵的范数有关</em></p><p><a href="https://imgchr.com/i/YGsegO" target="_blank" rel="external nofollow noopener noreferrer"><img src="https://s1.ax1x.com/2020/05/11/YGsegO.md.jpg" alt="YGsegO.jpg" border="0"></a></p><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
