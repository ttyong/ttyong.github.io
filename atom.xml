<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TianYong&#39;s Blog</title>
  
  <subtitle>比你优秀的人都努力，有什么理由不努力！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tianyong.fun/"/>
  <updated>2023-06-13T01:24:28.075Z</updated>
  <id>http://tianyong.fun/</id>
  
  <author>
    <name>TTYONG</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>大数据开发工程师-快速上手NoSQL数据库HBase-3</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8BNoSQL%E6%95%B0%E6%8D%AE%E5%BA%93HBase-3.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8BNoSQL%E6%95%B0%E6%8D%AE%E5%BA%93HBase-3.html</id>
    <published>2023-06-13T01:24:28.000Z</published>
    <updated>2023-06-13T01:24:28.075Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-快速上手NoSQL数据库HBase-2</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8BNoSQL%E6%95%B0%E6%8D%AE%E5%BA%93HBase-2.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8BNoSQL%E6%95%B0%E6%8D%AE%E5%BA%93HBase-2.html</id>
    <published>2023-06-13T01:24:19.000Z</published>
    <updated>2023-06-13T01:24:19.217Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-快速上手NoSQL数据库HBase-1</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8BNoSQL%E6%95%B0%E6%8D%AE%E5%BA%93HBase-1.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8BNoSQL%E6%95%B0%E6%8D%AE%E5%BA%93HBase-1.html</id>
    <published>2023-06-13T01:24:14.000Z</published>
    <updated>2023-06-13T01:24:14.229Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88.html</id>
    <published>2023-06-13T01:23:47.000Z</published>
    <updated>2023-06-13T01:23:47.459Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-第15周 极速上手内存数据库Redis-3</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC15%E5%91%A8-%E6%9E%81%E9%80%9F%E4%B8%8A%E6%89%8B%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93Redis-3.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC15%E5%91%A8-%E6%9E%81%E9%80%9F%E4%B8%8A%E6%89%8B%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93Redis-3.html</id>
    <published>2023-06-13T01:20:45.000Z</published>
    <updated>2023-06-13T01:20:45.501Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-第15周 极速上手内存数据库Redis-2</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC15%E5%91%A8-%E6%9E%81%E9%80%9F%E4%B8%8A%E6%89%8B%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93Redis-2.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC15%E5%91%A8-%E6%9E%81%E9%80%9F%E4%B8%8A%E6%89%8B%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93Redis-2.html</id>
    <published>2023-06-13T01:20:40.000Z</published>
    <updated>2023-06-13T01:20:40.765Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-第15周 极速上手内存数据库Redis-1</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC15%E5%91%A8-%E6%9E%81%E9%80%9F%E4%B8%8A%E6%89%8B%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93Redis-1.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC15%E5%91%A8-%E6%9E%81%E9%80%9F%E4%B8%8A%E6%89%8B%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93Redis-1.html</id>
    <published>2023-06-13T01:20:35.000Z</published>
    <updated>2023-06-13T01:20:35.233Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-ES+HBase实现仿百度搜索引擎-2</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-ES+HBase%E5%AE%9E%E7%8E%B0%E4%BB%BF%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E-2.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-ES+HBase%E5%AE%9E%E7%8E%B0%E4%BB%BF%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E-2.html</id>
    <published>2023-06-02T10:03:09.000Z</published>
    <updated>2023-06-11T16:53:38.111Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="ES-HBase实现仿百度搜索引擎-2"><a href="#ES-HBase实现仿百度搜索引擎-2" class="headerlink" title="ES+HBase实现仿百度搜索引擎-2"></a>ES+HBase实现仿百度搜索引擎-2</h1><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据开发工程师" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
      <category term="大数据" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-第十七周-</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%85%A8%E6%96%87%E6%A3%80%E7%B4%A2%E5%BC%95%E6%93%8EElasticsearch-2.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%85%A8%E6%96%87%E6%A3%80%E7%B4%A2%E5%BC%95%E6%93%8EElasticsearch-2.html</id>
    <published>2023-06-02T10:03:09.000Z</published>
    <updated>2023-06-02T10:03:09.649Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-第十七周-</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC%E5%8D%81%E5%85%AD%E5%91%A8-Flink1.15%E4%B9%8BFlink%20SQL%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B%201.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC%E5%8D%81%E5%85%AD%E5%91%A8-Flink1.15%E4%B9%8BFlink%20SQL%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B%201.html</id>
    <published>2023-06-02T10:03:09.000Z</published>
    <updated>2023-06-02T10:03:09.649Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-第十七周-</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC%E5%8D%81%E5%85%AD%E5%91%A8-Flink1.15%E4%B9%8BFlink%20SQL%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B%202.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC%E5%8D%81%E5%85%AD%E5%91%A8-Flink1.15%E4%B9%8BFlink%20SQL%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B%202.html</id>
    <published>2023-06-02T10:03:09.000Z</published>
    <updated>2023-06-02T10:03:09.649Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-全文检索引擎Elasticsearch-1</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%85%A8%E6%96%87%E6%A3%80%E7%B4%A2%E5%BC%95%E6%93%8EElasticsearch-1.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%85%A8%E6%96%87%E6%A3%80%E7%B4%A2%E5%BC%95%E6%93%8EElasticsearch-1.html</id>
    <published>2023-06-02T10:03:09.000Z</published>
    <updated>2023-06-13T14:26:28.802Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="全文检索引擎Elasticsearch-1"><a href="#全文检索引擎Elasticsearch-1" class="headerlink" title="全文检索引擎Elasticsearch-1"></a>全文检索引擎Elasticsearch-1</h1><h2 id="1-快速了解Elasticsearch"><a href="#1-快速了解Elasticsearch" class="headerlink" title="1 快速了解Elasticsearch"></a>1 快速了解Elasticsearch</h2><h3 id="为什么要学Elasticsearch？"><a href="#为什么要学Elasticsearch？" class="headerlink" title="为什么要学Elasticsearch？"></a>为什么要学Elasticsearch？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">针对海量数据计算分析，前面我们学习了MapReduce、Hive、Spark、Flink这些计算引擎和分析工具，但是它们侧重的都是对数据的清洗、聚合之类的需求。</span><br><span class="line">如果想要在海量数据里面快速查询出一批满足条件的数据，这些计算引擎都需要生成一个任务，提交到集群中去执行，这样中间消耗的时间就长了。</span><br><span class="line"></span><br><span class="line">并且针对多条件组合查询需求，这些计算引擎在查询的时候基本上都要实现全表扫描了，这样查询效率也是比较低的。</span><br><span class="line"></span><br><span class="line">所以，为了解决海量数据下的快速检索，以及多条件组合查询需求，Elasticsearch就应运而生了。</span><br></pre></td></tr></table></figure><h3 id="Elasticsearch简介"><a href="#Elasticsearch简介" class="headerlink" title="Elasticsearch简介"></a>Elasticsearch简介</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Elasticsearch是一个分布式的全文检索引擎，它是对lucene的功能做了封装，能够达到实时搜索，稳定，可靠，快速等特点。</span><br><span class="line">如果大家对Lucene有所了解的话，那么针对Elasticsearch其实就好理解了。</span><br></pre></td></tr></table></figure><h3 id="常见的全文检索引擎"><a href="#常见的全文检索引擎" class="headerlink" title="常见的全文检索引擎"></a>常见的全文检索引擎</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Lucene</span><br><span class="line">Lucene是Java家族中最为出名的一个开源搜索引擎，在Java世界中属于标准的全文检索程序，它提供了完整的查询引擎和索引引擎。</span><br><span class="line">但是它也存在一些缺点</span><br><span class="line">1：不支持分布式，无法扩展，海量数据下会存在瓶颈。</span><br><span class="line">2：提供的都是低级API，使用繁琐。</span><br><span class="line">3：没有提供web界面，不便于管理。</span><br><span class="line"></span><br><span class="line">Solr</span><br><span class="line">Solr是一个用java开发的独立的企业级搜索应用服务器，它是基于Lucene的。</span><br><span class="line">它解决了Lucene的一些痛点，提供了web界面，以及高级API接口。</span><br><span class="line">并且从Solr4.0版本开始，Solr开始支持分布式，称之为Solrcloud。</span><br><span class="line"></span><br><span class="line">Elasticsearch</span><br><span class="line">Elasticsearch是一个采用Java语言开发的，基于Lucene的开源、分布式的搜索引擎,能够实现实时搜索。</span><br><span class="line">它最重要的一个特点是天生支持分布式，可以这样说，Elasticsearch就是为了分布式而生的。</span><br><span class="line">它对外提供REST API接口，便于使用，通过外部插件实现web界面支持，便于管理集群。</span><br></pre></td></tr></table></figure><h3 id="Solr-vs-Elasticsearch"><a href="#Solr-vs-Elasticsearch" class="headerlink" title="Solr vs Elasticsearch"></a>Solr vs Elasticsearch</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Elasticsearch一般我们会简称为ES。</span><br><span class="line"></span><br><span class="line">从这里可以看出来，Solr和ES的功能基本是类似的，那在工作中该如何选择呢？</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111104774.png" alt="image-20230611110351736"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Solr从2007年就出现了，在传统企业中应用的还是比较广泛的，并且在2013年的时候，Solr推出了4.0版本，提供了Solrcloud，开始正式支持分布式集群。</span><br><span class="line">ES在2014年的时候才正式推出1.0版本，所以它的出现要比Solr晚很多年。</span><br><span class="line">但是ES从一开始就是为了解决海量数据下的全文检索，所以在分布式集群相关特性层面，ES会优于Solrcloud。</span><br><span class="line">建议：</span><br><span class="line"></span><br><span class="line">如果之前公司里面已经深度使用了Solr，现在为了解决海量数据检索问题，建议优先考虑使用Solrcloud。</span><br><span class="line">如果之前没有使用过Solr，那么在海量数据的场景下，建议优先考虑使用ES。</span><br></pre></td></tr></table></figure><h3 id="MySQL-VS-Elasticsearch"><a href="#MySQL-VS-Elasticsearch" class="headerlink" title="MySQL VS Elasticsearch"></a>MySQL VS Elasticsearch</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">为了便于理解ES，在这里我们拿MySQL和ES做一个对比分析：</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111106927.png" alt="image-20230611110616238"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">解释：</span><br><span class="line">1： MySQL中有Database（数据库）的概念，对应的在ES中有Index（索引库）的概念。</span><br><span class="line">2：MySQL中有Table（表）的概念，对应的在ES中有Type（类型）的概念，不过需要注意，ES在1.x~5.x版本中是正常支持Type的，每一个Index下面可以有多个Type。</span><br><span class="line"></span><br><span class="line">从6.0版本开始，每一个Index中只支持1个Type，属于过渡阶段。</span><br><span class="line">从7.0版本开始，取消了Type，也就意味着每一个Index中存储的数据类型可以认为都是同一种，不再区分类型了。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">为何要取消Type？</span><br><span class="line"></span><br><span class="line">主要还是基于性能方面的考虑。</span><br><span class="line">因为ES设计初期，是直接参考了关系型数据库的设计模型，存在了 Type（表）的概念。</span><br><span class="line">但是，ES的搜索引擎是基于 Lucene 的，这种基因决定了 Type 是多余的。</span><br><span class="line">在关系型数据库中Table是独立的，但是在ES中同一个Index中不同Type的数据在底层是存储在同一个Lucene的索引文件中的。</span><br><span class="line">如果在同一个Index中的不同Type中都有一个id字段，那么ES会认为这两个id字段是同一个字段，你必须在不同的Type中给这个id字段定义相同的字段类型，否则，不同Type中的相同字段名称就会在处理的时候出现冲突，导致Lucene处理效率下降。</span><br><span class="line">除此之外，在同一个Index的不同Type下，存储字段个数不一样的数据，会导致存储中出现稀疏数据，影响Lucene压缩文档的能力，最终导致ES查询效率降低。</span><br><span class="line"></span><br><span class="line">3：MySQL中有Row（行）的概念，表示一条数据，在ES中对应的有Document（文档）。</span><br><span class="line">4：MySQL中有Column（列）的概念，表示一条数据中的某个列，在ES中对应的有Field（字段）。</span><br></pre></td></tr></table></figure><h3 id="Elasticsearch核心概念"><a href="#Elasticsearch核心概念" class="headerlink" title="Elasticsearch核心概念"></a>Elasticsearch核心概念</h3><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111111465.png" alt="image-20230611111149099"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ES中几个比较核心的概念：</span><br><span class="line">Cluster：集群</span><br><span class="line">Shard：分片</span><br><span class="line">Replica：副本</span><br><span class="line">Recovery：数据恢复</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">接下来具体分析一下这几个概念：</span><br><span class="line"></span><br><span class="line">Cluster</span><br><span class="line">代表ES集群，集群中有多个节点，其中有一个为主节点，这个主节点是通过选举产生的。</span><br><span class="line"></span><br><span class="line">主从节点是对于集群内部来说的，ES的一个核心特性就是去中心化，字面上理解就是无中心节点，这是对于集群外部来说的，因为从外部来看ES集群，在逻辑上是一个整体，我们与任何一个节点的通信和与整个ES集群通信是等价的。</span><br><span class="line"></span><br><span class="line">主节点的职责是负责管理集群状态，包括管理分片的状态和副本的状态，以及节点的发现和删除。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Shard</span><br><span class="line">代表索引库分片，ES集群可以把一个索引库分成多个分片。</span><br><span class="line"></span><br><span class="line">这样的好处是可以把一个大的索引库水平拆分成多个分片，分布到不同的节点上，构成分布式搜索，进而提高性能和吞吐量。</span><br><span class="line"></span><br><span class="line">注意：分片的数量只能在创建索引库的时候指定，索引库创建后不能更改。</span><br><span class="line"></span><br><span class="line">默认情况下一个索引库有1个分片。</span><br><span class="line"></span><br><span class="line">每个分片中最多存储2,147,483,519条数据，其实就是Integer.MAX_VALUE-128。</span><br><span class="line">因为每一个ES的分片底层对应的都是Lucene索引文件，单个Lucene索引文件最多存储Integer.MAX_VALUE-128个文档（数据）。</span><br><span class="line"></span><br><span class="line">注意：在ES7.0版本之前，每一个索引库默认是有5个分片的。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Replica</span><br><span class="line">代表分片的副本，ES集群可以给分片设置副本。</span><br><span class="line"></span><br><span class="line">副本的第一个作用是提高系统的容错性，当某个分片损坏或丢失时可以从副本中恢复。第二个作用是提高ES的查询效率，ES会自动对搜索请求进行负载均衡。</span><br><span class="line"></span><br><span class="line">注意：分片的副本数量可以随时修改。</span><br><span class="line">默认情况下，每一个索引库只有1个主分片和1个副本分片（前提是ES集群有2个及以上节点，如果ES集群只有1个节点，那么索引库就只有1个主分片，不会产生副本分片，因为主分片和副本分片在一个节点里面是没有意义的）。</span><br><span class="line">为了保证数据安全，以及提高查询效率，建议副本数量设置为2或者3。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Recovery</span><br><span class="line">代表数据恢复或者数据重新分布。</span><br><span class="line"></span><br><span class="line">ES集群在有节点加入或退出时会根据机器的负载对分片进行重新分配，挂掉的节点重新启动时也会进行数据恢复。</span><br></pre></td></tr></table></figure><h2 id="2-快速上手使用Elasticsearch"><a href="#2-快速上手使用Elasticsearch" class="headerlink" title="2 快速上手使用Elasticsearch"></a>2 快速上手使用Elasticsearch</h2><h3 id="ES安装部署"><a href="#ES安装部署" class="headerlink" title="ES安装部署"></a>ES安装部署</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ES支持单机和集群，在使用层面是完全一样的。</span><br><span class="line">首先下载ES的安装包，目前ES最新版本是7.x，在这使用7.13.4版本。</span><br><span class="line"></span><br><span class="line">下载地址：</span><br><span class="line">https:&#x2F;&#x2F;www.elastic.co&#x2F;cn&#x2F;downloads&#x2F;past-releases#elasticsearch</span><br><span class="line">选择ES的对应版本。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111120893.png" alt="image-20230611112053604"></p><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111121533.png" alt="image-20230611112108886"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：目前ES中自带的有open JDK，不用单独安装部署Oracle JDK。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111123514.png" alt="image-20230611112339787"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在具体安装集群之前，先来分析一下ES中的核心配置文件：</span><br><span class="line">在ES_HOME的config目录下有一个elasticsearch.yml配置文件，这个文件是一个yaml格式的文件。</span><br><span class="line">elasticsearch.yml文件内容如下：</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Elasticsearch Configuration &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">#</span><br><span class="line"># NOTE: Elasticsearch comes with reasonable defaults for most settings.</span><br><span class="line">#       Before you set out to tweak and tune the configuration, make sure you</span><br><span class="line">#       understand what are you trying to accomplish and the consequences.</span><br><span class="line">#</span><br><span class="line"># The primary way of configuring a node is via this file. This template lists</span><br><span class="line"># the most important settings you may want to configure for a production cluster.</span><br><span class="line">#</span><br><span class="line"># Please consult the documentation for further information on configuration options:</span><br><span class="line"># https:&#x2F;&#x2F;www.elastic.co&#x2F;guide&#x2F;en&#x2F;elasticsearch&#x2F;reference&#x2F;index.html</span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Cluster -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Use a descriptive name for your cluster:</span><br><span class="line"># 集群名称，默认是elasticsearch，如果想要将多个ES实例组成一个集群，那么它们的cluster.name必须一致</span><br><span class="line">#cluster.name: my-application</span><br><span class="line">#</span><br><span class="line"># ------------------------------------ Node ------------------------------------</span><br><span class="line">#</span><br><span class="line"># Use a descriptive name for the node:</span><br><span class="line"># 节点名称，可以手工指定，默认也会自动生成</span><br><span class="line">#node.name: node-1</span><br><span class="line">#</span><br><span class="line"># Add custom attributes to the node:</span><br><span class="line"># 给节点指定一些自定义的参数信息</span><br><span class="line">#node.attr.rack: r1</span><br><span class="line">#</span><br><span class="line"># ----------------------------------- Paths ------------------------------------</span><br><span class="line">#</span><br><span class="line"># Path to directory where to store the data (separate multiple locations by comma):</span><br><span class="line"># 可以指定ES的数据存储目录，默认存储在ES_HOME&#x2F;data目录下</span><br><span class="line">#path.data: &#x2F;path&#x2F;to&#x2F;data</span><br><span class="line">#</span><br><span class="line"># Path to log files:</span><br><span class="line"># 可以指定ES的日志存储目录，默认存储在ES_HOME&#x2F;logs目录下</span><br><span class="line">#path.logs: &#x2F;path&#x2F;to&#x2F;logs</span><br><span class="line">#</span><br><span class="line"># ----------------------------------- Memory -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Lock the memory on startup:</span><br><span class="line"># 锁定物理内存地址，防止ES内存被交换出去,也就是避免ES使用swap交换分区中的内存</span><br><span class="line">#bootstrap.memory_lock: true</span><br><span class="line"># 确保ES_HEAP_SIZE参数设置为系统可用内存的一半左右</span><br><span class="line"># Make sure that the heap size is set to about half the memory available</span><br><span class="line"># on the system and that the owner of the process is allowed to use this</span><br><span class="line"># limit.</span><br><span class="line"># 当系统进行内存交换的时候，会导致ES的性能变的很差</span><br><span class="line"># Elasticsearch performs poorly when the system is swapping the memory.</span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Network -----------------------------------</span><br><span class="line">#</span><br><span class="line"># By default Elasticsearch is only accessible on localhost. Set a different</span><br><span class="line"># address here to expose this node on the network:</span><br><span class="line"># 为ES设置绑定的IP，默认是127.0.0.1，也就是默认只能通过127.0.0.1 或者localhost才能访问</span><br><span class="line"># ES 1.x版本默认绑定的是0.0.0.0，但是从ES 2.x版本之后默认绑定的是127.0.0.1</span><br><span class="line">#network.host: 192.168.0.1</span><br><span class="line">#</span><br><span class="line"># By default Elasticsearch listens for HTTP traffic on the first free port it</span><br><span class="line"># finds starting at 9200. Set a specific HTTP port here:</span><br><span class="line"># 为ES服务设置监听的端口，默认是9200</span><br><span class="line"># 如果想要在一台机器上启动多个ES实例，需要修改此处的端口号</span><br><span class="line">#http.port: 9200</span><br><span class="line">#</span><br><span class="line"># For more information, consult the network module documentation.</span><br><span class="line">#</span><br><span class="line"># --------------------------------- Discovery ----------------------------------</span><br><span class="line"># </span><br><span class="line"># Pass an initial list of hosts to perform discovery when this node is started:</span><br><span class="line"># The default list of hosts is [&quot;127.0.0.1&quot;, &quot;[::1]&quot;]</span><br><span class="line"># </span><br><span class="line"># 当启动新节点时，通过这个ip列表进行节点发现，组建集群</span><br><span class="line"># 默认ip列表：</span><br><span class="line"># 127.0.0.1，表示ipv4的本地回环地址。</span><br><span class="line">#[::1]，表示ipv6的本地回环地址。</span><br><span class="line"># 在ES 1.x中默认使用的是组播(multicast)协议，默认会自动发现同一网段的ES节点组建集群。</span><br><span class="line"># 从ES 2.x开始默认使用的是单播(unicast)协议，想要组建集群的话就需要在这指定要发现的节点信息了。</span><br><span class="line"># </span><br><span class="line"># 指定想要组装成一个ES集群的多个节点信息</span><br><span class="line">#discovery.seed_hosts: [&quot;host1&quot;, &quot;host2&quot;]</span><br><span class="line">#</span><br><span class="line"># Bootstrap the cluster using an initial set of master-eligible nodes:</span><br><span class="line"># 初始化一批具备成为主节点资格的节点【在选择主节点的时候会优先在这一批列表中进行选择】</span><br><span class="line">#cluster.initial_master_nodes: [&quot;node-1&quot;, &quot;node-2&quot;]</span><br><span class="line">#</span><br><span class="line"># For more information, consult the discovery and cluster formation module documentation.</span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Various -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Require explicit names when deleting indices:</span><br><span class="line"># 禁止使用通配符或_all删除索引, 必须使用名称或别名才能删除该索引。</span><br><span class="line">#action.destructive_requires_name: true</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这段配置的意思是，让 Elasticsearch 请求 JVM 锁定堆内存，防止内存被操作系统交换到磁盘上¹²。这样可以提高 Elasticsearch 的性能和稳定性，因为垃圾回收时不会触及已经交换出去的内存页¹。如果启用了 bootstrap.memory_lock 设置，那么 JVM 会预留它需要的任何内存⁴。如果要使用这个设置，还需要在操作系统或 Docker 容器中配置相应的 ulimit 或 sysctl 参数²³。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">您可以在一台机器上搭建多个ElasticSearch节点来组成一个集群。首先，您需要在机器上安装JDK环境，然后从官网下载ElasticSearch并解压。接着，您需要修改配置文件&#96;elasticsearch.yml&#96;，设置集群名称、节点名称、网络主机、HTTP端口等信息。此外，您还需要修改Linux系统设置，放行主节点端口，并创建ES用户来启动ES的多个节点。最后，您可以使用&#96;curl&#96;命令来查看ES节点的状态 ¹。</span><br></pre></td></tr></table></figure><h4 id="ES单机"><a href="#ES单机" class="headerlink" title="ES单机"></a>ES单机</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1：将ES的安装包上传到bigdata01的&#x2F;data&#x2F;soft目录下</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">2：在Linux中添加一个普通用户：es。</span><br><span class="line">因为ES目前不支持root用户启动。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# useradd -d &#x2F;home&#x2F;es -m es</span><br><span class="line">[root@bigdata01 soft]# passwd es</span><br><span class="line">Changing password for user es.</span><br><span class="line">New password: bigdata1234</span><br><span class="line">Retype new password: bigdata1234</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">3：修改Linux中最大文件描述符以及最大虚拟内存的参数</span><br><span class="line">因为ES对Linux的最大文件描述符以及最大虚拟内存有一定要求，所以需要修改，否则ES无法正常启动。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# vi &#x2F;etc&#x2F;security&#x2F;limits.conf </span><br><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 131072</span><br><span class="line">* soft nproc 2048</span><br><span class="line">* hard nproc 4096</span><br><span class="line">[root@bigdata01 soft]# vi &#x2F;etc&#x2F;sysctl.conf</span><br><span class="line">vm.max_map_count&#x3D;262144</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">4：重启Linux系统。</span><br><span class="line">前面修改的参数需要重启系统才会生效。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# reboot -h now</span><br><span class="line"></span><br><span class="line">5：解压ES安装包。</span><br><span class="line">[root@bigdata01 soft]# tar -zxvf elasticsearch-7.13.4-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">6：配置ES_JAVA_HOME环境变量，指向ES中内置的JDK。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# vi &#x2F;etc&#x2F;profile</span><br><span class="line">......</span><br><span class="line">export ES_JAVA_HOME&#x3D;&#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4&#x2F;jdk</span><br><span class="line">......</span><br><span class="line">[root@bigdata01 soft]# source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">7：修改elasticsearch-7.13.4目录的权限</span><br><span class="line">因为前面是使用root用户解压的，elasticsearch-7.13.4目录下的文件es用户是没有权限的。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# chmod 777 -R &#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">8：切换到es用户</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# su es</span><br><span class="line"></span><br><span class="line">9：修改elasticsearch.yml配置文件内容</span><br><span class="line">主要修改network.host、discovery.seed_hosts这两个参数。</span><br><span class="line"></span><br><span class="line">注意：yaml文件的格式，参数和值之间需要有一个空格。</span><br><span class="line"></span><br><span class="line">例如：network.host: bigdata01</span><br><span class="line">bigdata01前面必须要有一个空格，否则会报错。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[es@bigdata01 soft]$ cd elasticsearch-7.13.4</span><br><span class="line">[es@bigdata01 elasticsearch-7.13.4]$ vi config&#x2F;elasticsearch.yml </span><br><span class="line">......</span><br><span class="line">network.host: bigdata01</span><br><span class="line">discovery.seed_hosts: [&quot;bigdata01&quot;]</span><br><span class="line">......</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">10：启动ES服务【前台启动】</span><br><span class="line">[es@bigdata01 elasticsearch-7.13.4]$ bin&#x2F;elasticsearch</span><br><span class="line"></span><br><span class="line">按ctrl+c停止服务。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">11：启动ES服务【后台启动】</span><br><span class="line">在实际工作中需要将ES放在后台运行。</span><br><span class="line">[es@bigdata01 elasticsearch-7.13.4]$ bin&#x2F;elasticsearch -d</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">12：验证ES服务。</span><br><span class="line">通过jps命令验证进程是否存在。</span><br><span class="line">[es@bigdata01 elasticsearch-7.13.4]$ jps</span><br><span class="line">1849 Elasticsearch</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">通过web界面验证服务是否可以正常访问，端口为9200。</span><br><span class="line">http:&#x2F;&#x2F;bigdata01:9200&#x2F;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111139441.png" alt="image-20230611113938806"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：需要关闭防火墙。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">13：停止ES服务。</span><br><span class="line">使用kill命令停止。</span><br><span class="line"></span><br><span class="line">[es@bigdata01 elasticsearch-7.13.4]$ jps</span><br><span class="line">1849 Elasticsearch</span><br><span class="line">[es@bigdata01 elasticsearch-7.13.4]$ kill</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">14：日志排查方式。</span><br><span class="line">如果发现ES服务启动有问题，需要查看ES的日志。</span><br><span class="line">ES的相关日志都在ES_HOME的logs目录下，ES服务的核心日志在elasticsearch.log日志文件中。</span><br></pre></td></tr></table></figure><h4 id="ES集群"><a href="#ES集群" class="headerlink" title="ES集群"></a>ES集群</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ES集群规划：</span><br><span class="line">bigdata01</span><br><span class="line">bigdata02</span><br><span class="line">bigdata03</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1：在bigdata01、bigdata02、bigdata03中创建普通用户：es。</span><br><span class="line">具体创建步骤参考ES单机中的操作。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# useradd -d &#x2F;home&#x2F;es -m es</span><br><span class="line">[root@bigdata01 soft]# passwd es</span><br><span class="line">Changing password for user es.</span><br><span class="line">New password: bigdata1234</span><br><span class="line">Retype new password: bigdata1234</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">useradd es和useradd -d &#x2F;home&#x2F;es -m es的区别是，前者会创建一个名为es的用户，但不会指定或创建它的家目录，后者会创建一个名为es的用户，并指定它的家目录为&#x2F;home&#x2F;es，并且使用-m选项来创建这个目录¹。如果你想修改一个已经存在的用户的家目录，你可以使用usermod -d命令¹。</span><br><span class="line"></span><br><span class="line">不一定。useradd es的默认家目录取决于&#x2F;etc&#x2F;default&#x2F;useradd文件中的HOME参数³。如果没有指定或修改这个参数，那么默认家目录就是&#x2F;home&#x2F;es⁴。但是，如果你没有使用-m或--create-home选项，那么useradd es不会创建这个家目录⁵。你需要手动创建或者使用usermod -m -d命令来移动已有的内容到新的家目录¹。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">2：在bigdata01、bigdata02、bigdata03中修改Linux中最大文件描述符以及最大虚拟内存的参数。</span><br><span class="line">具体修改步骤参考ES单机中的操作。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# vi &#x2F;etc&#x2F;security&#x2F;limits.conf </span><br><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 131072</span><br><span class="line">* soft nproc 2048</span><br><span class="line">* hard nproc 4096</span><br><span class="line">[root@bigdata01 soft]# vi &#x2F;etc&#x2F;sysctl.conf</span><br><span class="line">vm.max_map_count&#x3D;262144</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">3：重启bigdata01、bigdata02、bigdata03，让前面修改的参数生效。</span><br><span class="line">具体操作步骤参考ES单机中的操作。</span><br><span class="line">4：在bigdata01、bigdata02、bigdata03中配置ES_JAVA_HOME环境变量，指向ES中内置的JDK。</span><br><span class="line">具体配置步骤参考ES单机中的操作。</span><br><span class="line">5：在bigdata01中重新解压ES的安装包以及修改目录权限</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# tar -zxvf elasticsearch-7.13.4-linux-x86_64.tar.gz</span><br><span class="line">[root@bigdata01 soft]# chmod 777 -R &#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">6：修改elasticsearch.yml配置文件</span><br><span class="line">主要修改network.host、discovery.seed_hosts和cluster.initial_master_nodes这三个参数。</span><br><span class="line"></span><br><span class="line">7：将bigdata01中修改好配置的elasticsearch-7.13.4目录远程拷贝到bigdata02和bigdata03。</span><br><span class="line">[root@bigdata01 soft]# scp -rq elasticsearch-7.13.4 bigdata02:&#x2F;data&#x2F;soft&#x2F;</span><br><span class="line">[root@bigdata01 soft]# scp -rq elasticsearch-7.13.4 bigdata03:&#x2F;data&#x2F;soft&#x2F;</span><br><span class="line"></span><br><span class="line">8：分别修改bigdata02和bigdata03中ES的elasticsearch.yml配置文件。</span><br><span class="line">修改bigdata02中的elasticsearch.yml配置文件，主要修改network.host参数的值为当前节点主机名。</span><br><span class="line">[root@bigdata02 elasticsearch-7.13.4]# vi config&#x2F;elasticsearch.yml </span><br><span class="line">......</span><br><span class="line">network.host: bigdata02</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">修改bigdata03中的elasticsearch.yml配置文件，主要修改network.host参数的值为当前节点主机名。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">9：在bigdata01、bigdata02、bigdata03中分别启动ES。</span><br><span class="line">在bigdata01上启动。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 elasticsearch-7.13.4]# su es</span><br><span class="line">[es@bigdata01 elasticsearch-7.13.4]$ bin&#x2F;elasticsearch -d</span><br><span class="line"></span><br><span class="line">在bigdata02上启动。</span><br><span class="line">在bigdata03上启动。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">10：验证集群中的进程。</span><br><span class="line">分别在bigdata01、bigdata02、bigdata03中验证进程是否存在。</span><br><span class="line"></span><br><span class="line">11：验证这几个节点是否组成一个集群。</span><br><span class="line">通过ES的REST API可以很方便的查看集群中的节点信息。</span><br><span class="line">http:&#x2F;&#x2F;bigdata01:9200&#x2F;_nodes&#x2F;_all?pretty</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111207382.png" alt="image-20230611120738840"></p><h3 id="ES集群监控管理工具-cerebro"><a href="#ES集群监控管理工具-cerebro" class="headerlink" title="ES集群监控管理工具-cerebro"></a>ES集群监控管理工具-cerebro</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">为了便于我们管理监控ES集群，推荐使用cerebro这个工具。</span><br><span class="line">1：首先到github上下载cerebro的安装包。</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;lmenezes&#x2F;cerebro&#x2F;releases</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111208875.png" alt="image-20230611120816538"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">2：将下载好的cerebro-0.9.4.zip安装包上传到bigdata01的&#x2F;data&#x2F;soft目录中并且解压。</span><br><span class="line"></span><br><span class="line">注意：cerebro部署在任意节点上都可以，只要能和ES集群通信即可。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# ll cerebro-0.9.4.zip </span><br><span class="line">-rw-r--r--. 1 root root 57251010 Sep 11  2021 cerebro-0.9.4.zip</span><br><span class="line">[root@bigdata01 soft]# unzip cerebro-0.9.4.zip</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">3：启动cerebro。</span><br><span class="line">将cerebro放在后台启动。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 cerebro-0.9.4]# nohup bin&#x2F;cerebro 2&gt;&amp;1 &gt;&#x2F;dev&#x2F;null &amp;</span><br><span class="line"></span><br><span class="line">这段命令是在Linux系统中运行的。它的意思是在后台运行&#96;cerebro&#96;程序，即使您退出终端，该程序也会继续运行。&#96;nohup&#96;命令用于在后台运行程序，&#96;2&gt;&amp;1 &gt;&#x2F;dev&#x2F;null&#96;表示将标准错误输出重定向到标准输出，并将标准输出重定向到&#96;&#x2F;dev&#x2F;null&#96;，即丢弃所有输出信息。最后的&#96;&amp;&#96;表示在后台运行该命令。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">注意：默认cerebro监听的端口是9000，如果出现端口冲突，需要修改cerebro监控的端口</span><br><span class="line"></span><br><span class="line">在启动cerebro的时候可以通过http.port参数指定端口号，如下命令：</span><br><span class="line">bin&#x2F;cerebro -Dhttp.port&#x3D;1234</span><br><span class="line"></span><br><span class="line">默认通过9000端口可以访问cerebro的web界面。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111210790.png" alt="image-20230611121030491"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4：使用cerebro。</span><br><span class="line">在Node address中输入ES集群任意一个节点的连接信息即可。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111211165.png" alt="image-20230611121101515"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5：使用cerebro监控管理ES集群。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111211190.png" alt="image-20230611121121089"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">注意：集群有三种状态，green、yellow、red。</span><br><span class="line"></span><br><span class="line">green：表示集群处于健康状态，可以正常使用。</span><br><span class="line">yellow：表示集群处于风险状态，可以正常使用，可能是分片的副本个数不完整。例如：分片的副本数为2，但是现在分片的副本只有1份。</span><br><span class="line">red：表示集群处于故障状态，无法正常使用，可能是集群分片不完整。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6：cerebro的所有功能。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111212741.png" alt="image-20230611121226272"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6.1：查看节点信息</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111212780.png" alt="image-20230611121253312"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6.2：rest功能。</span><br><span class="line">便于在页面中操作REST API接口</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111213303.png" alt="image-20230611121329984"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6.3：更多功能。</span><br><span class="line">包括创建索引、集群参数、别名、分词功能、索引模板等。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111214032.png" alt="image-20230611121359073"></p><h3 id="ES的基本操作"><a href="#ES的基本操作" class="headerlink" title="ES的基本操作"></a>ES的基本操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">针对ES的操作，官方提供了很多种操作方式。</span><br><span class="line">https:&#x2F;&#x2F;www.elastic.co&#x2F;guide&#x2F;index.html</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111214584.png" alt="image-20230611121434249"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在实际工作中使用ES的时候，如果想屏蔽语言的差异，建议使用REST API，这种兼容性比较好，但是个人感觉有的操作使用起来比较麻烦，需要拼接组装各种数据字符串。</span><br><span class="line"></span><br><span class="line">针对Java程序员而言，还有一种选择是使用Java API，这种方式相对于REST API而言，代码量会大一些，但是代码层面看起来是比较清晰的。</span><br><span class="line"></span><br><span class="line">下面在操作ES的时候，分别使用一下这两种方式。</span><br></pre></td></tr></table></figure><h4 id="使用REST-API的方式操作ES"><a href="#使用REST-API的方式操作ES" class="headerlink" title="使用REST API的方式操作ES"></a>使用REST API的方式操作ES</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">如果想要在Linux命令行中使用REST API操作ES，需要借助于CURL工具。</span><br><span class="line">CURL是利用URL语法在命令行下工作的开源文件传输工具，使用CURL可以简单实现常见的get&#x2F;post请求。</span><br><span class="line"></span><br><span class="line">curl后面通过-X参数指定请求类型，通过-d指定要传递的参数。</span><br></pre></td></tr></table></figure><h5 id="索引库的操作（创建、删除）"><a href="#索引库的操作（创建、删除）" class="headerlink" title="索引库的操作（创建、删除）"></a>索引库的操作（创建、删除）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HTTP协议中除了GET和POST请求之外，还有其他几种请求类型，包括：</span><br><span class="line"></span><br><span class="line">- **HEAD**：与GET类似，但只返回HTTP头部信息，不返回实体内容。</span><br><span class="line">- **PUT**：用于上传资源到服务器，通常用于更新资源。</span><br><span class="line">- **DELETE**：用于删除服务器上的资源。</span><br><span class="line">- **OPTIONS**：用于查询服务器支持的HTTP方法。</span><br><span class="line">- **TRACE**：用于追踪请求-响应的传输路径。</span><br><span class="line">- **CONNECT**：用于建立网络隧道，通常用于SSL加密。</span><br><span class="line">- **GET**：用于从服务器获取数据。它将请求参数附加在URL后面，通过查询字符串传递给服务器。GET请求应该只用于获取数据，不应该用于产生副作用。</span><br><span class="line">- **POST**：用于向服务器提交数据。它将请求参数放在HTTP请求体中，可以传输大量数据。POST请求通常用于提交表单或上传文件。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">创建索引库：</span><br><span class="line">curl -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test&#x2F;&#39;</span><br><span class="line">这里使用PUT或者POST都可以。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# curl  -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test&#x2F;&#39;</span><br><span class="line">&#123;&quot;acknowledged&quot;:true,&quot;shards_acknowledged&quot;:true,&quot;index&quot;:&quot;test&quot;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：索引库名称必须要全部小写，不能以_、 -、 +开头，也不能包含逗号。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@bigdata01 soft]# curl  -XDELETE &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test&#x2F;&#39;</span><br><span class="line">&#123;&quot;acknowledged&quot;:true&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：索引库可以提前创建，也可以在后期添加数据的时候直接指定一个不存在的索引库，ES默认会自动创建这个索引库。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">手工创建索引库和自动创建索引库的区别就是，手工创建可以自定义索引库的分片数量。</span><br><span class="line">下面创建一个具有3个分片的索引库。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test&#x2F;&#39; -d&#39;&#123;&quot;settings&quot;:&#123;&quot;index.number_of_shards&quot;:3&#125;&#125;&#39;</span><br><span class="line">&#123;&quot;acknowledged&quot;:true,&quot;shards_acknowledged&quot;:true,&quot;index&quot;:&quot;test&quot;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-H参数用于在curl命令中设置HTTP请求头。在这个例子中，-H &quot;Content-Type: application&#x2F;json&quot;表示设置HTTP请求头的Content-Type字段为application&#x2F;json，即告诉服务器请求体中的数据是JSON格式。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111223294.png" alt="image-20230611122310001"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">其中实线的框表示是主分片，虚线框是副本分片。</span><br><span class="line">索引分片编号是从0开始的，并且索引分片在物理层面是存在的，可以到集群中查看一下，从界面中也看到test索引库的1号和2号分片是在bigdata01节点上的。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">到bigdata01节点中看一下，ES中的所有数据都在ES的数据存储目录中，默认是在ES_HOME下的data目录里面：</span><br><span class="line">[root@bigdata01 1IQ2r-vqRxSsicd8BzWPtg]# pwd</span><br><span class="line">&#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4&#x2F;data&#x2F;nodes&#x2F;0&#x2F;indices&#x2F;1IQ2r-vqRxSsicd8BzWPtg</span><br><span class="line">[root@bigdata01 1IQ2r-vqRxSsicd8BzWPtg]# ll</span><br><span class="line">total 0</span><br><span class="line">drwxrwxr-x. 5 es es 49 Feb 26 18:01 1</span><br><span class="line">drwxrwxr-x. 5 es es 49 Feb 26 18:01 2</span><br><span class="line">drwxrwxr-x. 2 es es 24 Feb 26 18:01 _state</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这里面的1IQ2r-vqRxSsicd8BzWPtg表示的是索引库的UUID。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111225755.png" alt="image-20230611122533512"></p><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111225521.png" alt="image-20230611122545144"></p><h5 id="索引的操作（增、删、改、查）"><a href="#索引的操作（增、删、改、查）" class="headerlink" title="索引的操作（增、删、改、查）"></a>索引的操作（增、删、改、查）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">添加索引</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;emp&#x2F;_doc&#x2F;1&#39; -d &#39;&#123;&quot;name&quot;:&quot;tom&quot;,&quot;age&quot;:20&#125;&#39;</span><br><span class="line">&#123;&quot;_index&quot;:&quot;emp&quot;,&quot;_type&quot;:&quot;_doc&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:1,&quot;result&quot;:&quot;created&quot;,&quot;_shards&quot;:&#123;&quot;total&quot;:2,&quot;successful&quot;:1,&quot;failed&quot;:0&#125;,&quot;_seq_no&quot;:0,&quot;_primary_term&quot;:1&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注意：</span><br><span class="line"></span><br><span class="line">1.这里emp索引库是不存在的，在使用的时候ES会自动创建，只不过索引分片数量默认是1。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111230257.png" alt="image-20230611123003969"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2.为了兼容之前的API，虽然ES现在取消了Type，但是API中Type的位置还是预留出来了，官方建议统一使用_doc 。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">注意：在添加索引的时候，如果没有指定数据的ID，那么ES会自动生成一个随机的唯一ID。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;emp&#x2F;_doc&#39; -d &#39;&#123;&quot;name&quot;:&quot;jack&quot;,&quot;age&quot;:30&#125;&#39; </span><br><span class="line">&#123;&quot;_index&quot;:&quot;emp&quot;,&quot;_type&quot;:&quot;_doc&quot;,&quot;_id&quot;:&quot;EFND8aMBpApLBooiIWda&quot;,&quot;_version&quot;:1,&quot;result&quot;:&quot;created&quot;,&quot;_shards&quot;:&#123;&quot;total&quot;:2,&quot;successful&quot;:2,&quot;failed&quot;:0&#125;,&quot;_seq_no&quot;:1,&quot;_primary_term&quot;:1&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">查询索引：</span><br><span class="line">查看id&#x3D;1的索引数据。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;emp&#x2F;_doc&#x2F;1?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;_index&quot; : &quot;emp&quot;,</span><br><span class="line">  &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">  &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">  &quot;_version&quot; : 1,</span><br><span class="line">  &quot;_seq_no&quot; : 0,</span><br><span class="line">  &quot;_primary_term&quot; : 1,</span><br><span class="line">  &quot;found&quot; : true,</span><br><span class="line">  &quot;_source&quot; : &#123;</span><br><span class="line">    &quot;name&quot; : &quot;tom&quot;,</span><br><span class="line">    &quot;age&quot; : 20</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">只获取部分字段内容。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;emp&#x2F;_doc&#x2F;1?_source&#x3D;name&amp;pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;_index&quot; : &quot;emp&quot;,</span><br><span class="line">  &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">  &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">  &quot;_version&quot; : 1,</span><br><span class="line">  &quot;_seq_no&quot; : 0,</span><br><span class="line">  &quot;_primary_term&quot; : 1,</span><br><span class="line">  &quot;found&quot; : true,</span><br><span class="line">  &quot;_source&quot; : &#123;</span><br><span class="line">    &quot;name&quot; : &quot;tom&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@bigdata01 soft]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;emp&#x2F;_doc&#x2F;1?_source&#x3D;name,age&amp;pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;_index&quot; : &quot;emp&quot;,</span><br><span class="line">  &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">  &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">  &quot;_version&quot; : 1,</span><br><span class="line">  &quot;_seq_no&quot; : 0,</span><br><span class="line">  &quot;_primary_term&quot; : 1,</span><br><span class="line">  &quot;found&quot; : true,</span><br><span class="line">  &quot;_source&quot; : &#123;</span><br><span class="line">    &quot;name&quot; : &quot;tom&quot;,</span><br><span class="line">    &quot;age&quot; : 20</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">查询指定索引库中所有数据。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;emp&#x2F;_search?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;took&quot; : 2,</span><br><span class="line">  &quot;timed_out&quot; : false,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 1,</span><br><span class="line">    &quot;successful&quot; : 1,</span><br><span class="line">    &quot;skipped&quot; : 0,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;hits&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : &#123;</span><br><span class="line">      &quot;value&quot; : 2,</span><br><span class="line">      &quot;relation&quot; : &quot;eq&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;max_score&quot; : 1.0,</span><br><span class="line">    &quot;hits&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;emp&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;_score&quot; : 1.0,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;name&quot; : &quot;tom&quot;,</span><br><span class="line">          &quot;age&quot; : 20</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;emp&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;EVPO8aMBpApLBooib2e7&quot;,</span><br><span class="line">        &quot;_score&quot; : 1.0,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;name&quot; : &quot;jack&quot;,</span><br><span class="line">          &quot;age&quot; : 30</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：针对这种查询操作，可以在浏览器里面执行，或者在cerebo中查询都是可以的，看起来更加清晰。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">在这里扩展一个知识点，使用RestAPI执行query查询。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stuinfo&#x2F;_search?pretty&#39; -d&#39;&#123;&quot;query&quot;:&#123;&quot;match&quot;:&#123;&quot;address&quot;:&quot;bj&quot;&#125;&#125;&#125;&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;took&quot; : 5,</span><br><span class="line">  &quot;timed_out&quot; : false,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 1,</span><br><span class="line">    &quot;successful&quot; : 1,</span><br><span class="line">    &quot;skipped&quot; : 0,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;hits&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : &#123;</span><br><span class="line">      &quot;value&quot; : 1,</span><br><span class="line">      &quot;relation&quot; : &quot;eq&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;max_score&quot; : 0.2876821,</span><br><span class="line">    &quot;hits&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;stuinfo&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;_score&quot; : 0.2876821,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;sex&quot; : &quot;man&quot;,</span><br><span class="line">          &quot;name&quot; : &quot;zs&quot;,</span><br><span class="line">          &quot;age&quot; : 20</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="更新索引"><a href="#更新索引" class="headerlink" title="更新索引"></a>更新索引</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">可以分为全部更新和局部更新</span><br><span class="line">全部更新：同添加索引，如果指定id的索引数据（文档）已经存在，则执行更新操作。</span><br><span class="line"></span><br><span class="line">注意：执行更新操作的时候，ES首先将旧的文标记为删除状态，然后添加新的文档</span><br><span class="line"></span><br><span class="line">旧的文档不会立即消失，但是你也无法访问，ES会在你继续添加更多数据的时候在后台清理已经标记为删除状态的文档。</span><br><span class="line"></span><br><span class="line">局部更新：可以添加新字段或者更新已有字段，必须使用POST请求。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@bigdata01 soft]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;emp&#x2F;_doc&#x2F;1&#x2F;_update&#39; -d &#39;&#123;&quot;doc&quot;:&#123;&quot;age&quot;:25&#125;&#125;&#39;</span><br><span class="line">&#123;&quot;_index&quot;:&quot;emp&quot;,&quot;_type&quot;:&quot;_doc&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:2,&quot;result&quot;:&quot;updated&quot;,&quot;_shards&quot;:&#123;&quot;total&quot;:2,&quot;successful&quot;:2,&quot;failed&quot;:0&#125;,&quot;_seq_no&quot;:2,&quot;_primary_term&quot;:1&#125;</span><br></pre></td></tr></table></figure><h5 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">删除id&#x3D;1的索引数据。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# curl -XDELETE &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;emp&#x2F;_doc&#x2F;1&#39;</span><br><span class="line">&#123;&quot;_index&quot;:&quot;emp&quot;,&quot;_type&quot;:&quot;_doc&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:3,&quot;result&quot;:&quot;deleted&quot;,&quot;_shards&quot;:&#123;&quot;total&quot;:2,&quot;successful&quot;:2,&quot;failed&quot;:0&#125;,&quot;_seq_no&quot;:3,&quot;_primary_term&quot;:1&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@bigdata01 soft]# curl -XDELETE &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;emp&#x2F;_doc&#x2F;1&#39;</span><br><span class="line">&#123;&quot;_index&quot;:&quot;emp&quot;,&quot;_type&quot;:&quot;_doc&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:4,&quot;result&quot;:&quot;not_found&quot;,&quot;_shards&quot;:&#123;&quot;total&quot;:2,&quot;successful&quot;:2,&quot;failed&quot;:0&#125;,&quot;_seq_no&quot;:4,&quot;_primary_term&quot;:1&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">如果索引数据（文档）存在，ES返回的数据中，result属性值为deleted，_version（版本）属性的值+1。</span><br><span class="line"></span><br><span class="line">如果索引数据不存在，ES返回的数据中，result属性值为not_found，但是_version属性的值依然会+1，这属于ES的版本控制系统，它保证了我们在多个节点间的不同操作的顺序都被正确标记了。</span><br><span class="line">对于索引数据的每次写操作，无论是index，update还是delete，ES都会将_version增加 1。该增加是原子的，并且保证在操作成功返回时会发生。</span><br><span class="line"></span><br><span class="line">注意：删除一条索引数据（文档）也不会立即生效，它只是被标记成已删除状态。ES将会在你之后添加更多索引数据的时候才会在后台清理标记为删除状态的内容。</span><br></pre></td></tr></table></figure><h5 id="Bulk批量操作"><a href="#Bulk批量操作" class="headerlink" title="Bulk批量操作"></a>Bulk批量操作</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Bulk API可以帮助我们同时执行多个请求，提高效率。</span><br><span class="line">格式：</span><br><span class="line">&#123; action: &#123; metadata &#125;&#125;</span><br><span class="line">&#123; request body &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">解释：</span><br><span class="line"></span><br><span class="line">action：index&#x2F;create&#x2F;update&#x2F;delete</span><br><span class="line">metadata：_index,_type,_id</span><br><span class="line">request body：_source(删除操作不需要) </span><br><span class="line"></span><br><span class="line">create 和index的区别：如果数据存在，使用create操作失败，会提示文档已经存在，使用index则可以成功执行(相当于更新操作)。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">下面来看一个案例，假设在MySQL中有一批数据，首先需要从MySQL中把数据读取出来，然后将数据转化为Bulk需要的数据格式。</span><br><span class="line"></span><br><span class="line">在这直接手工生成Bulk需要的数据格式。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@bigdata01 elasticsearch-7.13.4]# vi request </span><br><span class="line">&#123; &quot;index&quot; : &#123; &quot;_index&quot; : &quot;test&quot;, &quot;_type&quot; : &quot;_doc&quot;, &quot;_id&quot; : &quot;1&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;field1&quot; : &quot;value1&quot; &#125;</span><br><span class="line"></span><br><span class="line">&#123; &quot;index&quot; : &#123; &quot;_index&quot; : &quot;test&quot;, &quot;_type&quot; : &quot;_doc&quot;, &quot;_id&quot; : &quot;2&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;field1&quot; : &quot;value1&quot; &#125;</span><br><span class="line"></span><br><span class="line">&#123; &quot;delete&quot; : &#123; &quot;_index&quot; : &quot;test&quot;, &quot;_type&quot; : &quot;_doc&quot;, &quot;_id&quot; : &quot;2&quot; &#125; &#125;</span><br><span class="line"></span><br><span class="line">&#123; &quot;create&quot; : &#123; &quot;_index&quot; : &quot;test&quot;, &quot;_type&quot; : &quot;_doc&quot;, &quot;_id&quot; : &quot;3&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;field1&quot; : &quot;value1&quot; &#125;</span><br><span class="line"></span><br><span class="line">&#123; &quot;update&quot; : &#123;&quot;_index&quot; : &quot;test&quot;, &quot;_type&quot; : &quot;_doc&quot;,&quot;_id&quot; : &quot;1&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;doc&quot; : &#123;&quot;field2&quot; : &quot;value2&quot;&#125; &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">执行Bulk API</span><br><span class="line"></span><br><span class="line">[root@bigdata01 elasticsearch-7.13.4]# curl -H &quot;Content-Type: application&#x2F;json&quot;  -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test&#x2F;_doc&#x2F;_bulk&#39; --data-binary @request</span><br><span class="line">&#123;&quot;took&quot;:167,&quot;errors&quot;:false,&quot;items&quot;:[&#123;&quot;index&quot;:&#123;&quot;_index&quot;:&quot;test&quot;,&quot;_type&quot;:&quot;_doc&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:1,&quot;result&quot;:&quot;created&quot;,&quot;_shards&quot;:&#123;&quot;total&quot;:2,&quot;successful&quot;:2,&quot;failed&quot;:0&#125;,&quot;_seq_no&quot;:0,&quot;_primary_term&quot;:1,&quot;status&quot;:201&#125;&#125;,&#123;&quot;index&quot;:&#123;&quot;_index&quot;:&quot;test&quot;,&quot;_type&quot;:&quot;_doc&quot;,&quot;_id&quot;:&quot;2&quot;,&quot;_version&quot;:1,&quot;result&quot;:&quot;created&quot;,&quot;_shards&quot;:&#123;&quot;total&quot;:2,&quot;successful&quot;:2,&quot;failed&quot;:0&#125;,&quot;_seq_no&quot;:0,&quot;_primary_term&quot;:1,&quot;status&quot;:201&#125;&#125;,&#123;&quot;delete&quot;:&#123;&quot;_index&quot;:&quot;test&quot;,&quot;_type&quot;:&quot;_doc&quot;,&quot;_id&quot;:&quot;2&quot;,&quot;_version&quot;:2,&quot;result&quot;:&quot;deleted&quot;,&quot;_shards&quot;:&#123;&quot;total&quot;:2,&quot;successful&quot;:2,&quot;failed&quot;:0&#125;,&quot;_seq_no&quot;:1,&quot;_primary_term&quot;:1,&quot;status&quot;:200&#125;&#125;,&#123;&quot;create&quot;:&#123;&quot;_index&quot;:&quot;test&quot;,&quot;_type&quot;:&quot;_doc&quot;,&quot;_id&quot;:&quot;3&quot;,&quot;_version&quot;:1,&quot;result&quot;:&quot;created&quot;,&quot;_shards&quot;:&#123;&quot;total&quot;:2,&quot;successful&quot;:2,&quot;failed&quot;:0&#125;,&quot;_seq_no&quot;:2,&quot;_primary_term&quot;:1,&quot;status&quot;:201&#125;&#125;,&#123;&quot;update&quot;:&#123;&quot;_index&quot;:&quot;test&quot;,&quot;_type&quot;:&quot;_doc&quot;,&quot;_id&quot;:&quot;1&quot;,&quot;_version&quot;:2,&quot;result&quot;:&quot;updated&quot;,&quot;_shards&quot;:&#123;&quot;total&quot;:2,&quot;successful&quot;:2,&quot;failed&quot;:0&#125;,&quot;_seq_no&quot;:1,&quot;_primary_term&quot;:1,&quot;status&quot;:200&#125;&#125;]&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@bigdata01 elasticsearch-7.13.4]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test&#x2F;_search?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;took&quot; : 6,</span><br><span class="line">  &quot;timed_out&quot; : false,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 3,</span><br><span class="line">    &quot;successful&quot; : 3,</span><br><span class="line">    &quot;skipped&quot; : 0,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;hits&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : &#123;</span><br><span class="line">      &quot;value&quot; : 2,</span><br><span class="line">      &quot;relation&quot; : &quot;eq&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;max_score&quot; : 1.0,</span><br><span class="line">    &quot;hits&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;, </span><br><span class="line">        &quot;_id&quot; : &quot;3&quot;,</span><br><span class="line">        &quot;_score&quot; : 1.0,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;field1&quot; : &quot;value1&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;_score&quot; : 1.0,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;field1&quot; : &quot;value1&quot;,</span><br><span class="line">          &quot;field2&quot; : &quot;value2&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Bulk一次最大可以处理多少数据量？</span><br><span class="line"></span><br><span class="line">Bulk会把将要处理的数据加载到内存中，所以数据量是有限制的，最佳的数据量不是一个确定的数值，它取决于集群硬件，文档大小、文档复杂性，索引以及ES集群的负载。</span><br><span class="line"></span><br><span class="line">一般建议是1000-5000个文档，如果文档很大，可以适当减少，文档总大小建议是5-15MB，默认不能超过100M。</span><br><span class="line">如果想要修改最大限制大小，可以在ES的配置文件中修改http.max_content_length: 100mb，但是不建议，因为太大的话Bulk操作也会慢。</span><br></pre></td></tr></table></figure><h4 id="使用Java-API的方式操作ES"><a href="#使用Java-API的方式操作ES" class="headerlink" title="使用Java API的方式操作ES"></a>使用Java API的方式操作ES</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">针对Java API，目前ES提供了两个Java REST Client版本:</span><br><span class="line"></span><br><span class="line">1.Java Low Level REST Client：</span><br><span class="line">低级别的REST客户端，通过HTTP与集群交互，用户需自己组装请求JSON串，以及解析响应JSON串。兼容所有Elasticsearch版本。</span><br><span class="line">这种方式其实就相当于使用Java对前面讲的REST API做了一层简单的封装，前面我们是使用的CURL这个工具执行的，现在是使用Java代码模拟执行HTTP请求了。</span><br><span class="line"></span><br><span class="line">2.Java High Level REST Client：</span><br><span class="line">高级别的REST客户端，基于低级别的REST客户端进行了封装，增加了组装请求JSON串、解析响应JSON串等相关API，开发代码使用的ES版本需要和集群中的ES版本一致，否则会有版本冲突问题。</span><br><span class="line">这种方式是从ES 6.0版本开始加入的，目的是以Java面向对象的方式进行请求、响应处理。</span><br><span class="line">高级别的REST客户端会兼容高版本的ES集群，例如：使用ES7.0版本开发的代码可以和任何7.x版本的ES集群交互。</span><br><span class="line">如果ES集群后期升级到了8.x版本，那么也要升级之前基于ES 7.0版本开发的代码。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">如果考虑到代码后期的兼容性，建议使用Java Low Level REST Client。</span><br><span class="line">如果考虑到易用性，建议使用Java High Level REST Client。</span><br><span class="line">在这我们使用Java High Level REST Client。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">创建maven项目：db_elasticsearch</span><br><span class="line">创建包：com.imooc.es</span><br><span class="line">在pom.xml文件中添加ES的依赖和日志的依赖。</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.elasticsearch.client&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;elasticsearch-rest-high-level-client&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;version&gt;7.13.4&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.logging.log4j&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;log4j-core&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.14.1&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在resources目录下添加log4j2.properties。</span><br><span class="line"></span><br><span class="line">appender.console.type &#x3D; Console</span><br><span class="line">appender.console.name &#x3D; console</span><br><span class="line">appender.console.layout.type &#x3D; PatternLayout</span><br><span class="line">appender.console.layout.pattern &#x3D; [%d&#123;ISO8601&#125;][%-5p][%-25c] %marker%m%n</span><br><span class="line"></span><br><span class="line">rootLogger.level &#x3D; info</span><br><span class="line">rootLogger.appenderRef.console.ref &#x3D; console</span><br></pre></td></tr></table></figure><h5 id="索引库的操作（创建、删除）-1"><a href="#索引库的操作（创建、删除）-1" class="headerlink" title="索引库的操作（创建、删除）"></a>索引库的操作（创建、删除）</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.es;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpHost;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.admin.indices.delete.DeleteIndexRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RequestOptions;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestHighLevelClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.indices.CreateIndexRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.settings.Settings;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 针对ES中索引库的操作</span></span><br><span class="line"><span class="comment"> * 1：创建索引库</span></span><br><span class="line"><span class="comment"> * 2：删除索引库</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EsIndexOp</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//获取RestClient连接</span></span><br><span class="line">        RestHighLevelClient client = <span class="keyword">new</span> RestHighLevelClient(</span><br><span class="line">                RestClient.builder(</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata01"</span>, <span class="number">9200</span>, <span class="string">"http"</span>),</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata02"</span>, <span class="number">9200</span>, <span class="string">"http"</span>),</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata03"</span>, <span class="number">9200</span>, <span class="string">"http"</span>)));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建索引库</span></span><br><span class="line">        <span class="comment">//createIndex(client);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//删除索引库</span></span><br><span class="line">        <span class="comment">//deleteIndex(client);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭连接</span></span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteIndex</span><span class="params">(RestHighLevelClient client)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        DeleteIndexRequest deleteRequest = <span class="keyword">new</span> DeleteIndexRequest(<span class="string">"java_test"</span>);</span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        client.indices().delete(deleteRequest, RequestOptions.DEFAULT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createIndex</span><span class="params">(RestHighLevelClient client)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        CreateIndexRequest createRequest = <span class="keyword">new</span> CreateIndexRequest(<span class="string">"java_test"</span>);</span><br><span class="line">        <span class="comment">//指定索引库的配置信息</span></span><br><span class="line">        createRequest.settings(Settings.builder()</span><br><span class="line">                .put(<span class="string">"index.number_of_shards"</span>, <span class="number">3</span>)<span class="comment">//指定分片个数</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        client.indices().create(createRequest, RequestOptions.DEFAULT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">执行代码的时候会有一个警告信息，提示ES集群没有开启权限校验机制，其实在企业中只要在运维层面控制好了ES集群IP和端口的访问其实就足够了。</span><br></pre></td></tr></table></figure><h5 id="索引的操作（增、删、改、查、Bulk批量操作）"><a href="#索引的操作（增、删、改、查、Bulk批量操作）" class="headerlink" title="索引的操作（增、删、改、查、Bulk批量操作）"></a>索引的操作（增、删、改、查、Bulk批量操作）</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.es;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.logging.LogFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpHost;</span><br><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.LogManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.bulk.BulkItemResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.bulk.BulkRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.bulk.BulkResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.delete.DeleteRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.get.GetRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.get.GetResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.index.IndexRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.update.UpdateRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RequestOptions;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestHighLevelClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.Strings;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.xcontent.XContentType;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.fetch.subphase.FetchSourceContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 针对ES中索引数据的操作</span></span><br><span class="line"><span class="comment"> * 增删改查</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EsDataOp</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger logger = LogManager.getLogger(EsDataOp<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//获取RestClient连接</span></span><br><span class="line">        RestHighLevelClient client = <span class="keyword">new</span> RestHighLevelClient(</span><br><span class="line">                RestClient.builder(</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata01"</span>, <span class="number">9200</span>, <span class="string">"http"</span>),</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata02"</span>, <span class="number">9200</span>, <span class="string">"http"</span>),</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata03"</span>, <span class="number">9200</span>, <span class="string">"http"</span>)));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建索引</span></span><br><span class="line">        <span class="comment">//addIndexByJson(client);</span></span><br><span class="line">        <span class="comment">//addIndexByMap(client);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//查询索引</span></span><br><span class="line">        <span class="comment">//getIndex(client);</span></span><br><span class="line">        <span class="comment">//getIndexByFiled(client);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//更新索引</span></span><br><span class="line">        <span class="comment">//注意：可以使用创建索引直接完整更新已存在的数据</span></span><br><span class="line">        <span class="comment">//updateIndexByPart(client);//局部更新</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//删除索引</span></span><br><span class="line">        <span class="comment">//deleteIndex(client);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//Bulk批量操作</span></span><br><span class="line">        <span class="comment">//bulkIndex(client);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭连接</span></span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bulkIndex</span><span class="params">(RestHighLevelClient client)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        BulkRequest request = <span class="keyword">new</span> BulkRequest();</span><br><span class="line">        request.add(<span class="keyword">new</span> IndexRequest(<span class="string">"emp"</span>).id(<span class="string">"20"</span>)</span><br><span class="line">                .source(XContentType.JSON,<span class="string">"field1"</span>, <span class="string">"value1"</span>,<span class="string">"field2"</span>,<span class="string">"value2"</span>));</span><br><span class="line">        request.add(<span class="keyword">new</span> DeleteRequest(<span class="string">"emp"</span>, <span class="string">"10"</span>));<span class="comment">//id为10的数据不存在，但是执行删除是不会报错的</span></span><br><span class="line">        request.add(<span class="keyword">new</span> UpdateRequest(<span class="string">"emp"</span>, <span class="string">"11"</span>)</span><br><span class="line">                .doc(XContentType.JSON,<span class="string">"age"</span>, <span class="number">19</span>));</span><br><span class="line">        request.add(<span class="keyword">new</span> UpdateRequest(<span class="string">"emp"</span>, <span class="string">"12"</span>)<span class="comment">//id为12的数据不存在，这一条命令在执行的时候会失败</span></span><br><span class="line">                .doc(XContentType.JSON,<span class="string">"age"</span>, <span class="number">19</span>));</span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        BulkResponse bulkResponse = client.bulk(request, RequestOptions.DEFAULT);</span><br><span class="line">        <span class="comment">//如果Bulk中的个别语句出错不会导致整个Bulk执行失败，所以可以在这里判断一下是否有返回执行失败的信息</span></span><br><span class="line">        <span class="keyword">for</span> (BulkItemResponse bulkItemResponse : bulkResponse) &#123;</span><br><span class="line">            <span class="keyword">if</span> (bulkItemResponse.isFailed()) &#123;</span><br><span class="line">                BulkItemResponse.Failure failure = bulkItemResponse.getFailure();</span><br><span class="line">                logger.error(<span class="string">"Bulk中出现了异常："</span>+failure);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteIndex</span><span class="params">(RestHighLevelClient client)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        DeleteRequest request = <span class="keyword">new</span> DeleteRequest(<span class="string">"emp"</span>, <span class="string">"10"</span>);</span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        client.delete(request, RequestOptions.DEFAULT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">updateIndexByPart</span><span class="params">(RestHighLevelClient client)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        UpdateRequest request = <span class="keyword">new</span> UpdateRequest(<span class="string">"emp"</span>, <span class="string">"10"</span>);</span><br><span class="line">        String jsonString = <span class="string">"&#123;\"age\":23&#125;"</span>;</span><br><span class="line">        request.doc(jsonString, XContentType.JSON);</span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        client.update(request, RequestOptions.DEFAULT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getIndexByFiled</span><span class="params">(RestHighLevelClient client)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        GetRequest request = <span class="keyword">new</span> GetRequest(<span class="string">"emp"</span>, <span class="string">"10"</span>);</span><br><span class="line">        <span class="comment">//只查询部分字段</span></span><br><span class="line">        String[] includes = <span class="keyword">new</span> String[]&#123;<span class="string">"name"</span>&#125;;<span class="comment">//指定包含哪些字段</span></span><br><span class="line">        String[] excludes = Strings.EMPTY_ARRAY;<span class="comment">//指定多滤掉哪些字段</span></span><br><span class="line">        FetchSourceContext fetchSourceContext = <span class="keyword">new</span> FetchSourceContext(<span class="keyword">true</span>, includes, excludes);</span><br><span class="line">        request.fetchSourceContext(fetchSourceContext);</span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        GetResponse response = client.get(request, RequestOptions.DEFAULT);</span><br><span class="line">        <span class="comment">//通过response获取index、id、文档详细内容（source）</span></span><br><span class="line">        String index = response.getIndex();</span><br><span class="line">        String id = response.getId();</span><br><span class="line">        <span class="keyword">if</span>(response.isExists())&#123;<span class="comment">//如果没有查询到文档数据，则isExists返回false</span></span><br><span class="line">            <span class="comment">//获取json字符串格式的文档结果</span></span><br><span class="line">            String sourceAsString = response.getSourceAsString();</span><br><span class="line">            System.out.println(sourceAsString);</span><br><span class="line">            <span class="comment">//获取map格式的文档结果</span></span><br><span class="line">            Map&lt;String, Object&gt; sourceAsMap = response.getSourceAsMap();</span><br><span class="line">            System.out.println(sourceAsMap);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            logger.warn(<span class="string">"没有查询到索引库&#123;&#125;中id为&#123;&#125;的文档!"</span>,index,id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getIndex</span><span class="params">(RestHighLevelClient client)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        GetRequest request = <span class="keyword">new</span> GetRequest(<span class="string">"emp"</span>, <span class="string">"10"</span>);</span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        GetResponse response = client.get(request, RequestOptions.DEFAULT);</span><br><span class="line">        <span class="comment">//通过response获取index、id、文档详细内容（source）</span></span><br><span class="line">        String index = response.getIndex();</span><br><span class="line">        String id = response.getId();</span><br><span class="line">        <span class="keyword">if</span>(response.isExists())&#123;<span class="comment">//如果没有查询到文档数据，则isExists返回false</span></span><br><span class="line">            <span class="comment">//获取json字符串格式的文档结果</span></span><br><span class="line">            String sourceAsString = response.getSourceAsString();</span><br><span class="line">            System.out.println(sourceAsString);</span><br><span class="line">            <span class="comment">//获取map格式的文档结果</span></span><br><span class="line">            Map&lt;String, Object&gt; sourceAsMap = response.getSourceAsMap();</span><br><span class="line">            System.out.println(sourceAsMap);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            logger.warn(<span class="string">"没有查询到索引库&#123;&#125;中id为&#123;&#125;的文档!"</span>,index,id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addIndexByMap</span><span class="params">(RestHighLevelClient client)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        IndexRequest request = <span class="keyword">new</span> IndexRequest(<span class="string">"emp"</span>);</span><br><span class="line">        request.id(<span class="string">"11"</span>);</span><br><span class="line">        HashMap&lt;String, Object&gt; jsonMap = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">        jsonMap.put(<span class="string">"name"</span>, <span class="string">"tom"</span>);</span><br><span class="line">        jsonMap.put(<span class="string">"age"</span>, <span class="number">17</span>);</span><br><span class="line">        request.source(jsonMap);</span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        client.index(request, RequestOptions.DEFAULT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addIndexByJson</span><span class="params">(RestHighLevelClient client)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        IndexRequest request = <span class="keyword">new</span> IndexRequest(<span class="string">"emp"</span>);</span><br><span class="line">        request.id(<span class="string">"10"</span>);</span><br><span class="line">        String jsonString = <span class="string">"&#123;"</span> +</span><br><span class="line">                <span class="string">"\"name\":\"jessic\","</span> +</span><br><span class="line">                <span class="string">"\"age\":20"</span> +</span><br><span class="line">                <span class="string">"&#125;"</span>;</span><br><span class="line">        request.source(jsonString, XContentType.JSON);</span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        client.index(request, RequestOptions.DEFAULT);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据开发工程师" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
      <category term="大数据" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-ES+HBase实现仿百度搜索引擎-1</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-ES+HBase%E5%AE%9E%E7%8E%B0%E4%BB%BF%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E-1.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-ES+HBase%E5%AE%9E%E7%8E%B0%E4%BB%BF%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E-1.html</id>
    <published>2023-06-02T10:03:09.000Z</published>
    <updated>2023-06-14T03:42:44.182Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="ES-HBase实现仿百度搜索引擎-1"><a href="#ES-HBase实现仿百度搜索引擎-1" class="headerlink" title="ES+HBase实现仿百度搜索引擎-1"></a>ES+HBase实现仿百度搜索引擎-1</h1><h2 id="1-企业中快速复杂查询痛点分析"><a href="#1-企业中快速复杂查询痛点分析" class="headerlink" title="1 企业中快速复杂查询痛点分析"></a>1 企业中快速复杂查询痛点分析</h2><h3 id="大数据领域海量数据存储现状"><a href="#大数据领域海量数据存储现状" class="headerlink" title="大数据领域海量数据存储现状"></a>大数据领域海量数据存储现状</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">首先来分析一下目前大数据领域中的一些数据存储系统：HDFS、HBase、Kudu</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306120911703.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-HDFS：是一个分布式文件系统，适合文本类型数据存储，不支持修改删除，适合一次写入，多次读取的场景。借助于Hive可以实现基于SQL的海量数据分析。HDFS在实际工作中是最常见的。</span><br><span class="line"></span><br><span class="line">-HBase：是一个NoSQL类型的数据库，支持海量数据的增删改查，基于Rowkey查询效率高，针对普通字段查询效率非常低。HBase不支持传统的SQL语法，不适合做数据分析。在企业中的应用场景有限，仅适用于有修改删除需求的场景。</span><br><span class="line"></span><br><span class="line">-Kudu：介于HDFS和HBase之间，专门为了应对快速变化的数据进行快速的分析，既支持增删改查，也支持基于SQL的海量数据分析。它定位于OLAP和少量的OLTP场景，如果有大量的随机查询，还是建议使用HBase最为合适。Kudu没有HDFS批处理速度快，也没有HBase随机读写能力强，所以它属于一个折中的方案，应用场景也是有限的。</span><br></pre></td></tr></table></figure><h3 id="大数据领域常见的SQL分析引擎"><a href="#大数据领域常见的SQL分析引擎" class="headerlink" title="大数据领域常见的SQL分析引擎"></a>大数据领域常见的SQL分析引擎</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">目前大数据领域常见的SQL分析引擎有以下这些：Hive、Impala、Kylin。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306120911441.png" alt="image-20230612091102908"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Hive：Hive是一个支持SQL的数据查询引擎，适合通过SQL对HDFS中的海量文本数据进行分析，不适合单条数据的随机查询，因为每一次查询底层都需要执行MapReduce任务，单条数据查询效率比较低。</span><br><span class="line"></span><br><span class="line">Impala：Impala是类似于Hive的一个SQL查询引擎，由于Hive底层需要走MapReduce，效率较低，所以Impala自己实现了底层的计算引擎，充分利用了内存的优势，计算性能可以达到Hive的几十倍。虽然性能提高了，但是Impala也不适合快速复杂查询，因为每次查询还是需要加载表中的所有数据，然后过滤出满足条件的数据。</span><br><span class="line"></span><br><span class="line">Kylin：kylin是一个可以支持海量数据亚秒级查询的引擎，它最核心的思想就是预聚合，kylin中可以提前创建一些Cube，其实就是一些数据聚合规则，可以在每天凌晨的时候对数据按照指定的规则进行聚合，这样后期在使用的时候，就可以直接查询聚合之后的数据，提高查询效率，所以Kylin适合一些查询条件固定的需求，不适合灵活多变的查询需求。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">目前大数据领域中这几个数据分析引擎都是不擅长快速复杂查询的，因为他们侧重的其实都是数据分析，而不是快速复杂查询。</span><br><span class="line"></span><br><span class="line">想要实现海量数据的快速复杂查询，其实最常见的解决方案是利用全文检索引擎，因为全文检索引擎工具会对数据分词建立索引，可以支持快速复杂查询。</span><br></pre></td></tr></table></figure><h3 id="目前常见的全文检索引擎"><a href="#目前常见的全文检索引擎" class="headerlink" title="目前常见的全文检索引擎"></a>目前常见的全文检索引擎</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">目前常见的全文检索引擎主要是这几个：Lucene、Solr、Elasticsearch</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306120912169.png" alt="image-20230612091235678"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lucene：Lucene是Java家族中最为出名的一个开源搜索引擎，缺点是使用起来比较繁琐，并且不支持分布式，无法应用在海量数据场景下。</span><br><span class="line"></span><br><span class="line">Solr：Solr是对Lucene进行了封装，并且提供了界面操作，使用起来更加友好，从solr4.0版本开始支持分布式，也就是支持集群架构。</span><br><span class="line"></span><br><span class="line">Elasticsearch：Elasticsearch也是对Lucene进行了封装，它从一开始就支持分布式，专门为大数据而生，所以在大数据领域使用的还是比较多的。</span><br></pre></td></tr></table></figure><h3 id="海量数据存储-快速复杂查询需求"><a href="#海量数据存储-快速复杂查询需求" class="headerlink" title="海量数据存储+快速复杂查询需求"></a>海量数据存储+快速复杂查询需求</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">假设现在遇到一个需求，企业里面有一套爬虫程序，每天都会到互联网上抓取海量的文章数据，针对这些文章数据：</span><br><span class="line">1：首先要实现海量文章数据存储，支持数据更新需求</span><br><span class="line">2：还需要提供针对文章数据的快速复杂查询</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306120916581.png" alt="image-20230612091639190"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">在这里能不能直接使用Elasticsearch实现海量数据存储和快速复杂查询呢？</span><br><span class="line">Elasticsearch最擅长的是快速复杂查询，虽然它支持分布式，也可以存储海量数据，但是这并不是它最擅长的功能，因为数据存储多了之后肯定会影响ES的性能。</span><br><span class="line"></span><br><span class="line">所以单纯使用Elasticsearch来实现这个需求是不太合适的。</span><br><span class="line"></span><br><span class="line">那针对海量数据存储可以考虑HDFS、HBase、Kudu这几个存储系统，首先要把HDFS排除掉，因为HDFS不支持更新操作，剩下的是HBase和Kudu，这两个都支持更新操作，但是Kudu随机查询性能是不如HBase的，所以针对存储这块考虑使用HBase。</span><br><span class="line"></span><br><span class="line">单纯使用HBase也是无法满足需求的，HBase只有根据Rowkey查询效率才高，根据其他字段查询效率是比较差的。</span><br></pre></td></tr></table></figure><h3 id="海量数据存储-快速复杂查询的解决方案"><a href="#海量数据存储-快速复杂查询的解决方案" class="headerlink" title="海量数据存储+快速复杂查询的解决方案"></a>海量数据存储+快速复杂查询的解决方案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">所以这个需求只使用一个技术组件是无法完美解决的，最好的解决方案是将HBase和Elasticsearch整合到一起，利用HBase适合海量数据存储、基于Rowkey查询效率高的特性，以及Elasticsearch适合快速复杂查询的特性。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306120918935.png" alt="image-20230612091806749"></p><h2 id="2-仿百度搜索引擎项目架构设计"><a href="#2-仿百度搜索引擎项目架构设计" class="headerlink" title="2 仿百度搜索引擎项目架构设计"></a>2 仿百度搜索引擎项目架构设计</h2><h3 id="项目概览"><a href="#项目概览" class="headerlink" title="项目概览"></a>项目概览</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">首先看一下项目最终的界面效果</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306120919094.png" alt="image-20230612091858736"></p><h3 id="项目整体架构流程"><a href="#项目整体架构流程" class="headerlink" title="项目整体架构流程"></a>项目整体架构流程</h3><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306120920136.png" alt="image-20230612092004096"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1：项目的数据来源可以是通过爬虫到互联网上采集的数据，也可以是企业数据库中的内部数据</span><br><span class="line">2：根据数据的来源不同，使用不同的程序将数据入库到HBase，实现海量数据存储</span><br><span class="line">3：针对HBase中的数据在ES中建立索引。</span><br><span class="line">4：在数据展现模块中提供仿百度搜索功能。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">注意：并不是把HBase中数据的完整内容全部在ES中建立索引，只需要将检索用到的那些字段在ES中建立索引即可。例如：HBase存储的原始数据有20个字段，在ES可能只需要存储5个字段即可，具体的存储细节在后面会详细分析。</span><br></pre></td></tr></table></figure><h3 id="ES和HBase数据同步的三种方案"><a href="#ES和HBase数据同步的三种方案" class="headerlink" title="ES和HBase数据同步的三种方案"></a>ES和HBase数据同步的三种方案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">针对此项目，有一个核心功能点，如何在ES中同步对HBase中的数据建立索引？</span><br><span class="line">大致有下面这几种方案：</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306120927744.png" alt="image-20230612092710497"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1：方案1，在将原始数据入库HBase的时候，同时在ES中对数据建立索引，此时可以把入库HBase和ES的代码放在一个事务中，保证HBase和ES的数据一致性。</span><br><span class="line">这种方案的优点是操作方便，缺点是入库HBase和ES的代码绑定到一起了，耦合性太高，如果遇到ES出现故障，会导致入库HBase的操作也会失败，或者是ES集群压力过大的时候，会导致数据入库HBase的效率降低。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306120927645.png" alt="image-20230612092739473"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2：方案2，在将原始数据入库HBase的时候，通过HBase中的协处理器实现数据同步，让协处理器监听HBase中的新增和删除操作，在协处理器内部操作ES，实现对数据建立索引的功能。</span><br><span class="line">HBase中的协处理器其实类似于MySQL中的触发器。</span><br><span class="line">这种方案的优点是通过协处理器可以很方便的获取到HBase中新增和变化的数据，如果入库HBase的程序是之前已经开发好的，此时不需要对之前的代码进行任何改动，影响程度比较低。缺点是过于依赖HBase了，如果后期涉及到HBase集群版本升级，无法保证协处理器功能的可用性。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306120928386.png" alt="image-20230612092821245"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">3：方案3，在将原始数据入库HBase的时候，同时在Redis中使用list数据类型模拟一个队列，存储数据的Rowkey。此时将入库HBase和Redis的操作放在一个事务里面，保证数据的一致性。然后再通过另外一个同步程序，从Redis的list队列中读取Rowkey，根据Rowkey到HBase中获取数据的详细信息，在ES中建立索引，将HBase中数据的Rowkey作为ES中数据的ID。</span><br><span class="line">在这个方案里面是将入库HBase和在ES中建立索引这两个功能解耦了，借助于中间层的Redis实现的。</span><br><span class="line">这种方案的缺点是把入库HBase和Redis的功能耦合在一起了，但是Redis是轻量级的，出现问题的概率是比较低的，对性能损耗也不高，所以是可以接受的。</span><br><span class="line">此时就算ES出现问题，只需要在同步程序内部实现正常的异常处理即可，将建立索引失败数据的Rowkey重新添加到Redis的list列表里面即可，不会导致HBase和ES数据不一致的问题。</span><br><span class="line"></span><br><span class="line">其实第2种方案和第3种方案都可以使用，个人推荐使用第3种方案，可控性高一些，在项目中也会使用第3种方案实现。</span><br></pre></td></tr></table></figure><h3 id="项目整体执行流程"><a href="#项目整体执行流程" class="headerlink" title="项目整体执行流程"></a>项目整体执行流程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">接下来分析一下项目底层细节流程</span><br><span class="line">如下图所示</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306120931503.png" alt="image-20230612093116446"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1：通过入库程序向HBase中入库数据，同时在Redis中存储数据的Rowkey。</span><br><span class="line">2：从Redis中获取数据的Rowkey，根据Rowkey到HBase中查询数据的详细信息，然后在ES中建立索引。</span><br><span class="line">此时我们的海量数据已经存储到HBase中，并且将需要查询的字段在ES中建立索引了。</span><br><span class="line">3：用户向ES发送查询请求</span><br><span class="line">4：ES返回符合条件的数据的ID，其实就是HBase中数据的Rowkey。在这里也可以根据需求额外再返回一些字段信息都是可以的。</span><br><span class="line">5：当用户想要查看数据完整详细信息的时候，需要根据Rowkey到HBase中查询</span><br><span class="line">6：HBase会给用户返回Rowkey对应数据的详细信息。</span><br></pre></td></tr></table></figure><h2 id="3-ES高级特性扩展"><a href="#3-ES高级特性扩展" class="headerlink" title="3 ES高级特性扩展"></a>3 ES高级特性扩展</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在具体开发项目之前，先来了解一下ES中的几个特性：</span><br></pre></td></tr></table></figure><h3 id="ES中的-source字段"><a href="#ES中的-source字段" class="headerlink" title="ES中的_source字段"></a>ES中的_source字段</h3><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306120936278.png" alt="image-20230612093604097"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在ES中包含一个特殊的字段：_source</span><br><span class="line">当我们在ES中对数据建立索引的时候，在ES底层其实会存储两份数据，一份是原始文档的内容，还有一份是对原始文档分词产生的倒排索引内容。</span><br><span class="line"></span><br><span class="line">其中原始文档内容会存储到_source这个字段里面，咱们前面在学习JavaAPI操作ES的时候，通过search查询的结果数据，最终在解析的时候其实就是从_source字段中解析的。</span><br><span class="line"></span><br><span class="line">_source字段中默认会包含原始文档中所有字段的内容。</span><br></pre></td></tr></table></figure><h3 id="ES中字段的index和store特性"><a href="#ES中字段的index和store特性" class="headerlink" title="ES中字段的index和store特性"></a>ES中字段的index和store特性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">我们在向ES中添加数据的时候，ES底层针对每个字段其实还会涉及到index和store这两个属性：</span><br><span class="line"></span><br><span class="line">index：表示是否在ES中建立索引，默认为true。</span><br><span class="line">store：表示是否在ES中存储，默认为false。</span><br><span class="line"></span><br><span class="line">这里的store属性其实是Lucene中的语法，表示是否存储字段内容，ES对它做了优化，默认会使用_source字段存储原始文档所有字段的内容，这样可以提高数据解析性能，所以这里的store属性其实就不需要设置了，它的默认值就是false，表示不存储。</span><br><span class="line"></span><br><span class="line">注意：如果这里的store也设置为true，此时ES会重复存储对应字段的内容。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">下面来看一个例子：</span><br><span class="line">假设我要向ES中添加一批学生数据，包括姓名、年龄、性别、家庭住址这些字段。</span><br><span class="line">针对这批数据，我的需求是需要根据学生的姓名、家庭住址进行查询，最终在返回结果数据的时候，只需要把学生的姓名、年龄、性别返回过来即可，不需要返回家庭住址。</span><br><span class="line"></span><br><span class="line">针对这个需求而言</span><br><span class="line">1：需要根据学生的姓名、家庭住址进行查询，所以这两个字段必须在ES中建立索引，否则无法根据姓名和家庭住址进行查询。</span><br><span class="line">2：还需要在返回结果数据的时候把学生的姓名、年龄、性别返回过来，那也就意味着姓名、年龄、性别字段需要在ES中进行存储，否则ES是无法返回这些字段内容的。</span><br><span class="line">所以针对这个需求总结一下：</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">是否建立索引是否存储</span><br><span class="line">姓名是是</span><br><span class="line">年龄否是</span><br><span class="line">性别否是</span><br><span class="line">家庭住址   是   否</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">解释：</span><br><span class="line"></span><br><span class="line">判断一个字段是否需要建立索引，唯一的依据就是是否需要根据这个字段进行查询，如果需要，则建立索引，否则不建立索引。</span><br><span class="line">判断一个字段是否需要存储，唯一的依据就是是否需要从ES中获取这个字段的值，如果需要，则存储，否则不存储。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：在实际工作中，针对某个字段来说，需要建立索引，但是不需要存储，这种场景也是存在的，因为某一些字段内容如果比较大，并且没有必要从ES中返回，其实就没必要在ES中存储了，否则会额外占用ES的存储空间，也会影响ES的查询效率。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">由于默认情况下_source字段会存储所有字段的内容，所以需要在_source字段中过滤掉不需要存储的字段。</span><br><span class="line">在mapping中设置:&quot;_source&quot;:&#123;&quot;excludes&quot;:[&quot;address&quot;]&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">针对这个案例，创建一个索引库：stuinfo</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~] curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stuinfo&#39; -d&#39;&#123;&quot;mappings&quot;:&#123;&quot;_source&quot;:&#123;&quot;excludes&quot;:[&quot;address&quot;]&#125;,&quot;properties&quot;:&#123;&quot;name&quot;:&#123;&quot;type&quot;:&quot;text&quot;,&quot;index&quot;:true&#125;,&quot;age&quot;:&#123;&quot;type&quot;:&quot;integer&quot;,&quot;index&quot;:false&#125;,&quot;sex&quot;:&#123;&quot;type&quot;:&quot;text&quot;,&quot;index&quot;:false&#125;,&quot;address&quot;:&#123;&quot;type&quot;:&quot;text&quot;,&quot;index&quot;:true&#125;&#125;&#125;&#125;&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">查询mappings信息。</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stuinfo&#x2F;_mapping?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;stuinfo&quot; : &#123;</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">      &quot;_source&quot; : &#123;</span><br><span class="line">        &quot;excludes&quot; : [</span><br><span class="line">          &quot;address&quot;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;properties&quot; : &#123;</span><br><span class="line">        &quot;address&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;age&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;integer&quot;,</span><br><span class="line">          &quot;index&quot; : false</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;name&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;sex&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;,</span><br><span class="line">          &quot;index&quot; : false</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">向索引库中添加一条数据</span><br><span class="line">curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stuinfo&#x2F;_doc&#x2F;1&#39; -d &#39;&#123;&quot;name&quot;:&quot;zs&quot;,&quot;age&quot;:20,&quot;sex&quot;:&quot;man&quot;,&quot;address&quot;:&quot;bj&quot;&#125;&#39;</span><br><span class="line"></span><br><span class="line">查看这条数据，验证一下效果。</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stuinfo&#x2F;_search?pretty&#39; </span><br><span class="line">&#123;</span><br><span class="line"> ......</span><br><span class="line">  &quot;_source&quot; : &#123;</span><br><span class="line">    &quot;sex&quot; : &quot;man&quot;,</span><br><span class="line">    &quot;name&quot; : &quot;zs&quot;,</span><br><span class="line">    &quot;age&quot; : 20</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">发现返回的_source字段中确实没有address字段的内容了。</span><br><span class="line"></span><br><span class="line">但是此时我们还是可以根据address进行查询的，因为倒排索引中有这个字段的内容。</span><br><span class="line">在这里扩展一个知识点，使用RestAPI执行query查询。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306121015221.png" alt="image-20230612101521802"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">根据address可以查询到数据，说明address的index属性生效了</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stuinfo&#x2F;_search?pretty&#39; -d&#39;&#123;&quot;query&quot;:&#123;&quot;match&quot;:&#123;&quot;address&quot;:&quot;bj&quot;&#125;&#125;&#125;&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;took&quot; : 5,</span><br><span class="line">  &quot;timed_out&quot; : false,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 1,</span><br><span class="line">    &quot;successful&quot; : 1,</span><br><span class="line">    &quot;skipped&quot; : 0,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;hits&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : &#123;</span><br><span class="line">      &quot;value&quot; : 1,</span><br><span class="line">      &quot;relation&quot; : &quot;eq&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;max_score&quot; : 0.2876821,</span><br><span class="line">    &quot;hits&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;stuinfo&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;_score&quot; : 0.2876821,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;sex&quot; : &quot;man&quot;,</span><br><span class="line">          &quot;name&quot; : &quot;zs&quot;,</span><br><span class="line">          &quot;age&quot; : 20</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果我们使用sex字段进行查询，会看到报错信息，因为sex字段没有建立索引是无法作为查询字段的。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stuinfo&#x2F;_search?pretty&#39; -d&#39;&#123;&quot;query&quot;:&#123;&quot;match&quot;:&#123;&quot;sex&quot;:&quot;man&quot;&#125;&#125;&#125;&#39;    </span><br><span class="line">&#123;</span><br><span class="line">  &quot;error&quot; : &#123;</span><br><span class="line">    &quot;root_cause&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot; : &quot;query_shard_exception&quot;,</span><br><span class="line">        &quot;reason&quot; : &quot;failed to create query: Cannot search on field [sex] since it is not indexed.&quot;,</span><br><span class="line">        &quot;index_uuid&quot; : &quot;sPuh_JJNSYW33Oie4KSRcg&quot;,</span><br><span class="line">        &quot;index&quot; : &quot;stuinfo&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;type&quot; : &quot;search_phase_execution_exception&quot;,</span><br><span class="line">    &quot;reason&quot; : &quot;all shards failed&quot;,</span><br><span class="line">    &quot;phase&quot; : &quot;query&quot;,</span><br><span class="line">    &quot;grouped&quot; : true,</span><br><span class="line">    &quot;failed_shards&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;shard&quot; : 0,</span><br><span class="line">        &quot;index&quot; : &quot;stuinfo&quot;,</span><br><span class="line">        &quot;node&quot; : &quot;_6ff1IjTTGm3jZ_edi6-KA&quot;,</span><br><span class="line">        &quot;reason&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;query_shard_exception&quot;,</span><br><span class="line">          &quot;reason&quot; : &quot;failed to create query: Cannot search on field [sex] since it is not indexed.&quot;,</span><br><span class="line">          &quot;index_uuid&quot; : &quot;sPuh_JJNSYW33Oie4KSRcg&quot;,</span><br><span class="line">          &quot;index&quot; : &quot;stuinfo&quot;,</span><br><span class="line">          &quot;caused_by&quot; : &#123;</span><br><span class="line">            &quot;type&quot; : &quot;illegal_argument_exception&quot;,</span><br><span class="line">            &quot;reason&quot; : &quot;Cannot search on field [sex] since it is not indexed.&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;status&quot; : 400</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-开发仿百度搜索引擎项目"><a href="#4-开发仿百度搜索引擎项目" class="headerlink" title="4 开发仿百度搜索引擎项目"></a>4 开发仿百度搜索引擎项目</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这个搜索引擎项目主要涉及到数据采集、数据存储、建立索引和数据展现环节。</span><br><span class="line">针对一个搜索引擎项目而言，它的数据基本上都是来源于互联网上的公开数据，想要获取这些数据就需要使用爬虫工具了，目前市面上有一些爬虫产品，但是在使用的时候基本上都需要二次开发，所以企业里面都会有专门的爬虫工程师负责这个工作。</span><br><span class="line">我们在开发这个搜索引擎项目的时候就不再针对爬虫数据采集模块进行扩展了，到时候我会提供一个数据接口，大家通过接口可以直接获取到一些互联网上的公开数据。</span><br><span class="line">数据大致格式是这样的：</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306121050949.png" alt="image-20230612105000321"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">我们在开发这个搜索引擎项目的时候会重点实现数据存储、建立索引这两个环节。</span><br><span class="line"></span><br><span class="line">大致的开发步骤是这样的：</span><br><span class="line">1：调用接口获取数据导入HBase和Redis(存储Rowkey)。</span><br><span class="line">2：通过ES对HBase中的数据建立索引。</span><br><span class="line">3：对接Web项目，提供页面检索功能。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在具体开发项目之前，我们首先分析一下项目中的数据和具体的查询要求，这样就知道ES中索引库的mapping应该如何设计了。</span><br><span class="line">在这个搜索引擎项目中，我们需要对爬虫采集到的文章数据在ES中建立索引。</span><br><span class="line"></span><br><span class="line">由于文章数据的核心内容主要在标题、描述和正文这3个字段中，所以在查询的时候需要用到这3个字段。</span><br><span class="line">那ES在返回满足条件的数据的时候，都需要返回哪些字段呢？</span><br><span class="line">参考一下百度的结果列表界面，可以发现，百度的列表页面会显示标题、描述和作者信息。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306121052050.png" alt="image-20230612105219912"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">那针对我们这里的文章数据，还有一个时间字段，其实也可以显示在列表页面中，具体显示哪些字段，可以根据工作中的具体需求来定。</span><br><span class="line">在这里我们希望在列表页面显示的是文章的标题、作者、描述、时间这4个字段。</span><br><span class="line">针对文章的ID，在这里直接作为ES中数据的ID，ES中的ID是必须要存储和建立索引的。</span><br><span class="line">所以最终总结一下是这样的：</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306121053192.png" alt="image-20230612105345979"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">文章ID：需要建立索引，并且存储，这是ES中ID字段必须要具备的特性。</span><br><span class="line">标题：因为查询的时候会用到，所以需要建立索引，并且在返回结果列表信息的时候需要直接从ES中返回，所以需要存储。</span><br><span class="line">作者：查询用不到，所以不需要建立索引，但是需要在返回结果列表信息的时候一块返回，所以需要存储。</span><br><span class="line">描述：查询会用到，返回的结果列表信息中也有这个字段内容，所以需要建立索引，并且存储。</span><br><span class="line">正文：因为查询的时候会用到，所以需要建立索引，但是在返回结果列表信息的时候不需要返回这个字段，所以不需要存储。其实还有一点很重要的原因是因为这个字段内容太长了，如果在ES中存储，会额外占用很多的存储空间，最终会影响ES的性能。</span><br><span class="line">时间：查询用不到，所以不需要建立索引，但是需要在返回结果列表信息的时候一块返回，所以需要存储。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">接下来我们来手工指定一下索引库的settings和mapping参数。</span><br><span class="line">由于这里的字段比较多，最好把settings和mapping信息写到一个文件中，使用起来比较方便。</span><br><span class="line">创建一个文件：article.json，内容如下：</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">        &quot;settings&quot;:&#123;</span><br><span class="line">                &quot;number_of_shards&quot;:5,</span><br><span class="line">                &quot;number_of_replicas&quot;:1</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;mappings&quot;:&#123;</span><br><span class="line">&quot;dynamic&quot;:&quot;strict&quot;,</span><br><span class="line">&quot;_source&quot;:&#123;&quot;excludes&quot;:[&quot;content&quot;]&#125;,</span><br><span class="line">&quot;properties&quot;:&#123;</span><br><span class="line">&quot;title&quot;:&#123;&quot;type&quot;:&quot;text&quot;,&quot;analyzer&quot;:&quot;ik_max_word&quot;&#125;,</span><br><span class="line">&quot;author&quot;:&#123;&quot;type&quot;:&quot;text&quot;,&quot;index&quot;:false&#125;,</span><br><span class="line">&quot;describe&quot;:&#123;&quot;type&quot;:&quot;text&quot;,&quot;analyzer&quot;:&quot;ik_max_word&quot;&#125;,</span><br><span class="line">&quot;content&quot;:&#123;&quot;type&quot;:&quot;text&quot;,&quot;analyzer&quot;:&quot;ik_max_word&quot;&#125;,</span><br><span class="line">&quot;time&quot;:&#123;&quot;type&quot;:&quot;date&quot;,&quot;index&quot;:false,&quot;format&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;&#125;</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">解释：</span><br><span class="line">dynamic参数有4个选项值(后期ES中如果用于建立索引的字段多了一些未知字段的场景)：</span><br><span class="line"></span><br><span class="line">true是默认的，表示开启动态映射(自动识别)</span><br><span class="line">false表示忽略没有定义的字段</span><br><span class="line">strict表示遇到未知字段时抛出异常</span><br><span class="line">runtime表示遇到未知字段时将它作为运行时字段，运行时字段是在ES7.11版本中增加的，运行时字段不会被索引，但是可以从_source中获取运行时字段内容，所以runtime可以适合公共字段已知，并且想兼容未知扩展字段的场景。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306121321626.png" alt="image-20230612132118974"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dynamic具体选择哪个参数，就需要根据需求来定了，在这里不希望在ES中保存未知字段，所以使用strict。</span><br><span class="line"></span><br><span class="line">将article.json上传到&#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4目录下</span><br><span class="line">[root@bigdata01 elasticsearch-7.13.4]# ll article.json </span><br><span class="line">-rw-r--r--. 1 root root 534 Apr  2 17:44 article.json</span><br></pre></td></tr></table></figure><h3 id="调用接口获取数据导入HBase和Redis"><a href="#调用接口获取数据导入HBase和Redis" class="headerlink" title="调用接口获取数据导入HBase和Redis"></a>调用接口获取数据导入HBase和Redis</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在Idea中直接打开已有项目：db_fullsearch，里面有一个web_fullsearch子model项目。</span><br><span class="line">接着再创建一个子Model项目：data_manager</span><br><span class="line">在子Model项目data_manager的pom.xml中添加此项目需要用到的依赖。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">&lt;artifactId&gt;slf4j-api&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">&lt;artifactId&gt;slf4j-log4j12&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">&lt;artifactId&gt;fastjson&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.apache.httpcomponents&lt;&#x2F;groupId&gt;</span><br><span class="line">&lt;artifactId&gt;httpclient&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.apache.hbase&lt;&#x2F;groupId&gt;</span><br><span class="line">&lt;artifactId&gt;hbase-client&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.elasticsearch.client&lt;&#x2F;groupId&gt;</span><br><span class="line">&lt;artifactId&gt;elasticsearch-rest-high-level-client&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;redis.clients&lt;&#x2F;groupId&gt;</span><br><span class="line">&lt;artifactId&gt;jedis&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在子Model项目data_manager中添加log4j.properties配置文件。</span><br><span class="line">log4j.rootLogger&#x3D;info,stdout</span><br><span class="line"></span><br><span class="line">log4j.appender.stdout &#x3D; org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.Target &#x3D; System.out</span><br><span class="line">log4j.appender.stdout.layout&#x3D;org.apache.log4j.PatternLayout </span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern&#x3D;[%p] %m%n</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在子Model项目data_manager中创建package：com.imooc.core和com.imooc.utils</span><br><span class="line">在com.imooc.utils包中引入工具类：HttpUtil、RedisUtil、HBaseUtil（开发）。</span><br><span class="line">接着在com.imooc.core中创建类：DataImport，负责实现数据导入到HBase和Redis。</span><br><span class="line">HBaseUtil代码如下：</span><br></pre></td></tr></table></figure><h4 id="com-imooc-utils"><a href="#com-imooc-utils" class="headerlink" title="com.imooc.utils"></a>com.imooc.utils</h4><h5 id="HBaseUtil"><a href="#HBaseUtil" class="headerlink" title="HBaseUtil"></a>HBaseUtil</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.bcel.internal.generic.TABLESWITCH;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.Cell;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.CellUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.TableName;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.client.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.util.Bytes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HBase工具类</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HBaseUtil</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">HBaseUtil</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Connection conn = getConn();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Connection <span class="title">getConn</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取hbase链接</span></span><br><span class="line">        Configuration conf = <span class="keyword">new</span> Configuration();</span><br><span class="line">        <span class="comment">//指定hbase使用的zk地址</span></span><br><span class="line">        <span class="comment">//注意：需要在执行hbase hava代码的机器上配置zk和hbase集群的主机名和ip的映射关系</span></span><br><span class="line">        conf.set(<span class="string">"hbase.zookeeper.quorum"</span>,<span class="string">"bigdata01:2181"</span>);</span><br><span class="line">        <span class="comment">//指定hbase在hdfs上的根目录</span></span><br><span class="line">        conf.set(<span class="string">"hbase.rootdir"</span>,<span class="string">"hdfs://bigdata01:9000/hbase"</span>);</span><br><span class="line">        <span class="comment">//创建HBase数据库链接</span></span><br><span class="line">        Connection co = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            co = ConnectionFactory.createConnection(conf);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">"获取链接失败："</span>+e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> co;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对外提供的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> conn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tableName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cfs</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createTable</span><span class="params">(String tableName,String... cfs)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Admin admin = conn.getAdmin();</span><br><span class="line">        ArrayList&lt;ColumnFamilyDescriptor&gt; cfArr = <span class="keyword">new</span> ArrayList&lt;ColumnFamilyDescriptor&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String cf : cfs) &#123;</span><br><span class="line">            ColumnFamilyDescriptor cfDesc = ColumnFamilyDescriptorBuilder</span><br><span class="line">                    .newBuilder(Bytes.toBytes(cf))</span><br><span class="line">                    .build();</span><br><span class="line">            cfArr.add(cfDesc);</span><br><span class="line">        &#125;</span><br><span class="line">        TableDescriptor tableDesc = TableDescriptorBuilder</span><br><span class="line">                .newBuilder(TableName.valueOf(tableName))</span><br><span class="line">                .setColumnFamilies(cfArr)</span><br><span class="line">                .build();</span><br><span class="line">        admin.createTable(tableDesc);</span><br><span class="line">        admin.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加一个单元格(列)的数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tableName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rowKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> columnFamily</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> column</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">put2HBaseCell</span><span class="params">(String tableName,String rowKey,String columnFamily,String column,String value)</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Table table = conn.getTable(TableName.valueOf(tableName));</span><br><span class="line">        Put put = <span class="keyword">new</span> Put(Bytes.toBytes(rowKey));</span><br><span class="line">        put.addColumn(Bytes.toBytes(columnFamily),Bytes.toBytes(column),Bytes.toBytes(value));</span><br><span class="line">        table.put(put);</span><br><span class="line">        table.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向hbase中添加一批数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tableName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">put2HBaseList</span><span class="params">(String tableName, List&lt;Put&gt; list)</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Table table = conn.getTable(TableName.valueOf(tableName));</span><br><span class="line">        table.put(list);</span><br><span class="line">        table.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">把这个构造方法私有化的意义是为了防止外部类创建RedisUtil的实例对象。这样可以保证RedisUtil是一个单例类，只有一个实例存在。这样可以节省内存空间，避免多个实例之间的同步问题，提高性能。😊</span><br><span class="line"></span><br><span class="line">已收到消息. 把这个构造方法私有化的意义是为了防止外部类创建RedisUtil的实例对象。这样可以保证RedisUtil是一个单例类，只有一个实例存在。这样可以节省内存空间，避免多个实例之间的同步问题，提高性能。😊</span><br></pre></td></tr></table></figure><h4 id="com-imooc-core"><a href="#com-imooc-core" class="headerlink" title="com.imooc.core"></a>com.imooc.core</h4><h5 id="DataImport"><a href="#DataImport" class="headerlink" title="DataImport"></a>DataImport</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataImport代码如下：</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONArray;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.imooc.utils.HBaseUtil;</span><br><span class="line"><span class="keyword">import</span> com.imooc.utils.HttpUtil;</span><br><span class="line"><span class="keyword">import</span> com.imooc.utils.RedisUtil;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过接口获取文章数据，入库HBase和Redis（Rowkey）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：HBase建表语句 create 'article','info'</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataImport</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(DataImport<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//通过接口获取文章数据</span></span><br><span class="line">        String dataUrl = <span class="string">"http://data.xuwei.tech/a1/wz1"</span>;</span><br><span class="line">        JSONObject paramObj = <span class="keyword">new</span> JSONObject();</span><br><span class="line">        paramObj.put(<span class="string">"code"</span>,<span class="string">"imooc"</span>);<span class="comment">//校验码</span></span><br><span class="line">        paramObj.put(<span class="string">"num"</span>,<span class="number">100</span>);<span class="comment">//数据条数，默认返回100条，最大支持返回1000条</span></span><br><span class="line">        JSONObject dataObj = HttpUtil.doPost(dataUrl, paramObj);</span><br><span class="line">        <span class="keyword">boolean</span> flag = dataObj.containsKey(<span class="string">"error"</span>);</span><br><span class="line">        <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">            JSONArray resArr = dataObj.getJSONArray(<span class="string">"data"</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;resArr.size();i++)&#123;</span><br><span class="line">                JSONObject jsonObj = resArr.getJSONObject(i);</span><br><span class="line">                <span class="comment">//System.out.println(jsonObj.toJSONString());</span></span><br><span class="line">                <span class="comment">//文章ID作为HBase的Rowkey和ES的ID</span></span><br><span class="line">                String id = jsonObj.getString(<span class="string">"id"</span>);</span><br><span class="line">                String title = jsonObj.getString(<span class="string">"title"</span>);</span><br><span class="line">                String author = jsonObj.getString(<span class="string">"author"</span>);</span><br><span class="line">                String describe = jsonObj.getString(<span class="string">"describe"</span>);</span><br><span class="line">                String content = jsonObj.getString(<span class="string">"content"</span>);</span><br><span class="line">                String time = jsonObj.getString(<span class="string">"time"</span>);</span><br><span class="line">                Jedis jedis = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    <span class="comment">//将数据入库到HBase</span></span><br><span class="line">                    String tableName = <span class="string">"article"</span>;</span><br><span class="line">                    String cf = <span class="string">"info"</span>;</span><br><span class="line">                    HBaseUtil.put2HBaseCell(tableName,id,cf,<span class="string">"title"</span>,title);</span><br><span class="line">                    HBaseUtil.put2HBaseCell(tableName,id,cf,<span class="string">"author"</span>,author);</span><br><span class="line">                    HBaseUtil.put2HBaseCell(tableName,id,cf,<span class="string">"describe"</span>,describe);</span><br><span class="line">                    HBaseUtil.put2HBaseCell(tableName,id,cf,<span class="string">"content"</span>,content);</span><br><span class="line">                    HBaseUtil.put2HBaseCell(tableName,id,cf,<span class="string">"time"</span>,time);</span><br><span class="line">                    <span class="comment">//将Rowkey保存到Redis中</span></span><br><span class="line">                    jedis = RedisUtil.getJedis();</span><br><span class="line">                    jedis.lpush(<span class="string">"l_article_ids"</span>,id);</span><br><span class="line">                &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                    <span class="comment">//注意：由于hbase的put操作属于幂等操作，多次操作，对最终的结果没有影响，所以不需要额外处理</span></span><br><span class="line">                    logger.error(<span class="string">"数据添加失败："</span>+e.getMessage());</span><br><span class="line">                &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="comment">//向连接池返回连接</span></span><br><span class="line">                    <span class="keyword">if</span>(jedis!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                        RedisUtil.returnResource(jedis);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            logger.error(<span class="string">"获取文章数据失败："</span>+dataObj.toJSONString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="通过ES对HBase中的数据建立索引"><a href="#通过ES对HBase中的数据建立索引" class="headerlink" title="通过ES对HBase中的数据建立索引"></a>通过ES对HBase中的数据建立索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在com.imooc.core中创建类：DataIndex，负责实现在ES中对数据建立索引。</span><br><span class="line">在开发DataIndex代码的时候，需要向Es中写入数据，所以最好封装一个EsUtil工具类。</span><br><span class="line">同时需要对HBaseUtil工具类进行完善，增加一个getFromHBase方法，负责从HBase中获取数据</span><br><span class="line"></span><br><span class="line">EsUtil工具类代码如下：</span><br></pre></td></tr></table></figure><h4 id="com-imooc-utils-1"><a href="#com-imooc-utils-1" class="headerlink" title="com.imooc.utils"></a>com.imooc.utils</h4><h5 id="EsUtil"><a href="#EsUtil" class="headerlink" title="EsUtil"></a>EsUtil</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpHost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.nio.client.HttpAsyncClientBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.nio.reactor.IOReactorConfig;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.index.IndexRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RequestOptions;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestClientBuilder;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestHighLevelClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ES工具类</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EsUtil</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">EsUtil</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> RestHighLevelClient client;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="comment">//获取RestClient连接</span></span><br><span class="line">        <span class="comment">//注意：高级别客户端其实是对低级别客户端的代码进行了封装，所以连接池使用的是低级别客户端中的连接池</span></span><br><span class="line">        client = <span class="keyword">new</span> RestHighLevelClient(</span><br><span class="line">                RestClient.builder(</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata01"</span>,<span class="number">9200</span>,<span class="string">"http"</span>),</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata01"</span>,<span class="number">9200</span>,<span class="string">"http"</span>),</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata01"</span>,<span class="number">9200</span>,<span class="string">"http"</span>))</span><br><span class="line">                        .setHttpClientConfigCallback(<span class="keyword">new</span> RestClientBuilder.HttpClientConfigCallback() &#123;</span><br><span class="line">                            <span class="function"><span class="keyword">public</span> HttpAsyncClientBuilder <span class="title">customizeHttpClient</span><span class="params">(HttpAsyncClientBuilder httpClientBuilder)</span> </span>&#123;</span><br><span class="line">                                <span class="keyword">return</span> httpClientBuilder.setDefaultIOReactorConfig(</span><br><span class="line">                                        IOReactorConfig.custom()</span><br><span class="line">                                                <span class="comment">//设置线程池中线程的数量，默认是1个，建议设置为和客户端机器可用CPU数量一致</span></span><br><span class="line">                                                .setIoThreadCount(<span class="number">1</span>)</span><br><span class="line">                                                .build());</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取客户端</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RestHighLevelClient <span class="title">getRestClient</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> client;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭客户端</span></span><br><span class="line"><span class="comment">     * 注意：调用高级别客户单的close方法时，会将低级别客户端创建的连接池整个关闭掉，最终导致client无法继续使用</span></span><br><span class="line"><span class="comment">     * 所以正常是用不到这个close方法的，只有在程序结束的时候才需要调用</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">closeRestClient</span><span class="params">()</span><span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 建立索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addIndex</span><span class="params">(String index, String id, Map&lt;String,String&gt; map)</span><span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        IndexRequest request = <span class="keyword">new</span> IndexRequest(index);</span><br><span class="line">        request.id(id);</span><br><span class="line">        request.source(map);</span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        client.index(request, RequestOptions.DEFAULT);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="HBaseUtil-1"><a href="#HBaseUtil-1" class="headerlink" title="HBaseUtil"></a>HBaseUtil</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HBaseUtil工具类代码如下：</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.bcel.internal.generic.TABLESWITCH;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.Cell;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.CellUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.TableName;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.client.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.util.Bytes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HBase工具类</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HBaseUtil</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">HBaseUtil</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Connection conn = getConn();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Connection <span class="title">getConn</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取hbase链接</span></span><br><span class="line">        Configuration conf = <span class="keyword">new</span> Configuration();</span><br><span class="line">        <span class="comment">//指定hbase使用的zk地址</span></span><br><span class="line">        <span class="comment">//注意：需要在执行hbase hava代码的机器上配置zk和hbase集群的主机名和ip的映射关系</span></span><br><span class="line">        conf.set(<span class="string">"hbase.zookeeper.quorum"</span>,<span class="string">"bigdata01:2181"</span>);</span><br><span class="line">        <span class="comment">//指定hbase在hdfs上的根目录</span></span><br><span class="line">        conf.set(<span class="string">"hbase.rootdir"</span>,<span class="string">"hdfs://bigdata01:9000/hbase"</span>);</span><br><span class="line">        <span class="comment">//创建HBase数据库链接</span></span><br><span class="line">        Connection co = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            co = ConnectionFactory.createConnection(conf);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">"获取链接失败："</span>+e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> co;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对外提供的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> conn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tableName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cfs</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createTable</span><span class="params">(String tableName,String... cfs)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Admin admin = conn.getAdmin();</span><br><span class="line">        ArrayList&lt;ColumnFamilyDescriptor&gt; cfArr = <span class="keyword">new</span> ArrayList&lt;ColumnFamilyDescriptor&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String cf : cfs) &#123;</span><br><span class="line">            ColumnFamilyDescriptor cfDesc = ColumnFamilyDescriptorBuilder</span><br><span class="line">                    .newBuilder(Bytes.toBytes(cf))</span><br><span class="line">                    .build();</span><br><span class="line">            cfArr.add(cfDesc);</span><br><span class="line">        &#125;</span><br><span class="line">        TableDescriptor tableDesc = TableDescriptorBuilder</span><br><span class="line">                .newBuilder(TableName.valueOf(tableName))</span><br><span class="line">                .setColumnFamilies(cfArr)</span><br><span class="line">                .build();</span><br><span class="line">        admin.createTable(tableDesc);</span><br><span class="line">        admin.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加一个单元格(列)的数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tableName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rowKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> columnFamily</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> column</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">put2HBaseCell</span><span class="params">(String tableName,String rowKey,String columnFamily,String column,String value)</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Table table = conn.getTable(TableName.valueOf(tableName));</span><br><span class="line">        Put put = <span class="keyword">new</span> Put(Bytes.toBytes(rowKey));</span><br><span class="line">        put.addColumn(Bytes.toBytes(columnFamily),Bytes.toBytes(column),Bytes.toBytes(value));</span><br><span class="line">        table.put(put);</span><br><span class="line">        table.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向hbase中添加一批数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tableName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">put2HBaseList</span><span class="params">(String tableName, List&lt;Put&gt; list)</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Table table = conn.getTable(TableName.valueOf(tableName));</span><br><span class="line">        table.put(list);</span><br><span class="line">        table.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据Rowkey获取数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tableName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rowKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String,String&gt; <span class="title">getFromHBase</span><span class="params">(String tableName,String rowKey)</span><span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        Table table = conn.getTable(TableName.valueOf(tableName));</span><br><span class="line">        Get get = <span class="keyword">new</span> Get(Bytes.toBytes(rowKey));</span><br><span class="line">        Result result = table.get(get);</span><br><span class="line">        List&lt;Cell&gt; cells = result.listCells();</span><br><span class="line">        HashMap&lt;String, String&gt; resMap = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Cell cell: cells) &#123;</span><br><span class="line">            <span class="comment">//列</span></span><br><span class="line">            <span class="keyword">byte</span>[] column_bytes = CellUtil.cloneQualifier(cell);</span><br><span class="line">            <span class="comment">//值</span></span><br><span class="line">            <span class="keyword">byte</span>[] value_bytes = CellUtil.cloneValue(cell);</span><br><span class="line">            resMap.put(<span class="keyword">new</span> String(column_bytes),<span class="keyword">new</span> String(value_bytes));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resMap;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="com-imooc-core-1"><a href="#com-imooc-core-1" class="headerlink" title="com.imooc.core"></a>com.imooc.core</h4><h5 id="DataIndex"><a href="#DataIndex" class="headerlink" title="DataIndex"></a>DataIndex</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataIndex代码如下：</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.imooc.utils.EsUtil;</span><br><span class="line"><span class="keyword">import</span> com.imooc.utils.HBaseUtil;</span><br><span class="line"><span class="keyword">import</span> com.imooc.utils.RedisUtil;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在ES中对HBase中的数据建立索引</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataIndex</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(DataIndex<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; rowKeyList = <span class="keyword">null</span>;</span><br><span class="line">        Jedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1：首先从Redis的列表中获取Rowkey</span></span><br><span class="line">            jedis = RedisUtil.getJedis();</span><br><span class="line">            <span class="comment">//brpop如果获取到了数据，返回的list里面有两列，第一列是key的名称，第二列是具体的数据</span></span><br><span class="line">            rowKeyList = jedis.brpop(<span class="number">3</span>, <span class="string">"l_article_ids"</span>);</span><br><span class="line">            <span class="keyword">while</span> (rowKeyList != <span class="keyword">null</span>) &#123;</span><br><span class="line">                String rowKey = rowKeyList.get(<span class="number">1</span>);</span><br><span class="line">                <span class="comment">//2：根据Rowkey到HBase中获取数据的详细信息</span></span><br><span class="line">                Map&lt;String, String&gt; map = HBaseUtil.getFromHBase(<span class="string">"article"</span>, rowKey);</span><br><span class="line">                <span class="comment">//3：在ES中对数据建立索引</span></span><br><span class="line">                EsUtil.addIndex(<span class="string">"article"</span>,rowKey,map);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//循环从Redis的列表中获取Rowkey</span></span><br><span class="line">                rowKeyList = jedis.brpop(<span class="number">3</span>, <span class="string">"l_article_ids"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            logger.error(<span class="string">"数据建立索引失败："</span>+e.getMessage());</span><br><span class="line">            <span class="comment">//在这里可以考虑把获取出来的rowKey再push到Redis中，这样可以保证数据不丢</span></span><br><span class="line">            <span class="keyword">if</span>(rowKeyList!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                jedis.rpush(<span class="string">"l_article_ids"</span>,rowKeyList.get(<span class="number">1</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//向连接池返回连接</span></span><br><span class="line">            <span class="keyword">if</span>(jedis!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                RedisUtil.returnResource(jedis);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//注意：确认ES连接不再使用了再关闭连接(当知识运行一次，就可以要下面的代码；如果要一直运行()相当于try外层再加一个while(True)，然后后面运行完了sleep一会)，就要慎重考虑下面的代码该如何编写)，否则会导致client无法继续使用</span></span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                EsUtil.closeRestClient();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                logger.error(<span class="string">"ES连接关闭失败："</span>+e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="对接Web项目，提供页面检索功能"><a href="#对接Web项目，提供页面检索功能" class="headerlink" title="对接Web项目，提供页面检索功能"></a>对接Web项目，提供页面检索功能</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">完善web_fullsearch项目中和大数据相关的代码。</span><br><span class="line">最核心的代码就是EsUtil中的search方法：</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全文检索功能</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> index</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> start</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> row</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title">search</span><span class="params">(String key, String index, <span class="keyword">int</span> start, <span class="keyword">int</span> row)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">SearchRequest searchRequest = <span class="keyword">new</span> SearchRequest();</span><br><span class="line"><span class="comment">//指定索引库，支持指定一个或者多个，也支持通配符</span></span><br><span class="line">searchRequest.indices(index);</span><br><span class="line"></span><br><span class="line"><span class="comment">//指定searchType</span></span><br><span class="line">searchRequest.searchType(SearchType.DFS_QUERY_THEN_FETCH);</span><br><span class="line"></span><br><span class="line"><span class="comment">//组装查询条件</span></span><br><span class="line">SearchSourceBuilder searchSourceBuilder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line"><span class="comment">//如果传递了搜索参数，则拼接查询条件</span></span><br><span class="line"><span class="keyword">if</span>(StringUtils.isNotBlank(key))&#123;</span><br><span class="line">searchSourceBuilder.query(QueryBuilders.multiMatchQuery(key,<span class="string">"title"</span>,<span class="string">"describe"</span>,<span class="string">"content"</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//分页</span></span><br><span class="line">searchSourceBuilder.from(start);</span><br><span class="line">searchSourceBuilder.size(row);</span><br><span class="line"></span><br><span class="line"><span class="comment">//高亮</span></span><br><span class="line"><span class="comment">//设置高亮字段</span></span><br><span class="line">HighlightBuilder highlightBuilder =  <span class="keyword">new</span> HighlightBuilder()</span><br><span class="line">.field(<span class="string">"title"</span>)</span><br><span class="line">.field(<span class="string">"describe"</span>);<span class="comment">//支持多个高亮字段</span></span><br><span class="line"><span class="comment">//设置高亮字段的前缀和后缀内容</span></span><br><span class="line">highlightBuilder.preTags(<span class="string">"&lt;font color='red'&gt;"</span>);</span><br><span class="line">highlightBuilder.postTags(<span class="string">"&lt;/font&gt;"</span>);</span><br><span class="line">searchSourceBuilder.highlighter(highlightBuilder);</span><br><span class="line"></span><br><span class="line"><span class="comment">//指定查询条件</span></span><br><span class="line">searchRequest.source(searchSourceBuilder);</span><br><span class="line"></span><br><span class="line"><span class="comment">//执行查询操作</span></span><br><span class="line">SearchResponse searchResponse = client.search(searchRequest, RequestOptions.DEFAULT);</span><br><span class="line"><span class="comment">//存储返回给页面的数据</span></span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line"><span class="comment">//获取查询返回的结果</span></span><br><span class="line">SearchHits hits = searchResponse.getHits();</span><br><span class="line"><span class="comment">//获取数据总量</span></span><br><span class="line"><span class="keyword">long</span> numHits = hits.getTotalHits().value;</span><br><span class="line">map.put(<span class="string">"count"</span>,numHits);</span><br><span class="line">ArrayList&lt;Article&gt; arrayList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="comment">//获取具体内容</span></span><br><span class="line">SearchHit[] searchHits = hits.getHits();</span><br><span class="line"><span class="comment">//迭代解析具体内容</span></span><br><span class="line"><span class="keyword">for</span> (SearchHit hit: searchHits) &#123;</span><br><span class="line">Map&lt;String, Object&gt; sourceAsMap = hit.getSourceAsMap();</span><br><span class="line">String id = hit.getId();</span><br><span class="line">String title = sourceAsMap.get(<span class="string">"title"</span>).toString();</span><br><span class="line">String author = sourceAsMap.get(<span class="string">"author"</span>).toString();</span><br><span class="line">String describe = sourceAsMap.get(<span class="string">"describe"</span>).toString();</span><br><span class="line">String time = sourceAsMap.get(<span class="string">"time"</span>).toString();</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取高亮字段内容</span></span><br><span class="line">Map&lt;String, HighlightField&gt; highlightFields = hit.getHighlightFields();</span><br><span class="line"><span class="comment">//获取title字段的高亮内容</span></span><br><span class="line">HighlightField highlightField = highlightFields.get(<span class="string">"title"</span>);</span><br><span class="line"><span class="keyword">if</span>(highlightField!=<span class="keyword">null</span>)&#123;</span><br><span class="line">Text[] fragments = highlightField.getFragments();</span><br><span class="line">title = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span> (Text text : fragments) &#123;</span><br><span class="line">title += text;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取describe字段的高亮内容</span></span><br><span class="line">HighlightField highlightField2 = highlightFields.get(<span class="string">"describe"</span>);</span><br><span class="line"><span class="keyword">if</span>(highlightField2!=<span class="keyword">null</span>)&#123;</span><br><span class="line">Text[] fragments = highlightField2.fragments();</span><br><span class="line">describe = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span> (Text text : fragments) &#123;</span><br><span class="line">describe += text;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//把文章信息封装到Article对象中</span></span><br><span class="line">Article article = <span class="keyword">new</span> Article();</span><br><span class="line">article.setId(id);</span><br><span class="line">article.setTitle(title);</span><br><span class="line">article.setAuthor(author);</span><br><span class="line">article.setDescribe(describe);</span><br><span class="line">article.setTime(time);</span><br><span class="line"><span class="comment">//最后再把拼装好的article添加到list对象汇总</span></span><br><span class="line">arrayList.add(article);</span><br><span class="line">&#125;</span><br><span class="line">map.put(<span class="string">"dataList"</span>,arrayList);</span><br><span class="line"><span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="从0-1运行项目"><a href="#从0-1运行项目" class="headerlink" title="从0~1运行项目"></a>从0~1运行项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">首先要确保Hadoop、Zookeeper、HBase、Redis、Elasticsearch这些服务都是正常的。</span><br><span class="line">1：首先在HBase中创建表：article</span><br><span class="line">hbase(main):001:0&gt; create &#39;article&#39;,&#39;info&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">2：在ES中创建索引库：article，通过article.json文件指定索引库的settings和mapping。</span><br><span class="line">[root@bigdata01 elasticsearch-7.13.4]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;article&#39; -d @article.json</span><br><span class="line"></span><br><span class="line">确认一下索引库article的mapping信息：</span><br><span class="line">[root@bigdata01 elasticsearch-7.13.4]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;article&#x2F;_mapping?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;article&quot; : &#123;</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">      &quot;dynamic&quot; : &quot;strict&quot;,</span><br><span class="line">      &quot;_source&quot; : &#123;</span><br><span class="line">        &quot;excludes&quot; : [</span><br><span class="line">          &quot;content&quot;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;properties&quot; : &#123;</span><br><span class="line">        &quot;author&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;,</span><br><span class="line">          &quot;index&quot; : false</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;content&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;,</span><br><span class="line">          &quot;analyzer&quot; : &quot;ik_max_word&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;describe&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;,</span><br><span class="line">          &quot;analyzer&quot; : &quot;ik_max_word&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;time&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;date&quot;,</span><br><span class="line">          &quot;index&quot; : false,</span><br><span class="line">          &quot;format&quot; : &quot;yyyy-MM-dd HH:mm:ss&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;title&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;,</span><br><span class="line">          &quot;analyzer&quot; : &quot;ik_max_word&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：需要确认ES集群中已经集成了ik分词器，否则这里执行会报错。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">3：在本地执行data_manager项目中的DataImport代码，将数据导入到HBase和Redis。</span><br><span class="line">修改项目中用到的HBaseUtil和RedisUtil工具类中的节点信息。</span><br><span class="line"></span><br><span class="line">注意：DataImport代码执行需要消耗一段时间。</span><br><span class="line"></span><br><span class="line">到HBase中验证数据：</span><br><span class="line">hbase(main):003:0&gt; count &#39;article&#39;</span><br><span class="line">100 row(s)</span><br><span class="line">Took 0.2357 seconds                                                   </span><br><span class="line">&#x3D;&gt; 100</span><br><span class="line"></span><br><span class="line">到Redis中验证数据：</span><br><span class="line">[root@bigdata04 redis-5.0.9]# redis-cli </span><br><span class="line">127.0.0.1:6379&gt; lrange l_article_ids 0 -1</span><br><span class="line">  1) &quot;0e52f3fb-50a7-43e6-ba1a-8f862464436e&quot;</span><br><span class="line">  2) &quot;0e0fbb25-421c-4419-9ccc-bbfcd7bc783f&quot;</span><br><span class="line">  3) &quot;0e0cbf00-d63c-4c1f-aa2e-9f96a5826029&quot;</span><br><span class="line">  4) &quot;0ddaccc1-af4c-47b1-b526-5a32b2d68aa5&quot;</span><br><span class="line">  5) &quot;0db74ee1-6243-4c3e-ba01-2eacba76188d&quot;</span><br><span class="line">  6) &quot;0d9eae28-b614-4347-9126-ad0ee7519ef1&quot;</span><br><span class="line">  7) &quot;0d7bd4de-159e-46ef-a75c-5d88de612def&quot;</span><br><span class="line">  8) &quot;0d5aeec8-3aa4-4fa5-b7eb-1ba0d0f2d715&quot;</span><br><span class="line">  9) &quot;0d286033-dcad-4514-85e1-2ae052ff531c&quot;</span><br><span class="line"> 10) &quot;0d239fca-c524-47ab-be9a-05133ea57a4f&quot;</span><br><span class="line"> 11) &quot;0d20beb1-a5c5-4638-99c5-9f69084b44c8&quot;</span><br><span class="line"> 12) &quot;0cd0ece6-9d61-4fda-bbcd-a9d9f0d7ff70&quot;</span><br><span class="line"> 13) &quot;0cc57b16-fbe6-488e-b080-dab0f0a71930&quot;</span><br><span class="line"> 14) &quot;0cb28936-e83f-46e9-8d36-70ae77018fdf&quot;</span><br><span class="line"> 15) &quot;0c85c890-57de-40cb-b7f6-8615eb1896fe&quot;</span><br><span class="line"> 16) &quot;0c30950e-8fb0-4212-ae13-e8e659515ff3&quot;</span><br><span class="line"> 17) &quot;0c2c9dca-b0db-42bc-aa6c-ad180501169d&quot;</span><br><span class="line"> 18) &quot;0bfdef9f-8ba9-4c2d-95e4-74284cf07500&quot;</span><br><span class="line"> 19) &quot;0bf5aef2-9ac4-4550-80f5-be862a04deba&quot;</span><br><span class="line"> 20) &quot;0be8351d-dd82-4e43-92c7-cb8819421b25&quot;</span><br><span class="line"> 21) &quot;0bbc79e8-9ab1-44c1-beec-ef2b22c48cfe&quot;</span><br><span class="line"> 22) &quot;0baf900c-2812-4bdf-8188-962ac9d17f23&quot;</span><br><span class="line"> 23) &quot;0ba2b80b-0b43-4916-9d04-8d67aa4e95b2&quot;</span><br><span class="line"> 24) &quot;0b672fc3-0737-467b-b32c-b888de1eaab6&quot;</span><br><span class="line"> 25) &quot;0b3dc9c2-96b6-4340-8af3-e07c8bac0ba8&quot;</span><br><span class="line"> 26) &quot;0b0161f5-d1d4-4109-8f12-a4b47dbff0e5&quot;</span><br><span class="line"> 27) &quot;0a088500-f708-470a-bda1-9e5a714c0b81&quot;</span><br><span class="line"> 28) &quot;09e8bd66-17e0-4e28-b804-a67df7312f90&quot;</span><br><span class="line"> 29) &quot;09d6e535-4f39-45ba-9857-c6ab01fe8823&quot;</span><br><span class="line"> 30) &quot;09a76b9e-030c-465b-8c80-b88fe5bbac16&quot;</span><br><span class="line"> 31) &quot;09a09479-56c1-4fd3-8893-3e4d307951b9&quot;</span><br><span class="line"> 32) &quot;09193761-e549-48ee-86fb-89295094f1e4&quot;</span><br><span class="line"> 33) &quot;090b766d-9f8e-4cb9-9a5f-b8c3373a9eb6&quot;</span><br><span class="line"> 34) &quot;09089c93-9848-4244-9eff-9034d434865b&quot;</span><br><span class="line"> 35) &quot;09036b9f-8b67-4275-837a-b884c8945a31&quot;</span><br><span class="line"> 36) &quot;08d8762e-dc47-49f5-ad14-de52f7fbb04e&quot;</span><br><span class="line"> 37) &quot;08839fde-1984-4739-bac2-f854989cdc6c&quot;</span><br><span class="line"> 38) &quot;0872be3a-2545-4a98-ba33-6ec148999130&quot;</span><br><span class="line"> 39) &quot;0862af37-2047-470d-a8b8-c57740a0df8b&quot;</span><br><span class="line"> 40) &quot;085f3acc-1f92-4dd2-b516-d0991b660680&quot;</span><br><span class="line"> 41) &quot;08210f1a-f553-4d3c-a09f-420dc8e6fe8c&quot;</span><br><span class="line"> 42) &quot;080639ea-ee70-47ff-b7d1-de75eb1e1196&quot;</span><br><span class="line"> 43) &quot;07ef53b0-9179-416e-bf8b-7720079fc87a&quot;</span><br><span class="line"> 44) &quot;07d79c1d-ceaa-4cd0-a3be-96186037b0c1&quot;</span><br><span class="line"> 45) &quot;07b71e20-a4b3-4f9d-b7c6-6db163cbabd1&quot;</span><br><span class="line"> 46) &quot;07928b77-a31e-4646-aff0-79ab61f8b605&quot;</span><br><span class="line"> 47) &quot;076077f1-8324-4ef3-9e8f-66c806644db6&quot;</span><br><span class="line"> 48) &quot;074a36a1-c7b4-4d1a-b8a1-3a01d0c1a2ec&quot;</span><br><span class="line"> 49) &quot;0734a9d3-4aa6-4206-aa12-9e26e67f0ef2&quot;</span><br><span class="line"> 50) &quot;072b6883-3258-4cff-8e90-77d4f011acfe&quot;</span><br><span class="line"> 51) &quot;06d75712-1fac-4a19-927f-f4c13ceba899&quot;</span><br><span class="line"> 52) &quot;06d498d1-97cd-4384-8ec1-82e9a1e0070b&quot;</span><br><span class="line"> 53) &quot;06beaece-c734-4eba-bcf7-64a9e43d6c55&quot;</span><br><span class="line"> 54) &quot;0682b625-f247-4c70-a628-4919946ff588&quot;</span><br><span class="line"> 55) &quot;0659a1c3-2f34-4342-827b-7c867a3394e3&quot;</span><br><span class="line"> 56) &quot;0647046c-2129-4c16-83f9-7857e9da6e2c&quot;</span><br><span class="line"> 57) &quot;0643961e-74ea-46d2-8da8-02309c6cc489&quot;</span><br><span class="line"> 58) &quot;061776ad-5742-4fcc-b997-9a25f5b6a4e0&quot;</span><br><span class="line"> 59) &quot;05ec598f-4b02-448f-88b6-f17f3891bd3f&quot;</span><br><span class="line"> 60) &quot;058ca914-aa70-4cf5-b69f-852e03729b52&quot;</span><br><span class="line"> 61) &quot;0504f099-995c-475d-97e8-f4d691673cbb&quot;</span><br><span class="line"> 62) &quot;04fce8dc-e27c-4f1c-bb4c-34597fad1810&quot;</span><br><span class="line"> 63) &quot;04b00310-c09a-44e2-9895-1fd22cd14148&quot;</span><br><span class="line"> 64) &quot;04997210-1552-4dcb-b13d-16e79ced1320&quot;</span><br><span class="line"> 65) &quot;04943196-717d-4594-bc83-a76189187c2e&quot;</span><br><span class="line"> 66) &quot;04940647-ff85-497d-b2fd-44f43600a569&quot;</span><br><span class="line"> 67) &quot;04755a1e-32b2-42b7-933e-405c8143eb8f&quot;</span><br><span class="line"> 68) &quot;047139c9-c351-4275-83be-c96b8105811b&quot;</span><br><span class="line"> 69) &quot;0451dbce-f8da-4862-b563-bee0bc5abdc6&quot;</span><br><span class="line"> 70) &quot;042bed42-fbb9-4c51-a424-089f579697e0&quot;</span><br><span class="line"> 71) &quot;03f3a775-6736-4ffb-bda0-b6e3ae215394&quot;</span><br><span class="line"> 72) &quot;03dde3c0-300f-4431-9f58-82dc3869020a&quot;</span><br><span class="line"> 73) &quot;03dd67bf-9044-4c00-a34d-c480d221afdb&quot;</span><br><span class="line"> 74) &quot;03b79d39-ddcb-48b2-8cdf-bd480041018d&quot;</span><br><span class="line"> 75) &quot;039b6212-3760-4261-a3ad-66427ca3ece2&quot;</span><br><span class="line"> 76) &quot;034e7e37-0e9a-49d0-86f7-f74956ad9c1c&quot;</span><br><span class="line"> 77) &quot;032f6cc9-0ec8-4014-a37c-ee233afad174&quot;</span><br><span class="line"> 78) &quot;02ce202c-4b37-4e21-b8c6-241323daaf4f&quot;</span><br><span class="line"> 79) &quot;02c32611-8f4c-44cc-85e6-9aabe50c5deb&quot;</span><br><span class="line"> 80) &quot;02617a09-af48-4885-9193-e36c73e1cc93&quot;</span><br><span class="line"> 81) &quot;022ec4b4-9061-489e-9c1f-d702187d9173&quot;</span><br><span class="line"> 82) &quot;022bfe1c-c04a-4dfd-83d1-545a2fa37d62&quot;</span><br><span class="line"> 83) &quot;0221116d-1140-4161-976e-780166b409ee&quot;</span><br><span class="line"> 84) &quot;0211f787-5122-4b95-90b2-36a60da5072c&quot;</span><br><span class="line"> 85) &quot;01f80b6f-ef70-4cf3-af3c-0c39cc1ca6df&quot;</span><br><span class="line"> 86) &quot;01ae3dff-19bf-4dfe-a417-f00c5cbee89e&quot;</span><br><span class="line"> 87) &quot;017b4fc5-a5b4-40f4-a22c-c0585dce1b8c&quot;</span><br><span class="line"> 88) &quot;0157ba2a-e6ea-4272-8257-be4d07278f41&quot;</span><br><span class="line"> 89) &quot;01476c80-aa75-46ed-b912-cad708cfb6da&quot;</span><br><span class="line"> 90) &quot;0125e066-aeb7-4053-ab85-e358076a23b0&quot;</span><br><span class="line"> 91) &quot;00ded12e-3974-46ff-b425-a1f4202d5380&quot;</span><br><span class="line"> 92) &quot;00b5546f-04a5-4d98-80b2-dbf2254f8f81&quot;</span><br><span class="line"> 93) &quot;0087283d-3773-4788-a86e-3a3a425d2240&quot;</span><br><span class="line"> 94) &quot;005dc64e-0134-43d8-b9bf-b3390e59ab12&quot;</span><br><span class="line"> 95) &quot;004ecf75-54b9-4aa7-a3ff-7ee2e0907f85&quot;</span><br><span class="line"> 96) &quot;004a2fb2-1547-4c63-8bfb-abfe812681aa&quot;</span><br><span class="line"> 97) &quot;0025b235-f4cd-45e4-90c3-46acbb3165fb&quot;</span><br><span class="line"> 98) &quot;001b046c-f1c9-457d-a8b7-cd157bc5d889&quot;</span><br><span class="line"> 99) &quot;00119d1d-b587-478f-86c0-ceb4f15c5cf7&quot;</span><br><span class="line">100) &quot;00093f78-11c7-43e1-abed-86c735252155&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">4：在本地执行data_manager项目中的DataIndex代码，在ES中建立索引。</span><br><span class="line"></span><br><span class="line">注意：需要修改项目中用到的EsUtil工具类中的节点信息。</span><br><span class="line"></span><br><span class="line">到ES中验证数据：</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;article&#x2F;_search?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;took&quot; : 393,</span><br><span class="line">  &quot;timed_out&quot; : false,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 5,</span><br><span class="line">    &quot;successful&quot; : 5,</span><br><span class="line">    &quot;skipped&quot; : 0,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;hits&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : &#123;</span><br><span class="line">      &quot;value&quot; : 100,</span><br><span class="line">      &quot;relation&quot; : &quot;eq&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;max_score&quot; : 1.0,</span><br><span class="line">    &quot;hits&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;article&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;01476c80-aa75-46ed-b912-cad708cfb6da&quot;,</span><br><span class="line">        &quot;_score&quot; : 1.0,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;author&quot; : &quot;腾讯新闻&quot;,</span><br><span class="line">          &quot;describe&quot; : &quot;　　浙江在线11月11日讯由于感情纠葛，阿松(化名)的婚外恋女友一怒之下抄起剪刀，几乎剪断了他的整根“命根子”。所幸医生及时抢救，周密施术，才保住了他的“男儿身”。昨天，正在义乌进行康复治疗的阿松，回想起前几天的经历，依旧百感交集。　　“小三”怒剪命根只因疑其不忠　　三十多岁的阿松是重庆人，在义乌工作，妻子女儿也都在义乌。　　阿松还有一个婚外恋女友，是在一家工厂里认识的，两个人相恋已经有一年多了。女友30多岁，也有自己的家庭。　　阿松说，最近一段时间，女友屡屡怀疑阿松“不忠”，据说是听到了一些传言。　　十几天前，被妒忌之火冲昏头脑的女友，居然想到了断其“命根”的“教训”办法。当时是下午3点多，&quot;,</span><br><span class="line">          &quot;time&quot; : &quot;2021-10-17 11:13:19&quot;,</span><br><span class="line">          &quot;title&quot; : &quot;“小三”怀疑男友不忠怒剪其“命根”&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;article&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;01f80b6f-ef70-4cf3-af3c-0c39cc1ca6df&quot;,</span><br><span class="line">        &quot;_score&quot; : 1.0,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;author&quot; : &quot;腾讯新闻&quot;,</span><br><span class="line">          &quot;describe&quot; : &quot;　　　　两岸几十年的隔阂已经使共同的汉语言演变出一些差异。图为在台湾书店里的内地游客。　　　　台湾中华语文研习所董事长何景贤，手捧两种版本的《两岸现代汉语常用词典》。　　中新网11月11日电教育部语言文字应用管理司司长王登峰在接受香港《文汇报》访问时表示，两岸合编《中华大辞典》主要将以民间方式进行，届时将推出简体字括注繁体字以及繁体字括注简体字两个版本。另有消息人士透露，预计该项目将于年底启动。　　第五届两岸经贸文化论坛共同建议7月份曾就两岸合编《中华大辞典》达成初步意向。王登峰表示，大陆方面已经作好充分的准备工作，将主要以1996年两岸合编的《两岸现代汉语常用词典》为工作基础。两岸有关部门达&quot;,</span><br><span class="line">          &quot;time&quot; : &quot;2021-10-17 11:13:19&quot;,</span><br><span class="line">          &quot;title&quot; : &quot;两岸将合编中华大辞典收集新词汇(组图)&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">......</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">重点关注_source字段中是否包含content字段，如果包含此字段内容说明前面的mapping配置有问题，如果不包含此字段内容说明是正确的。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">5：对web_fullsearch项目打包并运行。</span><br><span class="line">web_fullsearch项目是一个Javaweb项目，所以需要打war包，最终在Web容器中运行，在这里我们使用Tomcat这个web容器。</span><br><span class="line">打war包。</span><br><span class="line"></span><br><span class="line">D:\IdeaProjects\db_fullsearch\web_fullsearch&gt;mvn clean package -DskipTests</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 24.974s</span><br><span class="line">[INFO] Final Memory: 35M&#x2F;348M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">使用之前在学习ES课程的时候在bigdata04上部署的tomcat，将war包上传到tomcat的webapps目录下：</span><br><span class="line">[root@bigdata04 apache-tomcat-8.0.52]# cd webapps&#x2F;</span><br><span class="line">[root@bigdata04 webapps]# ll</span><br><span class="line">total 84888</span><br><span class="line">drwxr-xr-x. 14 root root     4096 Mar 16 20:37 docs</span><br><span class="line">drwxr-xr-x.  6 root root       83 Mar 16 20:37 examples</span><br><span class="line">drwxr-xr-x.  5 root root       87 Mar 16 20:37 host-manager</span><br><span class="line">drwxr-xr-x.  5 root root      103 Mar 16 20:37 manager</span><br><span class="line">drwxr-xr-x.  3 root root     4096 Mar 16 20:45 ROOT</span><br><span class="line">-rw-r--r--.  1 root root 86913853 Oct 17  2021 web_fullsearch.war</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">启动tomcat：</span><br><span class="line">[root@bigdata04 apache-tomcat-8.0.52]# bin&#x2F;startup.sh </span><br><span class="line"></span><br><span class="line">访问项目：</span><br><span class="line">http:&#x2F;&#x2F;bigdata04:8080&#x2F;web_fullsearch&#x2F;article</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306121511613.png" alt="image-20230612151125293"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6：验证搜索功能。</span><br><span class="line">确认分页、高亮、查询文章明细数据等功能是否正常。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306121511028.png" alt="image-20230612151144676"></p><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306121512497.png" alt="image-20230612151156591"></p><h2 id="5-项目中遇到的典型问题"><a href="#5-项目中遇到的典型问题" class="headerlink" title="5 项目中遇到的典型问题"></a>5 项目中遇到的典型问题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">单索引库查询效率降低的问题</span><br><span class="line"></span><br><span class="line">爬虫程序每天都会到互联网上采集新的文章数据，如果项目运行了半年、1年，所有的数据都存储到ES的一个索引库里面，这样会导致查询效率降低。</span><br><span class="line">可以考虑按周或者按月创建索引库，通过索引库别名关联最近半年内的索引库，实现默认查询最近半年内的数据。</span><br><span class="line">索引库的命名可以按照一定的规律，假设是按月建立索引库，则索引库的名称大致是这样的：</span><br><span class="line">article_202201</span><br><span class="line">article_202202</span><br><span class="line">article_202203</span><br><span class="line">......</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">如果确实需要查询历史以来所有的数据，在查询的时候可以通过索引库通配符实现所有数据查询，使用这个索引库通配符即可：article_*，这样可以查询所有以article_开头的索引库。</span><br><span class="line"></span><br><span class="line">类似于百度这样，提供一个高级搜索选项，在里面进行一些个性化高级设置。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306141139433.png" alt="image-20230614113918727"></p><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306141139401.png" alt="image-20230614113936078"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">自定义词库导致的历史数据查询异常问题</span><br><span class="line"></span><br><span class="line">当项目运行了一段时间以后，需要在自定义词库中新增一些词语，但是这个新增的词语只会针对后续新增的索引数据生效，对之前的索引数据是不生效的。</span><br><span class="line">针对之前的历史数据根据新增的词语进行查询，可能还是查不出来结果，这属于正常现象。</span><br><span class="line"></span><br><span class="line">如果想要实现新增的自定义词语在历史数据中可以查询出来数据，只有一个办法，就是重建索引，这个工作量就有点大了，所以一般情况下也不需要针对历史数据额外处理，知道有这个现象就行了。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ES和HBase数据一致性问题</span><br><span class="line"></span><br><span class="line">针对这个问题，可以分析一下ES和HBase数据同步的三种方案，每种方案的优缺点。</span><br><span class="line">详细分析见第2章《ES和HBase数据同步的三种方案》小节。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">针对这个项目能不能只用ES？</span><br><span class="line"></span><br><span class="line">Elasticsearch最擅长的是快速复杂查询，虽然它支持分布式，也可以存储海量数据，但是这并不是它最擅长的功能，因为数据存储多了之后肯定会影响ES的性能，所以需要引入HBase实现海量数据存储，在ES中主要维护查询需要用到的字段。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ES和HBase中存储的数据有什么区别？</span><br><span class="line"></span><br><span class="line">可以详细分析一下ES中的mapping设计，重点分析文章的正文(content)字段。</span><br><span class="line">正文字段只需要在HBase中存储，不需要在ES中存储，但是需要在ES中建立索引，因为在查询的时候需要根据这个字段进行查询。</span><br><span class="line">详细解释见第4章内容。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306141142525.png" alt="image-20230614114230255"></p><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据开发工程师" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
      <category term="大数据" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-全文检索引擎Elasticsearch-2</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%85%A8%E6%96%87%E6%A3%80%E7%B4%A2%E5%BC%95%E6%93%8EElasticsearch-2.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%85%A8%E6%96%87%E6%A3%80%E7%B4%A2%E5%BC%95%E6%93%8EElasticsearch-2.html</id>
    <published>2023-06-02T10:03:09.000Z</published>
    <updated>2023-06-14T03:15:42.001Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="全文检索引擎Elasticsearch-2"><a href="#全文检索引擎Elasticsearch-2" class="headerlink" title="全文检索引擎Elasticsearch-2"></a>全文检索引擎Elasticsearch-2</h1><h2 id="3-Elasticsearch分词详解"><a href="#3-Elasticsearch分词详解" class="headerlink" title="3 Elasticsearch分词详解"></a>3 Elasticsearch分词详解</h2><h3 id="ES分词介绍"><a href="#ES分词介绍" class="headerlink" title="ES分词介绍"></a>ES分词介绍</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ES中在添加数据，也就是创建索引的时候，会先对数据进行分词。</span><br><span class="line">在查询索引数据的时候，也会先根据查询的关键字进行分词。</span><br><span class="line">所以在ES中分词这个过程是非常重要的，涉及到查询的效率和准确度。</span><br><span class="line"></span><br><span class="line">假设有一条数据，数据中有一个字段是titile，这个字段的值为LexCorp BFG-9000。</span><br><span class="line">我们想要把这条数据在ES中创建索引，方便后期检索。</span><br><span class="line"></span><br><span class="line">创建索引和查询索引的大致流程是这样的：</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111457924.png" alt="image-20230611145714539"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">图中左侧是创建索引的过程：</span><br><span class="line">首先对数据进行空白字符分割，将LexCorp BFG-9000切分为LexCorp和BFG-9000。</span><br><span class="line">然后进行单词切割，将LexCorp切分为Lex和Corp，BFG-9000切分为BFG和9000。</span><br><span class="line">最后执行小写转换操作，将英文单词全部转换为小写。</span><br><span class="line"></span><br><span class="line">图中右侧是查询索引的过程：</span><br><span class="line">后期想要查询LexCorp BFG-9000这条数据，但是具体的内容记不清了，大致想起来了一些关键词Lex corp bfg9000。</span><br><span class="line">接下来就根据这些关键词进行查询，</span><br><span class="line">首先还是对数据进行空白符分割，将Lex corp bfg9000切分为Lex、corp 和bfg9000。</span><br><span class="line">然后进行单词切割，Lex和corp不变，将bfg9000切分为bfg和9000。</span><br><span class="line">最后执行小写转换操作，将英文单词全部转换为小写。</span><br><span class="line">这样其实在检索的时候就可以忽略英文大小写了，因为前面在创建索引的时候也会对英文进行小写转换。</span><br><span class="line"></span><br><span class="line">到这可以发现，使用Lex corp bfg9000是可以查找到LexCorp BFG-9000这条数据的，因为在经过空白符分割、单词切割、小写转换之后，这两条数据是一样的，其实只要能有一个单词是匹配的，就可以把这条数据查找出来。</span><br><span class="line"></span><br><span class="line">了解了这个流程之后，我们以后在搜索引擎里面搜索一些内容的时候其实就知道要怎么快速高效的检索内容了，只需要输入一些关键词，中间最好用空格隔开，针对英文字符不用纠结大小写了。</span><br><span class="line"></span><br><span class="line">这些数据在ES中分词之后，其实在底层会产生倒排索引，注意了，倒排索引是ES能够提供快速检索能力的核心，下面来看一下这个倒排索引</span><br></pre></td></tr></table></figure><h3 id="倒排索引介绍"><a href="#倒排索引介绍" class="headerlink" title="倒排索引介绍"></a>倒排索引介绍</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">假设有一批数据，数据中有两个字段，文档编号和文档内容。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111501138.png" alt="image-20230611150131888"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">针对这一批数据，在ES中创建索引之后，最终产生的倒排索引内容大致是这样的：</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111501077.png" alt="image-20230611150153996"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">解释：</span><br><span class="line"></span><br><span class="line">单词ID：记录每个单词的单词编号。</span><br><span class="line">单词：对应的单词。</span><br><span class="line">文档频率：代表文档集合中有多少个文档包含某个单词。</span><br><span class="line">倒排列表：包含单词ID及其它必要信息。</span><br><span class="line">DocId：单词出现的文档id。</span><br><span class="line">TF：单词在某个文档中出现的次数。</span><br><span class="line">POS：单词在文档中出现的位置。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">以单词 加盟 为例，其单词编号为6，文档频率为3，代表整个文档集合中有3个文档包含这个单词，对应的倒排列表为&#123;(2;1;&lt;4&gt;),(3;1;&lt;7&gt;),(5;1;&lt;5&gt;)&#125;，含义是在文档2，3，5中出现过这个单词，在每个文档中都只出现过1次，单词 加盟 在第一个文档的POS（位置）是4，即文档的第四个单词是 加盟 ，其它的类似。</span><br><span class="line">这个倒排索引已经是一个非常完备的索引系统，实际搜索系统的索引结构基本如此。</span><br></pre></td></tr></table></figure><h3 id="分词器的作用"><a href="#分词器的作用" class="headerlink" title="分词器的作用"></a>分词器的作用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">前面分析了ES在创建索引和查询索引的时候都需要进行分词，分词需要用到分词器。下面来具体分析一下分词器的作用：</span><br><span class="line"></span><br><span class="line">分词器的作用是把一段文本中的词按照一定规则进行切分。</span><br><span class="line"></span><br><span class="line">分词器对应的是Analyzer类，这是一个抽象类，切分词的具体规则是由子类实现的。</span><br><span class="line">也就是说不同的分词器分词的规则是不同的！</span><br><span class="line"></span><br><span class="line">所以对于不同的语言，要用不同的分词器。</span><br><span class="line">在创建索引时会用到分词器，在搜索时也会用到分词器，这两个地方要使用同一个分词器，否则可能会搜索不出结果。</span><br></pre></td></tr></table></figure><h4 id="分词器的工作流程"><a href="#分词器的工作流程" class="headerlink" title="分词器的工作流程"></a>分词器的工作流程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">分词器的工作流程一般是这样的：</span><br><span class="line"></span><br><span class="line">1.切分关键词，把关键的、核心的单词切出来。</span><br><span class="line">2.去除停用词。</span><br><span class="line">3.对于英文单词，把所有字母转为小写（搜索时不区分大小写）</span><br><span class="line"></span><br><span class="line">针对停用词下面来详细分析一下：</span><br></pre></td></tr></table></figure><h5 id="停用词"><a href="#停用词" class="headerlink" title="停用词"></a>停用词</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">有些词在文本中出现的频率非常高，但是对文本所携带的信息基本不产生影响。</span><br><span class="line">例如：</span><br><span class="line">英文停用词：a、an、the、of等</span><br><span class="line">中文停用词：的、了、着、是、标点符号等</span><br><span class="line"></span><br><span class="line">文本经过分词之后，停用词通常被过滤掉，不会被进行索引。</span><br><span class="line">在检索的时候，用户的查询中如果含有停用词，检索系统也会将其过滤掉（因为用户输入的查询字符串也要进行分词处理）。</span><br><span class="line">排除停用词可以加快建立索引的速度，减小索引库文件的大小，并且还可以提高查询的准确度。</span><br><span class="line">如果不去除停用词，可能会存在这个情况：</span><br><span class="line">假设有一批文章数据，基本上每篇文章里面都有的这个词，那我在检索的时候只要输入了的这个词，那么所有文章都认为是满足条件的数据，但是这样是没有意义的。</span><br><span class="line"></span><br><span class="line">常见的英文停用词汇总：</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line">a</span><br><span class="line">about</span><br><span class="line">above</span><br><span class="line">after</span><br><span class="line">again</span><br><span class="line">against</span><br><span class="line">all</span><br><span class="line">am</span><br><span class="line">an</span><br><span class="line">and</span><br><span class="line">any</span><br><span class="line">are</span><br><span class="line">aren&#39;t</span><br><span class="line">as</span><br><span class="line">at</span><br><span class="line">be</span><br><span class="line">because</span><br><span class="line">been</span><br><span class="line">before</span><br><span class="line">being</span><br><span class="line">below</span><br><span class="line">between</span><br><span class="line">both</span><br><span class="line">but</span><br><span class="line">by</span><br><span class="line">can&#39;t</span><br><span class="line">cannot</span><br><span class="line">could</span><br><span class="line">couldn&#39;t</span><br><span class="line">did</span><br><span class="line">didn&#39;t</span><br><span class="line">do</span><br><span class="line">does</span><br><span class="line">doesn&#39;t</span><br><span class="line">doing</span><br><span class="line">don&#39;t</span><br><span class="line">down</span><br><span class="line">during</span><br><span class="line">each</span><br><span class="line">few</span><br><span class="line">for</span><br><span class="line">from</span><br><span class="line">further</span><br><span class="line">had</span><br><span class="line">hadn&#39;t</span><br><span class="line">has</span><br><span class="line">hasn&#39;t</span><br><span class="line">have</span><br><span class="line">haven&#39;t</span><br><span class="line">having</span><br><span class="line">he</span><br><span class="line">he&#39;d</span><br><span class="line">he&#39;ll</span><br><span class="line">he&#39;s</span><br><span class="line">her</span><br><span class="line">here</span><br><span class="line">here&#39;s</span><br><span class="line">hers</span><br><span class="line">herself</span><br><span class="line">him</span><br><span class="line">himself</span><br><span class="line">his</span><br><span class="line">how</span><br><span class="line">how&#39;s</span><br><span class="line">i</span><br><span class="line">i&#39;d</span><br><span class="line">i&#39;ll</span><br><span class="line">i&#39;m</span><br><span class="line">i&#39;ve</span><br><span class="line">if</span><br><span class="line">in</span><br><span class="line">into</span><br><span class="line">is</span><br><span class="line">isn&#39;t</span><br><span class="line">it</span><br><span class="line">it&#39;s</span><br><span class="line">its</span><br><span class="line">itself</span><br><span class="line">let&#39;s</span><br><span class="line">me</span><br><span class="line">more</span><br><span class="line">most</span><br><span class="line">mustn&#39;t</span><br><span class="line">my</span><br><span class="line">myself</span><br><span class="line">no</span><br><span class="line">nor</span><br><span class="line">not</span><br><span class="line">of</span><br><span class="line">off</span><br><span class="line">on</span><br><span class="line">once</span><br><span class="line">only</span><br><span class="line">or</span><br><span class="line">other</span><br><span class="line">ought</span><br><span class="line">our</span><br><span class="line">ours</span><br><span class="line">ourselves</span><br><span class="line">out</span><br><span class="line">over</span><br><span class="line">own</span><br><span class="line">same</span><br><span class="line">shan&#39;t</span><br><span class="line">she</span><br><span class="line">she&#39;d</span><br><span class="line">she&#39;ll</span><br><span class="line">she&#39;s</span><br><span class="line">should</span><br><span class="line">shouldn&#39;t</span><br><span class="line">so</span><br><span class="line">some</span><br><span class="line">such</span><br><span class="line">than</span><br><span class="line">that</span><br><span class="line">that&#39;s</span><br><span class="line">the</span><br><span class="line">their</span><br><span class="line">theirs</span><br><span class="line">them</span><br><span class="line">themselves</span><br><span class="line">then</span><br><span class="line">there</span><br><span class="line">there&#39;s</span><br><span class="line">these</span><br><span class="line">they</span><br><span class="line">they&#39;d</span><br><span class="line">they&#39;ll</span><br><span class="line">they&#39;re</span><br><span class="line">they&#39;ve</span><br><span class="line">this</span><br><span class="line">those</span><br><span class="line">through</span><br><span class="line">to</span><br><span class="line">too</span><br><span class="line">under</span><br><span class="line">until</span><br><span class="line">up</span><br><span class="line">very</span><br><span class="line">was</span><br><span class="line">wasn&#39;t</span><br><span class="line">we</span><br><span class="line">we&#39;d</span><br><span class="line">we&#39;ll</span><br><span class="line">we&#39;re</span><br><span class="line">we&#39;ve</span><br><span class="line">were</span><br><span class="line">weren&#39;t</span><br><span class="line">what</span><br><span class="line">what&#39;s</span><br><span class="line">when</span><br><span class="line">when&#39;s</span><br><span class="line">where</span><br><span class="line">where&#39;s</span><br><span class="line">which</span><br><span class="line">while</span><br><span class="line">who</span><br><span class="line">who&#39;s</span><br><span class="line">whom</span><br><span class="line">why</span><br><span class="line">why&#39;s</span><br><span class="line">with</span><br><span class="line">won&#39;t</span><br><span class="line">would</span><br><span class="line">wouldn&#39;t</span><br><span class="line">you</span><br><span class="line">you&#39;d</span><br><span class="line">you&#39;ll</span><br><span class="line">you&#39;re</span><br><span class="line">you&#39;ve</span><br><span class="line">your</span><br><span class="line">yours</span><br><span class="line">yourself</span><br><span class="line">yourselves</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">常见的中文停用词汇总：</span><br><span class="line"></span><br><span class="line">的</span><br><span class="line">一</span><br><span class="line">不</span><br><span class="line">在</span><br><span class="line">人</span><br><span class="line">有</span><br><span class="line">是</span><br><span class="line">为</span><br><span class="line">以</span><br><span class="line">于</span><br><span class="line">上</span><br><span class="line">他</span><br><span class="line">而</span><br><span class="line">后</span><br><span class="line">之</span><br><span class="line">来</span><br><span class="line">及</span><br><span class="line">了</span><br><span class="line">因</span><br><span class="line">下</span><br><span class="line">可</span><br><span class="line">到</span><br><span class="line">由</span><br><span class="line">这</span><br><span class="line">与</span><br><span class="line">也</span><br><span class="line">此</span><br><span class="line">但</span><br><span class="line">并</span><br><span class="line">个</span><br><span class="line">其</span><br><span class="line">已</span><br><span class="line">无</span><br><span class="line">小</span><br><span class="line">我</span><br><span class="line">们</span><br><span class="line">起</span><br><span class="line">最</span><br><span class="line">再</span><br><span class="line">今</span><br><span class="line">去</span><br><span class="line">好</span><br><span class="line">只</span><br><span class="line">又</span><br><span class="line">或</span><br><span class="line">很</span><br><span class="line">亦</span><br><span class="line">某</span><br><span class="line">把</span><br><span class="line">那</span><br><span class="line">你</span><br><span class="line">乃</span><br><span class="line">它</span><br><span class="line">吧</span><br><span class="line">被</span><br><span class="line">比</span><br><span class="line">别</span><br><span class="line">趁</span><br><span class="line">当</span><br><span class="line">从</span><br><span class="line">到</span><br><span class="line">得</span><br><span class="line">打</span><br><span class="line">凡</span><br><span class="line">儿</span><br><span class="line">尔</span><br><span class="line">该</span><br><span class="line">各</span><br><span class="line">给</span><br><span class="line">跟</span><br><span class="line">和</span><br><span class="line">何</span><br><span class="line">还</span><br><span class="line">即</span><br><span class="line">几</span><br><span class="line">既</span><br><span class="line">看</span><br><span class="line">据</span><br><span class="line">距</span><br><span class="line">靠</span><br><span class="line">啦</span><br><span class="line">了</span><br><span class="line">另</span><br><span class="line">么</span><br><span class="line">每</span><br><span class="line">们</span><br><span class="line">嘛</span><br><span class="line">拿</span><br><span class="line">哪</span><br><span class="line">那</span><br><span class="line">您</span><br><span class="line">凭</span><br><span class="line">且</span><br><span class="line">却</span><br><span class="line">让</span><br><span class="line">仍</span><br><span class="line">啥</span><br><span class="line">如</span><br><span class="line">若</span><br><span class="line">使</span><br><span class="line">谁</span><br><span class="line">虽</span><br><span class="line">随</span><br><span class="line">同</span><br><span class="line">所</span><br><span class="line">她</span><br><span class="line">哇</span><br><span class="line">嗡</span><br><span class="line">往</span><br><span class="line">哪</span><br><span class="line">些</span><br><span class="line">向</span><br><span class="line">沿</span><br><span class="line">哟</span><br><span class="line">用</span><br><span class="line">于</span><br><span class="line">咱</span><br><span class="line">则</span><br><span class="line">怎</span><br><span class="line">曾</span><br><span class="line">至</span><br><span class="line">致</span><br><span class="line">着</span><br><span class="line">诸</span><br><span class="line">自</span><br></pre></td></tr></table></figure><h5 id="中文分词方式"><a href="#中文分词方式" class="headerlink" title="中文分词方式"></a>中文分词方式</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">针对中文而言，在分词的时候有多种分词规则：</span><br><span class="line">常见的有单字分词、二分法分词、词库分词等</span><br><span class="line">单字分词：&quot;我&quot;、&quot;们&quot;、&quot;是&quot;、&quot;中&quot;、&quot;国&quot;、&quot;人&quot;</span><br><span class="line">二分法分词：&quot;我们&quot;、&quot;们是&quot;、&quot;是中&quot;、&quot;中国&quot;、&quot;国人&quot;。</span><br><span class="line">词库分词：按照某种算法构造词，然后去匹配已建好的词库集合，如果匹配到就切分出来成为词语。</span><br><span class="line"></span><br><span class="line">从这里面可以看出来，其实最理想的中文分词方式是词库分词。</span><br></pre></td></tr></table></figure><h5 id="常见的中文分词器"><a href="#常见的中文分词器" class="headerlink" title="常见的中文分词器"></a>常见的中文分词器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">针对前面分析的几种中文分词方式，对应的有一些已经实现好的中分分词器。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111510363.png" alt="image-20230611151020118"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在词库分词方式领域里面，最经典的就是IK分词器，你懂得！</span><br></pre></td></tr></table></figure><h4 id="ES中文分词插件-es-ik"><a href="#ES中文分词插件-es-ik" class="headerlink" title="ES中文分词插件(es-ik)"></a>ES中文分词插件(es-ik)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在中文数据检索场景中，为了提供更好的检索效果，需要在ES中集成中文分词器，因为ES默认是按照英文的分词规则进行分词的，基本上可以认为是单字分词，对中文分词效果不理想。</span><br><span class="line">ES之前是没有提供中文分词器的，现在官方也提供了一些，但是在中文分词领域，IK分词器是不可撼动的，所以在这里我们主要讲一下如何在ES中集成IK这个中文分词器。</span><br><span class="line">首先下载es-ik插件，需要到github上下载。</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;medcl&#x2F;elasticsearch-analysis-ik</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111515484.png" alt="image-20230611151532296"></p><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111515497.png" alt="image-20230611151550453"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">最终的下载地址为：</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;medcl&#x2F;elasticsearch-analysis-ik&#x2F;releases&#x2F;download&#x2F;v7.13.4&#x2F;elasticsearch-analysis-ik-7.13.4.zip</span><br><span class="line"></span><br><span class="line">注意：在ES中安装IK插件的时候，需要在ES集群的所有节点中都安装。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1：将下载好的elasticsearch-analysis-ik-7.13.4.zip上传到bigdata01的&#x2F;data&#x2F;soft&#x2F; elasticsearch-7.13.4目录中。</span><br><span class="line">[root@bigdata01 elasticsearch-7.13.4]# ll elasticsearch-analysis-ik-7.13.4.zip </span><br><span class="line">-rw-r--r--. 1 root root 4504502 Sep  3  2021 elasticsearch-analysis-ik-7.13.4.zip</span><br><span class="line"></span><br><span class="line">2：将elasticsearch-analysis-ik-7.13.4.zip远程拷贝到bigdata02和bigdata03上。</span><br><span class="line">[root@bigdata01 elasticsearch-7.13.4]# scp -rq elasticsearch-analysis-ik-7.13.4.zip  bigdata02:&#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4</span><br><span class="line">[root@bigdata01 elasticsearch-7.13.4]# scp -rq elasticsearch-analysis-ik-7.13.4.zip  bigdata03:&#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3：在bigdata01节点离线安装IK插件。</span><br><span class="line">[root@bigdata01 elasticsearch-7.13.4]# bin&#x2F;elasticsearch-plugin install file:&#x2F;&#x2F;&#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4&#x2F;elasticsearch-analysis-ik-7.13.4.zip</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">注意：在安装的过程中会有警告信息提示需要输入y确认继续向下执行。</span><br><span class="line"></span><br><span class="line">最后看到如下内容就表示安装成功了。</span><br><span class="line">-&gt; Installed analysis-ik</span><br><span class="line">-&gt; Please restart Elasticsearch to activate any plugins installed</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">config目录下面的analysis-ik里面存储的是ik的配置文件信息。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 elasticsearch-7.13.4]# cd config&#x2F;</span><br><span class="line">[root@bigdata01 config]# ll analysis-ik&#x2F;</span><br><span class="line">total 8260</span><br><span class="line">-rwxrwxrwx. 1 root root 5225922 Feb 27 20:57 extra_main.dic</span><br><span class="line">-rwxrwxrwx. 1 root root   63188 Feb 27 20:57 extra_single_word.dic</span><br><span class="line">-rwxrwxrwx. 1 root root   63188 Feb 27 20:57 extra_single_word_full.dic</span><br><span class="line">-rwxrwxrwx. 1 root root   10855 Feb 27 20:57 extra_single_word_low_freq.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     156 Feb 27 20:57 extra_stopword.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     625 Feb 27 20:57 IKAnalyzer.cfg.xml</span><br><span class="line">-rwxrwxrwx. 1 root root 3058510 Feb 27 20:57 main.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     123 Feb 27 20:57 preposition.dic</span><br><span class="line">-rwxrwxrwx. 1 root root    1824 Feb 27 20:57 quantifier.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     164 Feb 27 20:57 stopword.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     192 Feb 27 20:57 suffix.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     752 Feb 27 20:57 surname.dic</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">plugins目录下面的analysis-ik里面存储的是ik的核心jar包。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 elasticsearch-7.13.4]# cd plugins&#x2F;</span><br><span class="line">[root@bigdata01 plugins]# ll analysis-ik&#x2F;</span><br><span class="line">total 1428</span><br><span class="line">-rwxrwxrwx. 1 root root 263965 Feb 27 20:56 commons-codec-1.9.jar</span><br><span class="line">-rwxrwxrwx. 1 root root  61829 Feb 27 20:56 commons-logging-1.2.jar</span><br><span class="line">-rwxrwxrwx. 1 root root  54626 Feb 27 20:56 elasticsearch-analysis-ik-7.13.4.jar</span><br><span class="line">-rwxrwxrwx. 1 root root 736658 Feb 27 20:56 httpclient-4.5.2.jar</span><br><span class="line">-rwxrwxrwx. 1 root root 326724 Feb 27 20:56 httpcore-4.4.4.jar</span><br><span class="line">-rwxrwxrwx. 1 root root   1807 Feb 27 20:56 plugin-descriptor.properties</span><br><span class="line">-rwxrwxrwx. 1 root root    125 Feb 27 20:56 plugin-security.policy</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4：在bigdata02节点离线安装IK插件。</span><br><span class="line"></span><br><span class="line">5：在bigdata03节点离线安装IK插件。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">6：如果集群正在运行，则需要停止集群。</span><br><span class="line">在bigdata01上停止。</span><br><span class="line">[root@bigdata01 elasticsearch-7.13.4]# jps</span><br><span class="line">1680 Elasticsearch</span><br><span class="line">2047 Jps</span><br><span class="line">[root@bigdata01 elasticsearch-7.13.4]# kill 1680</span><br><span class="line"></span><br><span class="line">在bigdata02上停止。</span><br><span class="line"></span><br><span class="line">在bigdata03上停止。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">7：修改elasticsearch-7.13.4的plugins目录下analysis-ik子目录的权限。</span><br><span class="line">直接修改elasticsearch-7.13.4目录的权限即可。</span><br><span class="line">在bigdata01上执行。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 elasticsearch-7.13.4]# cd ..</span><br><span class="line">[root@bigdata01 soft]# chmod -R 777 elasticsearch-7.13.4</span><br><span class="line"></span><br><span class="line">在bigdata02上执行。</span><br><span class="line">在bigdata03上执行。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">8：重新启动ES集群。</span><br><span class="line">在bigdata01上执行。</span><br><span class="line">[root@bigdata01 soft]# su es</span><br><span class="line">[es@bigdata01 soft]$ cd &#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4</span><br><span class="line">[es@bigdata01 elasticsearch-7.13.4]$ bin&#x2F;elasticsearch -d</span><br><span class="line"></span><br><span class="line">在bigdata02上执行。</span><br><span class="line">在bigdata03上执行。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">9：验证IK的分词效果。</span><br><span class="line">首先使用默认分词器测试中文分词效果。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST  &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;emp&#x2F;_analyze?pretty&#39; -d &#39;&#123;&quot;text&quot;:&quot;我们是中国人&quot;&#125;&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;我&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 1,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;们&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 1,</span><br><span class="line">      &quot;end_offset&quot; : 2,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;是&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 2,</span><br><span class="line">      &quot;end_offset&quot; : 3,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;中&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 3,</span><br><span class="line">      &quot;end_offset&quot; : 4,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 3</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;国&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 4,</span><br><span class="line">      &quot;end_offset&quot; : 5,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 4</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;人&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 5,</span><br><span class="line">      &quot;end_offset&quot; : 6,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 5</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">然后使用IK分词器测试中文分词效果。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 soft]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST  &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;emp&#x2F;_analyze?pretty&#39; -d &#39;&#123;&quot;text&quot;:&quot;我们是中国人&quot;,&quot;tokenizer&quot;:&quot;ik_max_word&quot;&#125;&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;我们&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 2,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;是&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 2,</span><br><span class="line">      &quot;end_offset&quot; : 3,</span><br><span class="line">      &quot;type&quot; : &quot;CN_CHAR&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;中国人&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 3,</span><br><span class="line">      &quot;end_offset&quot; : 6,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;中国&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 3,</span><br><span class="line">      &quot;end_offset&quot; : 5,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 3</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;国人&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 4,</span><br><span class="line">      &quot;end_offset&quot; : 6,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 4</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在这里我们发现分出来的单词里面有一个是，这个单词其实可以认为是一个停用词，在分词的时候是不需要切分出来的。</span><br><span class="line">在这被切分出来了，那也就意味着在进行停用词过滤的时候没有过滤掉。</span><br><span class="line"></span><br><span class="line">针对ik这个词库而言，它的停用词词库里面都有哪些单词呢？</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@bigdata01 elasticsearch-7.13.4]# cd config&#x2F;analysis-ik&#x2F;</span><br><span class="line">[root@bigdata01 analysis-ik]# ll</span><br><span class="line">total 8260</span><br><span class="line">-rwxrwxrwx. 1 root root 5225922 Feb 27 20:57 extra_main.dic</span><br><span class="line">-rwxrwxrwx. 1 root root   63188 Feb 27 20:57 extra_single_word.dic</span><br><span class="line">-rwxrwxrwx. 1 root root   63188 Feb 27 20:57 extra_single_word_full.dic</span><br><span class="line">-rwxrwxrwx. 1 root root   10855 Feb 27 20:57 extra_single_word_low_freq.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     156 Feb 27 20:57 extra_stopword.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     625 Feb 27 20:57 IKAnalyzer.cfg.xml</span><br><span class="line">-rwxrwxrwx. 1 root root 3058510 Feb 27 20:57 main.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     123 Feb 27 20:57 preposition.dic</span><br><span class="line">-rwxrwxrwx. 1 root root    1824 Feb 27 20:57 quantifier.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     164 Feb 27 20:57 stopword.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     192 Feb 27 20:57 suffix.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     752 Feb 27 20:57 surname.dic</span><br><span class="line">[root@bigdata01 analysis-ik]# more stopword.dic </span><br><span class="line">a</span><br><span class="line">an</span><br><span class="line">and</span><br><span class="line">are</span><br><span class="line">as</span><br><span class="line">at</span><br><span class="line">be</span><br><span class="line">but</span><br><span class="line">by</span><br><span class="line">for</span><br><span class="line">if</span><br><span class="line">in</span><br><span class="line">into</span><br><span class="line">is</span><br><span class="line">it</span><br><span class="line">no</span><br><span class="line">not</span><br><span class="line">of</span><br><span class="line">on</span><br><span class="line">or</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ik的停用词词库是stopword.dic这个文件，这个文件里面目前都是一些英文停用词。</span><br><span class="line">我们可以手工在这个文件中把中文停用词添加进去，先添加 是 这个停用词。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@bigdata01 analysis-ik]# vi stopword.dic </span><br><span class="line">.....</span><br><span class="line">是</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">然后把这个文件的改动同步到集群中的所有节点上。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 analysis-ik]# scp -rq stopword.dic bigdata02:&#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4&#x2F;config&#x2F;analysis-ik&#x2F;</span><br><span class="line">[root@bigdata01 analysis-ik]# scp -rq stopword.dic bigdata03:&#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4&#x2F;config&#x2F;analysis-ik&#x2F;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">重启集群让配置生效。</span><br><span class="line"></span><br><span class="line">再使用IK分词器测试一下中文分词效果。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 analysis-ik]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST  &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test&#x2F;_analyze?pretty&#39; -d &#39;&#123;&quot;text&quot;:&quot;我们是中国人&quot;,&quot;tokenizer&quot;:&quot;ik_max_word&quot;&#125;&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;我们&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 2,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;中国人&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 3,</span><br><span class="line">      &quot;end_offset&quot; : 6,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;中国&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 3,</span><br><span class="line">      &quot;end_offset&quot; : 5,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;国人&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 4,</span><br><span class="line">      &quot;end_offset&quot; : 6,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 3</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">此时再查看会发现没有&quot;是&quot; 这个单词了，相当于在过滤停用词的时候把它过滤掉了。</span><br></pre></td></tr></table></figure><h3 id="es-ik添加自定义词库"><a href="#es-ik添加自定义词库" class="headerlink" title="es-ik添加自定义词库"></a>es-ik添加自定义词库</h3><h4 id="自定义词库"><a href="#自定义词库" class="headerlink" title="自定义词库"></a>自定义词库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">针对一些特殊的词语在分词的时候也需要能够识别。</span><br><span class="line">例如：公司产品的名称或者网络上新流行的词语</span><br><span class="line">假设我们公司开发了一款新产品，命名为：数据大脑，我们希望ES在分词的时候能够把这个产品名称直接识别成一个词语。</span><br><span class="line">现在使用ik分词器测试一下分词效果：</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST  &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test&#x2F;_analyze?pretty&#39; -d &#39;&#123;&quot;text&quot;:&quot;数据大脑&quot;,&quot;tokenizer&quot;:&quot;ik_max_word&quot;&#125;&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;数据&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 2,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;大脑&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 2,</span><br><span class="line">      &quot;end_offset&quot; : 4,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">结果发现ik分词器会把数据大脑分为 数据 和 大脑这两个单词。</span><br><span class="line">因为这个词语是我们自己造出来的，并不是通用的词语，所以ik分词器识别不出来也属于正常。</span><br><span class="line">想要让IK分词器识别出来，就需要自定义词库了，也就是把我们自己造的词语添加到词库里面，这样在分词的时候就可以识别到了。</span><br><span class="line">下面演示一下如何在IK中自定义词库：</span><br><span class="line">1：首先在ik插件对应的配置文件目录下创建一个自定义词库文件my.dic</span><br><span class="line">首先在bigdata01节点上操作。</span><br><span class="line">切换到es用户，进入到ik插件对应的配置文件目录</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# su es</span><br><span class="line">[es@bigdata01 root]$ cd &#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4</span><br><span class="line">[es@bigdata01 elasticsearch-7.13.4]$ cd config</span><br><span class="line">[es@bigdata01 config]$ cd analysis-ik</span><br><span class="line">[es@bigdata01 analysis-ik]$ ll</span><br><span class="line">total 8260</span><br><span class="line">-rwxrwxrwx. 1 root root 5225922 Feb 27 20:57 extra_main.dic</span><br><span class="line">-rwxrwxrwx. 1 root root   63188 Feb 27 20:57 extra_single_word.dic</span><br><span class="line">-rwxrwxrwx. 1 root root   63188 Feb 27 20:57 extra_single_word_full.dic</span><br><span class="line">-rwxrwxrwx. 1 root root   10855 Feb 27 20:57 extra_single_word_low_freq.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     156 Feb 27 20:57 extra_stopword.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     625 Feb 27 20:57 IKAnalyzer.cfg.xml</span><br><span class="line">-rwxrwxrwx. 1 root root 3058510 Feb 27 20:57 main.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     123 Feb 27 20:57 preposition.dic</span><br><span class="line">-rwxrwxrwx. 1 root root    1824 Feb 27 20:57 quantifier.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     171 Feb 27 21:42 stopword.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     192 Feb 27 20:57 suffix.dic</span><br><span class="line">-rwxrwxrwx. 1 root root     752 Feb 27 20:57 surname.dic</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">创建自定义词库文件my.dic</span><br><span class="line">直接在文件中添加词语即可，每一个词语一行。</span><br><span class="line"></span><br><span class="line">[es@bigdata01 analysis-ik]$ vi my.dic</span><br><span class="line">数据大脑</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">注意：这个my.dic词库文件可以在Linux中直接使用vi命令创建，或者在Windows中创建之后上传到这里。</span><br><span class="line"></span><br><span class="line">-如果是在Linux中直接使用vi命令创建，可以直接使用。</span><br><span class="line">-如果是在Windows中创建的，需要注意文件的编码必须是UTF-8 without BOM 格式【UTF-8 无 BOM格式】</span><br><span class="line"></span><br><span class="line">以Notepad++为例：新版本的Notepad++里面的文件编码有这么几种，需要选择【使用UTF-8编码】，这个就是UTF-8 without BOM 格式。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111535279.png" alt="image-20230611153519003"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">2：修改ik的IKAnalyzer.cfg.xml配置文件</span><br><span class="line">进入到ik插件对应的配置文件目录中，修改IKAnalyzer.cfg.xml配置文件</span><br><span class="line"></span><br><span class="line">[es@bigdata01 analysis-ik]$ vi IKAnalyzer.cfg.xml </span><br><span class="line"></span><br><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE properties SYSTEM &quot;http:&#x2F;&#x2F;java.sun.com&#x2F;dtd&#x2F;properties.dtd&quot;&gt;</span><br><span class="line">&lt;properties&gt;</span><br><span class="line">        &lt;comment&gt;IK Analyzer 扩展配置&lt;&#x2F;comment&gt;</span><br><span class="line">        &lt;!--用户可以在这里配置自己的扩展字典 --&gt;</span><br><span class="line">        &lt;entry key&#x3D;&quot;ext_dict&quot;&gt;my.dic&lt;&#x2F;entry&gt;</span><br><span class="line">         &lt;!--用户可以在这里配置自己的扩展停止词字典--&gt;</span><br><span class="line">        &lt;entry key&#x3D;&quot;ext_stopwords&quot;&gt;&lt;&#x2F;entry&gt;</span><br><span class="line">        &lt;!--用户可以在这里配置远程扩展字典 --&gt;</span><br><span class="line">        &lt;!-- &lt;entry key&#x3D;&quot;remote_ext_dict&quot;&gt;words_location&lt;&#x2F;entry&gt; --&gt;</span><br><span class="line">        &lt;!--用户可以在这里配置远程扩展停止词字典--&gt;</span><br><span class="line">        &lt;!-- &lt;entry key&#x3D;&quot;remote_ext_stopwords&quot;&gt;words_location&lt;&#x2F;entry&gt;--&gt;</span><br><span class="line">&lt;&#x2F;properties&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">注意：需要把my.dic词库文件添加到key&#x3D;&quot;ext_dict&quot;这个entry中，切记不要随意新增entry，随意新增的entry是不被IK识别的，并且entry的名称也不能乱改，否则也不会识别。</span><br><span class="line"></span><br><span class="line">如果需要指定多个自定义词库文件的话需要使用分号;隔开。</span><br><span class="line">例如：&lt;entry key&#x3D;&quot;ext_dict&quot;&gt;my.dic;your.dic&lt;&#x2F;entry&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3：将修改好的IK配置文件复制到集群中的所有节点中</span><br><span class="line"></span><br><span class="line">注意：如果是多个节点的ES集群，一定要把配置远程拷贝到其他节点。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">先从bigdata01上将my.dic拷贝到bigdata02和bigdata03</span><br><span class="line"></span><br><span class="line">[es@bigdata01 analysis-ik]$ scp -rq my.dic bigdata02:&#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4&#x2F;config&#x2F;analysis-ik&#x2F;</span><br><span class="line">The authenticity of host &#39;bigdata02 (192.168.182.101)&#39; can&#39;t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:SnzVynyweeRcPIorakoDQRxFhugZp6PNIPV3agX&#x2F;bZM.</span><br><span class="line">ECDSA key fingerprint is MD5:f6:1a:48:78:64:77:89:52:c4:ad:63:82:a5:d5:57:92.</span><br><span class="line">Are you sure you want to continue connecting (yes&#x2F;no)? yes</span><br><span class="line">es@bigdata02&#39;s password: </span><br><span class="line">[es@bigdata01 analysis-ik]$ scp -rq my.dic bigdata03:&#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4&#x2F;config&#x2F;analysis-ik&#x2F;</span><br><span class="line">The authenticity of host &#39;bigdata03 (192.168.182.102)&#39; can&#39;t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:SnzVynyweeRcPIorakoDQRxFhugZp6PNIPV3agX&#x2F;bZM.</span><br><span class="line">ECDSA key fingerprint is MD5:f6:1a:48:78:64:77:89:52:c4:ad:63:82:a5:d5:57:92.</span><br><span class="line">Are you sure you want to continue connecting (yes&#x2F;no)? yes</span><br><span class="line">es@bigdata03&#39;s password:</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：因为现在使用的是普通用户es，所以在使用scp的时候需要指定目标机器的用户名（如果是root可以省略不写），并且还需要手工输入密码，因为之前是基于root用户做的免密码登录。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">再从bigdata01上将IKAnalyzer.cfg.xml拷贝到bigdata02和bigdata03</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：如果后期想增加自定义停用词库，也需要按照这个思路进行添加，只不过停用词库需要配置到 key&#x3D;&quot;ext_stopwords&quot;这个entry中。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">4：重启ES验证一下自定义词库的分词效果</span><br><span class="line"></span><br><span class="line">[es@bigdata01 elasticsearch-7.13.4]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST  &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test&#x2F;_analyze?pretty&#39; -d &#39;&#123;&quot;text&quot;:&quot;数据大脑&quot;,&quot;tokenizer&quot;:&quot;ik_max_word&quot;&#125;&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;数据大脑&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 4,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;数据&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 2,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;大脑&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 2,</span><br><span class="line">      &quot;end_offset&quot; : 4,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">现在发现数据大脑这个词语可以被识别出来了，说明自定义词库生效了。</span><br></pre></td></tr></table></figure><h4 id="热更新词库"><a href="#热更新词库" class="headerlink" title="热更新词库"></a>热更新词库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">针对前面分析的自定义词库，后期只要词库内容发生了变动，就需要重启ES才能生效，在实际工作中，频繁重启ES集群不是一个好办法</span><br><span class="line">所以ES提供了热更新词库的解决方案，在不重启ES集群的情况下识别新增的词语，这样就很方便了，也不会对线上业务产生影响。</span><br><span class="line">下面来演示一下热更新词库的使用：</span><br><span class="line">1：在bigdata04上部署HTTP服务</span><br><span class="line">在这使用tomcat作为Web容器，先下载一个tomcat 8.x版本。</span><br><span class="line">tomcat 8.0.52版本下载地址：</span><br><span class="line">https:&#x2F;&#x2F;archive.apache.org&#x2F;dist&#x2F;tomcat&#x2F;tomcat-8&#x2F;v8.0.52&#x2F;bin&#x2F;apache-tomcat-8.0.52.tar.gz</span><br><span class="line">上传到bigdata04上的&#x2F;data&#x2F;soft目录里面，并且解压</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@bigdata04 soft]# ll apache-tomcat-8.0.52.tar.gz </span><br><span class="line">-rw-r--r--. 1 root root 9435483 Sep 22  2021 apache-tomcat-8.0.52.tar.gz</span><br><span class="line">[root@bigdata04 soft]# tar -zxvf apache-tomcat-8.0.52.tar.gz</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tomcat的ROOT项目中创建一个自定义词库文件hot.dic，在文件中输入一行内容：测试</span><br><span class="line">[root@bigdata04 soft]# cd apache-tomcat-8.0.52</span><br><span class="line">[root@bigdata04 apache-tomcat-8.0.52]# cd webapps&#x2F;ROOT&#x2F;</span><br><span class="line">[root@bigdata04 ROOT]# vi hot.dic</span><br><span class="line">测试</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">启动Tomcat</span><br><span class="line"></span><br><span class="line">[root@bigdata04 ROOT]# cd &#x2F;data&#x2F;soft&#x2F;apache-tomcat-8.0.52</span><br><span class="line">[root@bigdata04 apache-tomcat-8.0.52]# bin&#x2F;startup.sh </span><br><span class="line">Using CATALINA_BASE:   &#x2F;data&#x2F;soft&#x2F;apache-tomcat-8.0.52</span><br><span class="line">Using CATALINA_HOME:   &#x2F;data&#x2F;soft&#x2F;apache-tomcat-8.0.52</span><br><span class="line">Using CATALINA_TMPDIR: &#x2F;data&#x2F;soft&#x2F;apache-tomcat-8.0.52&#x2F;temp</span><br><span class="line">Using JRE_HOME:        &#x2F;data&#x2F;soft&#x2F;jdk1.8</span><br><span class="line">Using CLASSPATH:       &#x2F;data&#x2F;soft&#x2F;apache-tomcat-8.0.52&#x2F;bin&#x2F;bootstrap.jar:&#x2F;data&#x2F;soft&#x2F;apache-tomcat-8.0.52&#x2F;bin&#x2F;tomcat-juli.jar</span><br><span class="line">Tomcat started.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">验证一下hot.dic文件是否可以通过浏览器访问：</span><br></pre></td></tr></table></figure><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111553223.png" alt="image-20230611155315334"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">注意：页面会显示乱码，这是正常的，不用处理即可。</span><br><span class="line"></span><br><span class="line">2：修改ES集群中ik插件的IKAnalyzer.cfg.xml配置文件</span><br><span class="line">在bigdata01上修改。</span><br><span class="line">在key&#x3D;&quot;remote_ext_dict&quot;这个entry中添加hot.dic的远程访问链接</span><br><span class="line">http:&#x2F;&#x2F;bigdata04:8080&#x2F;hot.dic</span><br><span class="line"></span><br><span class="line">注意：一定要记得去掉key&#x3D;&quot;remote_ext_dict&quot;这个entry外面的注释，否则添加的内容是不生效的。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[es@bigdata01 analysis-ik]$ vi IKAnalyzer.cfg.xml </span><br><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE properties SYSTEM &quot;http:&#x2F;&#x2F;java.sun.com&#x2F;dtd&#x2F;properties.dtd&quot;&gt;</span><br><span class="line">&lt;properties&gt;</span><br><span class="line">        &lt;comment&gt;IK Analyzer 扩展配置&lt;&#x2F;comment&gt;</span><br><span class="line">        &lt;!--用户可以在这里配置自己的扩展字典 --&gt;</span><br><span class="line">        &lt;entry key&#x3D;&quot;ext_dict&quot;&gt;my.dic&lt;&#x2F;entry&gt;</span><br><span class="line">         &lt;!--用户可以在这里配置自己的扩展停止词字典--&gt;</span><br><span class="line">        &lt;entry key&#x3D;&quot;ext_stopwords&quot;&gt;&lt;&#x2F;entry&gt;</span><br><span class="line">        &lt;!--用户可以在这里配置远程扩展字典 --&gt;</span><br><span class="line">        &lt;entry key&#x3D;&quot;remote_ext_dict&quot;&gt;http:&#x2F;&#x2F;bigdata04:8080&#x2F;hot.dic&lt;&#x2F;entry&gt; </span><br><span class="line">        &lt;!--用户可以在这里配置远程扩展停止词字典--&gt;</span><br><span class="line">        &lt;!-- &lt;entry key&#x3D;&quot;remote_ext_stopwords&quot;&gt;words_location&lt;&#x2F;entry&gt;--&gt;</span><br><span class="line">&lt;&#x2F;properties&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3：将修改好的IK配置文件复制到集群中的所有节点中</span><br><span class="line"></span><br><span class="line">4：重启ES集群验证效果。</span><br><span class="line">因为修改了配置，所以需要重启集群。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">验证：</span><br><span class="line">对北京雾霾这个词语进行分词</span><br><span class="line"></span><br><span class="line">[es@bigdata01 elasticsearch-7.13.4]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST  &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test&#x2F;_analyze?pretty&#39; -d &#39;&#123;&quot;text&quot;:&quot;北京雾霾&quot;,&quot;tokenizer&quot;:&quot;ik_max_word&quot;&#125;&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;北京&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 2,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;雾&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 2,</span><br><span class="line">      &quot;end_offset&quot; : 3,</span><br><span class="line">      &quot;type&quot; : &quot;CN_CHAR&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;霾&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 3,</span><br><span class="line">      &quot;end_offset&quot; : 4,</span><br><span class="line">      &quot;type&quot; : &quot;CN_CHAR&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">正常情况下 北京雾霾 会被分被拆分为多个词语，但是在这我希望ES能够把 北京雾霾 认为是一个完整的词语，又不希望重启ES。</span><br><span class="line">这样就可以修改前面配置的hot.dic文件，在里面增加一个词语：北京雾霾</span><br><span class="line">在bigdata04里面操作，此时可以在Linux中直接编辑文件。</span><br><span class="line"></span><br><span class="line">[root@bigdata04 apache-tomcat-8.0.52]# cd webapps&#x2F;ROOT&#x2F;</span><br><span class="line">[root@bigdata04 ROOT]# vi hot.dic </span><br><span class="line">测试</span><br><span class="line">北京雾霾</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">文件保存之后，在bigdata01上查看ES的日志会看到如下日志信息：</span><br><span class="line">[2027-03-09T18:43:12,700][INFO ][o.w.a.d.Dictionary       ] [bigdata01] start to reload ik dict.</span><br><span class="line">[2027-03-09T18:43:12,701][INFO ][o.w.a.d.Dictionary       ] [bigdata01] try load config from &#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4&#x2F;config&#x2F;analysis-ik&#x2F;IKAnalyzer.cfg.xml</span><br><span class="line">[2027-03-09T18:43:12,929][INFO ][o.w.a.d.Dictionary       ] [bigdata01] [Dict Loading] &#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4&#x2F;config&#x2F;analysis-ik&#x2F;my.dic</span><br><span class="line">[2027-03-09T18:43:12,929][INFO ][o.w.a.d.Dictionary       ] [bigdata01] [Dict Loading] http:&#x2F;&#x2F;bigdata04:8080&#x2F;hot.dic</span><br><span class="line">[2027-03-09T18:43:12,934][INFO ][o.w.a.d.Dictionary       ] [bigdata01] ﻿测试</span><br><span class="line">[2027-03-09T18:43:12,935][INFO ][o.w.a.d.Dictionary       ] [bigdata01] 北京雾霾</span><br><span class="line">[2027-03-09T18:43:12,935][INFO ][o.w.a.d.Dictionary       ] [bigdata01] reload ik dict finished.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">再对北京雾霾这个词语进行分词</span><br><span class="line"></span><br><span class="line">[es@bigdata01 elasticsearch-7.13.4]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST  &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test&#x2F;_analyze?pretty&#39; -d &#39;&#123;&quot;text&quot;:&quot;北京雾霾&quot;,&quot;tokenizer&quot;:&quot;ik_max_word&quot;&#125;&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;北京雾霾&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 4,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;北京&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 2,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;雾&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 2,</span><br><span class="line">      &quot;end_offset&quot; : 3,</span><br><span class="line">      &quot;type&quot; : &quot;CN_CHAR&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;霾&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 3,</span><br><span class="line">      &quot;end_offset&quot; : 4,</span><br><span class="line">      &quot;type&quot; : &quot;CN_CHAR&quot;,</span><br><span class="line">      &quot;position&quot; : 3</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">此时，发现北京雾霾这个词语就可以完整被切分出来了，到这为止，我们就成功实现了热更新自定义词库的功能。</span><br><span class="line"></span><br><span class="line">注意：默认情况下，最多一分钟之内就可以识别到新增的词语。</span><br><span class="line">通过查看es-ik插件的源码可以发现</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;medcl&#x2F;elasticsearch-analysis-ik&#x2F;blob&#x2F;master&#x2F;src&#x2F;main&#x2F;java&#x2F;org&#x2F;wltea&#x2F;analyzer&#x2F;dic&#x2F;Monitor.java</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111559457.png" alt="image-20230611155917849"></p><h2 id="4-Elasticsearch查询详解"><a href="#4-Elasticsearch查询详解" class="headerlink" title="4 Elasticsearch查询详解"></a>4 Elasticsearch查询详解</h2><h3 id="ES-Search查询"><a href="#ES-Search查询" class="headerlink" title="ES Search查询"></a>ES Search查询</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在ES中查询单条数据可以使用Get，想要查询一批满足条件的数据的话，就需要使用Search了。</span><br><span class="line">下面来看一个案例，查询索引库中的所有数据，代码如下：</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.es;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpHost;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.search.SearchRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.search.SearchResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RequestOptions;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestHighLevelClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.SearchHit;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.SearchHits;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Search详解</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EsSearchOp</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//获取RestClient连接</span></span><br><span class="line">        RestHighLevelClient client = <span class="keyword">new</span> RestHighLevelClient(</span><br><span class="line">                RestClient.builder(</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata01"</span>, <span class="number">9200</span>, <span class="string">"http"</span>),</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata02"</span>, <span class="number">9200</span>, <span class="string">"http"</span>),</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata03"</span>, <span class="number">9200</span>, <span class="string">"http"</span>)));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        SearchRequest searchRequest = <span class="keyword">new</span> SearchRequest();</span><br><span class="line">        <span class="comment">//指定索引库，支持指定一个或者多个，也支持通配符，例如：user*</span></span><br><span class="line">        searchRequest.indices(<span class="string">"user"</span>);</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">//过滤条件</span></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">//执行查询操作</span></span><br><span class="line">        SearchResponse searchResponse = client.search(searchRequest, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取查询返回的结果</span></span><br><span class="line">        SearchHits hits = searchResponse.getHits();</span><br><span class="line">        <span class="comment">//获取数据总量</span></span><br><span class="line">        <span class="keyword">long</span> numHits = hits.getTotalHits().value;</span><br><span class="line">        System.out.println(<span class="string">"数据总数："</span>+numHits);</span><br><span class="line">        <span class="comment">//获取具体内容</span></span><br><span class="line">        SearchHit[] searchHits = hits.getHits();</span><br><span class="line">        <span class="comment">//迭代解析具体内容</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : searchHits) &#123;</span><br><span class="line">            String sourceAsString = hit.getSourceAsString();</span><br><span class="line">            System.out.println(sourceAsString);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭连接</span></span><br><span class="line">        client.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">在执行代码之前先初始化数据：</span><br><span class="line">[root@bigdata01 ~]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;user&#x2F;_doc&#x2F;1&#39; -d &#39;&#123;&quot;name&quot;:&quot;tom&quot;,&quot;age&quot;:20&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;user&#x2F;_doc&#x2F;2&#39; -d &#39;&#123;&quot;name&quot;:&quot;tom&quot;,&quot;age&quot;:15&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;user&#x2F;_doc&#x2F;3&#39; -d &#39;&#123;&quot;name&quot;:&quot;jack&quot;,&quot;age&quot;:17&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;user&#x2F;_doc&#x2F;4&#39; -d &#39;&#123;&quot;name&quot;:&quot;jess&quot;,&quot;age&quot;:19&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;user&#x2F;_doc&#x2F;5&#39; -d &#39;&#123;&quot;name&quot;:&quot;mick&quot;,&quot;age&quot;:23&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;user&#x2F;_doc&#x2F;6&#39; -d &#39;&#123;&quot;name&quot;:&quot;lili&quot;,&quot;age&quot;:12&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;user&#x2F;_doc&#x2F;7&#39; -d &#39;&#123;&quot;name&quot;:&quot;john&quot;,&quot;age&quot;:28&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;user&#x2F;_doc&#x2F;8&#39; -d &#39;&#123;&quot;name&quot;:&quot;jojo&quot;,&quot;age&quot;:30&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;user&#x2F;_doc&#x2F;9&#39; -d &#39;&#123;&quot;name&quot;:&quot;bubu&quot;,&quot;age&quot;:16&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;user&#x2F;_doc&#x2F;10&#39; -d &#39;&#123;&quot;name&quot;:&quot;pig&quot;,&quot;age&quot;:21&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;user&#x2F;_doc&#x2F;11&#39; -d &#39;&#123;&quot;name&quot;:&quot;mary&quot;,&quot;age&quot;:19&#125;&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">在IDEA中执行代码，可以看到下面结果：</span><br><span class="line">数据总数：11</span><br><span class="line">&#123;&quot;name&quot;:&quot;tom&quot;,&quot;age&quot;:20&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;tom&quot;,&quot;age&quot;:15&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;jack&quot;,&quot;age&quot;:17&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;jess&quot;,&quot;age&quot;:19&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;mick&quot;,&quot;age&quot;:23&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;lili&quot;,&quot;age&quot;:12&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;john&quot;,&quot;age&quot;:28&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;jojo&quot;,&quot;age&quot;:30&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;bubu&quot;,&quot;age&quot;:16&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;pig&quot;,&quot;age&quot;:21&#125;</span><br><span class="line"></span><br><span class="line">显示数据总数有11条，但是下面的明细内容只有10条，这是因为ES默认只会返回10条数据，如果默认返回所有满足条件的数据，对ES的压力就比较大了。</span><br></pre></td></tr></table></figure><h3 id="searchType详解"><a href="#searchType详解" class="headerlink" title="searchType详解"></a>searchType详解</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ES在查询数据的时候可以指定searchType，也就是搜索类型</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;指定searchType</span><br><span class="line">searchRequest.searchType(SearchType.QUERY_THEN_FETCH);</span><br><span class="line"></span><br><span class="line">searchType之前是可以指定为下面这4种：</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111606352.png" alt="image-20230611160600236"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">其中QUERY AND FETCH和DFS QUERY AND FETCH这两种searchType现在已经不支持了。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">这4种搜索类型到底有什么区别，下面我们来详细分析一下：</span><br><span class="line"></span><br><span class="line">在具体分析这4种搜索类型的区别之前，我们先分析一下分布式搜索的背景：</span><br><span class="line">ES天生就是为分布式而生的，但分布式有分布式的缺点，比如要搜索某个单词，但是数据却分别在5个分片（Shard)上面，这5个分片可能在5台主机上面。因为全文搜索天生就要排序（按照匹配度进行排名）,但数据却在5个分片上，如何得到最后正确的排序呢？ES是这样做的，大概分两步。</span><br><span class="line">第1步：ES客户端将会同时向5个分片发起搜索请求。</span><br><span class="line">第2步：这5个分片基于本分片的内容独立完成搜索，然后将符合条件的结果全部返回。</span><br><span class="line">大致流程如下图所示：</span><br></pre></td></tr></table></figure><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111613627.png" alt="image-20230611161344874" style="zoom: 50%;"><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111614039.png" alt="image-20230611161408321" style="zoom:50%;"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">然而这其中有两个问题。</span><br><span class="line">第一：数量问题。比如，用户需要搜索&quot;衣服&quot;，要求返回符合条件的前10条。但在5个分片中，可能都存储着衣服相关的数据。所以ES会向这5个分片都发出查询请求，并且要求每个分片都返回符合条件的10条记录。这种情况，ES中5个分片最多会收到10*5&#x3D;50条记录，这样返回给用户的结果数量会多于用户请求的数量。</span><br><span class="line">第二：排名问题。上面说的搜索，每个分片计算符合条件的前10条数据都是基于自己分片的数据进行打分计算的。计算分值使用的词频和文档频率等信息都是基于自己分片的数据进行的，而ES进行整体排名是基于每个分片计算后的分值进行排序的(相当于打分依据就不一样，最终对这些数据统一排名的时候就不准确了)，这就可能会导致排名不准确的问题。如果我们想更精确的控制排序，应该先将计算排序和排名相关的信息（词频和文档频率等打分依据）从5个分片收集上来，进行统一计算，然后使用整体的词频和文档频率为每个分片中的数据进行打分，这样打分依据就一样了。</span><br><span class="line"></span><br><span class="line">再举个例子解释一下【排名问题】：</span><br><span class="line">假设某学校有一班和二班两个班级。</span><br><span class="line">期末考试之后，学校要给全校前十名学员发奖金。</span><br><span class="line">但是一班和二班考试的时候使用的不是一套试卷。</span><br><span class="line">一班：使用的是A卷【A卷偏容易】</span><br><span class="line">二班：使用的是B卷【B卷偏难】</span><br><span class="line">结果就是一班的最高分是100分，最低分是80分。</span><br><span class="line">二班的最高分是70分，最低分是30分。</span><br><span class="line"></span><br><span class="line">这样全校前十名就都是一班的学员了。这显然是不合理的。</span><br><span class="line">因为一班和二班的试卷难易程度不一样，也就是打分依据不一样，所以不能放在一块排名，这个就解释了刚才的排名问题。</span><br><span class="line">如果想要保证排名准确的话，需要保证一班和二班使用的试卷内容一样。</span><br><span class="line">可以这样做，把A卷和B卷的内容组合到一块，作为C卷。</span><br><span class="line">一班和二班考试都使用C卷，这样他们的打分依据就一样了，最终再根据所有学员的成绩排名求前十名就准确合理了。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这两个问题，ES也没有什么较好的解决方法，最终把选择的权利交给用户，方法就是在搜索的时候指定searchType。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">1.QUERY AND FETCH(淘汰)</span><br><span class="line">向索引的所有分片都发出查询请求，各分片返回的时候把元素文档（document）和计算后的排名信息一起返回。</span><br><span class="line">这种搜索方式是最快的。因为相比下面的几种搜索方式，这种查询方法只需要去分片查询一次。但是各个分片返回的结果的数量之和可能是用户要求的数据量的N倍。</span><br><span class="line">优点：</span><br><span class="line">只需要查询一次</span><br><span class="line">缺点：</span><br><span class="line">返回的数据量不准确，可能返回(N*分片数量)的数据</span><br><span class="line">并且数据排名也不准确</span><br><span class="line"></span><br><span class="line">2.QUERY THEN FETCH（ES默认的搜索方式）</span><br><span class="line">如果你搜索时，没有指定搜索方式，就是使用的这种搜索方式。这种搜索方式，大概分两个步骤，</span><br><span class="line">第一步，先向所有的分片发出请求，各分片只返回文档id(注意，不包括文档document)和排名相关的信息(也就是文档对应的分值)，然后按照各分片返回的文档的分数进行重新排序和排名，取前size个文档。</span><br><span class="line">第二步，根据文档id去相关的分片取文档。这种方式返回的文档数量与用户要求的数量是相等的。</span><br><span class="line">优点：</span><br><span class="line">返回的数据量是准确的</span><br><span class="line">缺点：</span><br><span class="line">性能一般，</span><br><span class="line">并且数据排名不准确</span><br><span class="line"></span><br><span class="line">3.DFS QUERY AND FETCH(淘汰)</span><br><span class="line">这种方式比第一种方式多了一个DFS步骤，有这一步，可以更精确控制搜索打分和排名。</span><br><span class="line">也就是在进行查询之前，先对所有分片发送请求，把所有分片中的词频和文档频率等打分依据全部汇总到一块，再执行后面的操作、</span><br><span class="line">优点：</span><br><span class="line">数据排名准确</span><br><span class="line">缺点：</span><br><span class="line">性能一般</span><br><span class="line">返回的数据量不准确，可能返回(N*分片数量)的数据</span><br><span class="line"></span><br><span class="line">4.DFS QUERY THEN FETCH</span><br><span class="line">比第2种方式多了一个DFS步骤。</span><br><span class="line">也就是在进行查询之前，先对所有分片发送请求，把所有分片中的词频和文档频率等打分依据全部汇总到一块，再执行后面的操作、</span><br><span class="line">优点：</span><br><span class="line">返回的数据量是准确的</span><br><span class="line">数据排名准确</span><br><span class="line">缺点：</span><br><span class="line">性能最差【这个最差只是表示在这四种查询方式中性能最慢，也不至于不能忍受，如果对查询性能要求不是非常高，而对查询准确度要求比较高的时候可以考虑这个】</span><br></pre></td></tr></table></figure><h3 id="DFS是一个什么样的过程？"><a href="#DFS是一个什么样的过程？" class="headerlink" title="DFS是一个什么样的过程？"></a>DFS是一个什么样的过程？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DFS其实就是在进行真正的查询之前，先把各个分片的词频率和文档频率收集一下，然后进行词搜索的时候，各分片依据全局的词频率和文档频率进行搜索和排名。显然如果使用DFS_QUERY_THEN_FETCH这种查询方式，效率是最低的，因为一个搜索，可能要请求3次分片。但使用DFS方法，搜索精度是最高的。</span><br><span class="line"></span><br><span class="line">总结一下，从性能考虑QUERY_AND_FETCH是最快的，DFS_QUERY_THEN_FETCH是最慢的。从搜索的准确度来说，DFS要比非DFS的准确度更高。</span><br><span class="line"></span><br><span class="line">目前官方舍弃了QUERY AND FETCH和DFS QUERY AND FETCH这两种类型，保留了QUERY THEN FETCH和DFS QUERY THEN FETCH，这两种都是可以保证数据量是准确的。如果对查询的精确度要求没那么高，就使用QUERY THEN FETCH，如果对查询数据的精确度要求非常高，就使用DFS QUERY THEN FETCH。</span><br></pre></td></tr></table></figure><h3 id="ES-查询扩展"><a href="#ES-查询扩展" class="headerlink" title="ES 查询扩展"></a>ES 查询扩展</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在查询数据的时候可以在searchRequest中指定一些参数，实现过滤、分页、排序、高亮等功能</span><br></pre></td></tr></table></figure><h4 id="EsSearchOp"><a href="#EsSearchOp" class="headerlink" title="EsSearchOp"></a>EsSearchOp</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.es;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpHost;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.search.SearchRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.search.SearchResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RequestOptions;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestHighLevelClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.text.Text;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.index.query.Operator;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.index.query.QueryBuilders;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.SearchHit;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.SearchHits;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.builder.SearchSourceBuilder;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilder;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.fetch.subphase.highlight.HighlightField;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.sort.SortOrder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Search详解</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EsSearchOp</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//获取RestClient连接</span></span><br><span class="line">        RestHighLevelClient client = <span class="keyword">new</span> RestHighLevelClient(</span><br><span class="line">                RestClient.builder(</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata01"</span>,<span class="number">9200</span>,<span class="string">"http"</span>),</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata02"</span>,<span class="number">9200</span>,<span class="string">"http"</span>),</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata03"</span>,<span class="number">9200</span>,<span class="string">"http"</span>)));</span><br><span class="line">        SearchRequest searchRequest = <span class="keyword">new</span> SearchRequest();</span><br><span class="line">        <span class="comment">//指定索引库，支持指定一个或者多个，也支持通配符，例如：user*</span></span><br><span class="line">        searchRequest.indices(<span class="string">"user"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//指定查询条件</span></span><br><span class="line">        SearchSourceBuilder searchSourceBuilder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        <span class="comment">//查询所有，可以不指定，默认就是查询索引库中的所有数据</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.matchAllQuery());</span></span><br><span class="line">        <span class="comment">//对指定字段的值进行过滤，注意：在查询数据的时候会对数据进行分词</span></span><br><span class="line">        <span class="comment">//如果指定多个query，后面的query会覆盖前面的query</span></span><br><span class="line">        <span class="comment">//针对字符串类型内容的查询，不支持通配符</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.matchQuery("name","tom"));</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.matchQuery("age","17"));//针对age的值，这里可以指定字符串或者数字都可以</span></span><br><span class="line">        <span class="comment">//针对字符串类型内容的查询，支持通配符，但是性能较差，可以认为是全表扫描</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.wildcardQuery("name","t*"));</span></span><br><span class="line">        <span class="comment">//区间查询，主要针对数据类型，可以使用from+to 或者gt,gte+lt,lte</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.rangeQuery("age").from(0).to(20));</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.rangeQuery("age").gte(0).lte(20));</span></span><br><span class="line">        <span class="comment">//不限制边界，指定为null即可</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.rangeQuery("age").from(0).to(null));</span></span><br><span class="line">        <span class="comment">//同时指定多个条件，条件之间的关系支持and(must)、or(should)</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.boolQuery().should(QueryBuilders.matchQuery("name","tom")).should(QueryBuilders.matchQuery("age",19)));</span></span><br><span class="line">        <span class="comment">//多条件组合查询的时候，可以设置条件的权重值，将满足高权重值条件的数据排到结果列表的前面</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.boolQuery().should(QueryBuilders.matchQuery("name","tom").boost(1.0f)).should(QueryBuilders.matchQuery("age",19).boost(5.0f)));</span></span><br><span class="line">        <span class="comment">//对多个指定字段的值进行过滤，注意：多个字段的数据类型必须一致，否则会报错，如果查询的字段不存在不会报错</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.multiMatchQuery("tom","name","tag"));</span></span><br><span class="line">        <span class="comment">//这里通过queryStringQuery可以支持Lucene的原生查询语法，更加灵活，注意：AND、OR、TO之类的关键字必须大写</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.queryStringQuery("name:tom AND age:[15 TO 30]"));</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.boolQuery().must(QueryBuilders.matchQuery("name","tom")).must(QueryBuilders.rangeQuery("age").from(15).to(30)));</span></span><br><span class="line">        <span class="comment">//queryStringQuery支持通配符，但是性能也是比较差</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.queryStringQuery("name:t*"));</span></span><br><span class="line">        <span class="comment">//精确查询，查询的时候不分词，针对人名、手机号、主机名、邮箱号码等字段的查询时一般不需要分词</span></span><br><span class="line">        <span class="comment">//初始化一条测试数据name=刘德华，默认情况下在建立索引的时候刘德华 会被切分为刘、德、华这三个词</span></span><br><span class="line">        <span class="comment">//所以这里精确查询是查不出来的，使用matchQuery是可以查出来的</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.matchQuery("name","刘德华"));</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.termQuery("name","刘德华"));</span></span><br><span class="line">        <span class="comment">//正常情况下想要使用termQuery实现精确查询的字段不能进行分词</span></span><br><span class="line">        <span class="comment">//但是有时候会遇到某个字段已经分词建立索引了，后期还想要实现精确查询</span></span><br><span class="line">        <span class="comment">//重新建立索引也不现实，怎么办呢？</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.queryStringQuery("name:\"刘德华\""));</span></span><br><span class="line">        <span class="comment">//matchQuery默认会根据分词的结果进行 or 操作，满足任意一个词语的数据都会查询出来</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.matchQuery("name","刘德华"));</span></span><br><span class="line">        <span class="comment">//如果想要对matchQuery的分词结果实现and操作，可以通过operator进行设置</span></span><br><span class="line">        <span class="comment">//这种方式也可以解决某个字段已经分词建立索引了，后期还想要实现精确查询的问题（间接实现，其实是查询了满足刘、德、华这三个词语的内容）</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.matchQuery("name","刘德华").operator(Operator.AND));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//高亮查询name字段</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.matchQuery("name","tom"));</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.matchQuery("name","刘德华"));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//分页</span></span><br><span class="line">        <span class="comment">//设置每页的起始位置，默认是0</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.from(0);</span></span><br><span class="line">        <span class="comment">//设置每页的数据量，默认是10</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.size(10);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//排序</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.sort("age", SortOrder.DESC);</span></span><br><span class="line">        <span class="comment">//注意：age字段是数字类型，不需要分词，name字段是字符串类型（Text），默认会被分词，所以不支持排序和聚合操作</span></span><br><span class="line">        <span class="comment">//如果想要根据这些会被分词的字段进行排序或者聚合，需要指定使用他们的keyword类型，这个类型表示不会对数据分词</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.sort("name.keyword",SortOrder.DESC);</span></span><br><span class="line">        <span class="comment">//keyword类型的特性其实也适用于精确查询的场景，可以在matchQuery中指定字段的keyword类型实现精确查询，不管在建立索引的时候有没有被分词都不影响使用</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.matchQuery("name.keyword","刘德华"));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//高亮</span></span><br><span class="line">        <span class="comment">//设置高亮字段</span></span><br><span class="line">        HighlightBuilder highlightBuilder = <span class="keyword">new</span> HighlightBuilder()</span><br><span class="line">                .field(<span class="string">"name"</span>);<span class="comment">//支持多个高亮字段，使用多个field方法指定即可</span></span><br><span class="line">        <span class="comment">//设置高亮字段的前缀和后缀内容</span></span><br><span class="line">        highlightBuilder.preTags(<span class="string">"&lt;font color='red'&gt;"</span>);</span><br><span class="line">        highlightBuilder.postTags(<span class="string">"&lt;/font&gt;"</span>);</span><br><span class="line">        searchSourceBuilder.highlighter(highlightBuilder);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        searchRequest.source(searchSourceBuilder);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//执行查询操作</span></span><br><span class="line">        SearchResponse searchResponse = client.search(searchRequest, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取查询返回的结果</span></span><br><span class="line">        SearchHits hits = searchResponse.getHits();</span><br><span class="line">        <span class="comment">//获取数据总量</span></span><br><span class="line">        <span class="keyword">long</span> numHits = hits.getTotalHits().value;</span><br><span class="line">        System.out.println(<span class="string">"数据总数："</span>+numHits);</span><br><span class="line">        <span class="comment">//获取具体内容</span></span><br><span class="line">        SearchHit[] searchHits = hits.getHits();</span><br><span class="line">        <span class="comment">//迭代解析具体内容</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : searchHits) &#123;</span><br><span class="line">            <span class="comment">/*String sourceAsString = hit.getSourceAsString();</span></span><br><span class="line"><span class="comment">            System.out.println(sourceAsString);*/</span></span><br><span class="line">            Map&lt;String, Object&gt; sourceAsMap = hit.getSourceAsMap();</span><br><span class="line">            String name = sourceAsMap.get(<span class="string">"name"</span>).toString();</span><br><span class="line">            <span class="keyword">int</span> age = Integer.parseInt(sourceAsMap.get(<span class="string">"age"</span>).toString());</span><br><span class="line">            <span class="comment">//获取高亮字段内容</span></span><br><span class="line">            Map&lt;String, HighlightField&gt; highlightFields = hit.getHighlightFields();</span><br><span class="line">            <span class="comment">//获取name字段的高亮内容</span></span><br><span class="line">            HighlightField highlightField = highlightFields.get(<span class="string">"name"</span>);</span><br><span class="line">            <span class="keyword">if</span>(highlightField!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                Text[] fragments = highlightField.getFragments();</span><br><span class="line">                name = <span class="string">""</span>;</span><br><span class="line">                <span class="keyword">for</span> (Text text: fragments) &#123;</span><br><span class="line">                    name += text;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取最终的结果数据</span></span><br><span class="line">            System.out.println(name+<span class="string">"---"</span>+age);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//关闭连接</span></span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">首先看一下如何在查询的时候指定过滤条件</span><br><span class="line">核心代码如下：</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指定查询条件</span></span><br><span class="line">SearchSourceBuilder searchSourceBuilder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line"><span class="comment">//查询所有，可以不指定，默认就是查询索引库中的所有数据</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.matchAllQuery());</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对指定字段的值进行过滤，注意：在查询数据的时候会对数据进行分词</span></span><br><span class="line"><span class="comment">//如果指定多个query，后面的query会覆盖前面的query</span></span><br><span class="line"><span class="comment">//针对字符串(数字)类型内容的查询，不支持通配符</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.matchQuery("name","tom"));</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.matchQuery("age","17"));//针对age的值，这里可以指定字符串或者数字都可以</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//针对字符串类型内容的查询，支持通配符，但是性能较差，可以认为是全表扫描</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.wildcardQuery("name","t*"));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//区间查询，主要针对数据类型，可以使用from+to 或者gt,gte+lt,lte</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.rangeQuery("age").from(0).to(20));</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.rangeQuery("age").gte(0).lte(20));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//不限制边界，指定为null即可</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.rangeQuery("age").from(0).to(null));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//同时指定多个条件，条件之间的关系支持and(must)、or(should)</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.boolQuery().should(QueryBuilders.matchQuery("name","tom")).should(QueryBuilders.matchQuery("age",19)));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//多条件组合查询的时候，可以设置条件的权重值，将满足高权重值条件的数据排到结果列表的前面</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.boolQuery().should(QueryBuilders.matchQuery("name","tom").boost(1.0f)).should(QueryBuilders.matchQuery("age",19).boost(5.0f)));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对多个指定字段的值进行过滤，注意：多个字段的数据类型必须一致，否则会报错，如果查询的字段不存在不会报错</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.multiMatchQuery("tom","name","tag")); // tag字段不存在</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//这里通过queryStringQuery可以支持Lucene的原生查询语法，更加灵活，注意：AND、OR、TO之类的关键字必须大写</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.queryStringQuery("name:tom AND age:[15 TO 30]"));</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.boolQuery().must(QueryBuilders.matchQuery("name","tom")).must(QueryBuilders.rangeQuery("age").from(15).to(30)));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//queryStringQuery支持通配符，但是性能也是比较差</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.queryStringQuery("name:t*"));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//精确查询(查询时不分词)，查询的时候不分词，针对人名、手机号、主机名、邮箱号码等字段的查询时一般不需要分词</span></span><br><span class="line"><span class="comment">//初始化一条测试数据name=刘德华，默认情况下在建立索引的时候(这是建立索引，还没字段的分词器，还是默认的)刘德华 会被切分为刘、德、华这三个词</span></span><br><span class="line"><span class="comment">//所以这里精确查询是查不出来的，使用matchQuery是可以查出来的</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.matchQuery("name","刘德华"));</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.termQuery("name","刘德华"));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//正常情况下想要使用termQuery实现精确查询的字段不能进行分词</span></span><br><span class="line"><span class="comment">//但是有时候会遇到某个字段已经分词建立索引了，后期还想要实现精确查询</span></span><br><span class="line"><span class="comment">//重新建立索引也不现实，怎么办呢？</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.queryStringQuery("name:\"刘德华\"")); //这里里面是转义字符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//matchQuery默认会根据分词的结果进行 or 操作，满足任意一个词语的数据都会查询出来</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.matchQuery("name","刘德华"));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果想要对matchQuery的分词结果实现and操作，可以通过operator进行设置</span></span><br><span class="line"><span class="comment">//这种方式也可以解决某个字段已经分词建立索引了，后期还想要实现精确查询的问题（间接实现，其实是查询了满足刘、德、华这三个词语的内容）</span></span><br><span class="line"><span class="comment">//searchSourceBuilder.query(QueryBuilders.matchQuery("name","刘德华").operator(Operator.AND));</span></span><br><span class="line"></span><br><span class="line">searchRequest.source(searchSourceBuilder);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">带权重</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306132345436.png" alt="image-20230613234458201"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用match，还是模糊查询</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306132358298.png" alt="image-20230613235809923"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termQuery，查不到结果，因为他直接拿“刘德华”去查询，索引库里没有</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306140001201.png" alt="image-20230614000114276"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">利用queryStringQuery实现精准查询</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306140003432.png" alt="image-20230614000332868"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">默认情况下ES会对刘德华这个词语进行分词，效果如下（使用的默认分词器）：</span><br><span class="line">[root@bigdata01 ~]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST  &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;emp&#x2F;_analyze?pretty&#39; -d &#39;&#123;&quot;text&quot;:&quot;刘德华&quot;&#125;&#39;      </span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;刘&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 1,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;德&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 1,</span><br><span class="line">      &quot;end_offset&quot; : 2,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;华&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 2,</span><br><span class="line">      &quot;end_offset&quot; : 3,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">初始化数据：</span><br><span class="line">[root@bigdata01 ~]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;user&#x2F;_doc&#x2F;12&#39; -d &#39;&#123;&quot;name&quot;:&quot;刘德华&quot;,&quot;age&quot;:60&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]$ curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;user&#x2F;_doc&#x2F;13&#39; -d &#39;&#123;&quot;name&quot;:&quot;刘老二&quot;,&quot;age&quot;:20&#125;&#39;</span><br></pre></td></tr></table></figure><h4 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ES每次返回的数据默认最多是10条，可以认为是一页的数据，这个数据量是可以控制的</span><br><span class="line">核心代码如下：</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;分页</span><br><span class="line">&#x2F;&#x2F;设置每页的起始位置，默认是0</span><br><span class="line">&#x2F;&#x2F;searchSourceBuilder.from(0);</span><br><span class="line">&#x2F;&#x2F;设置每页的数据量，默认是10</span><br><span class="line">&#x2F;&#x2F;searchSourceBuilder.size(10);</span><br></pre></td></tr></table></figure><h4 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">在返回满足条件的结果之前，可以按照指定的要求对数据进行排序，默认是按照搜索条件的匹配度返回数据的。(默认情况下，查询关键字的匹配度越高越靠前)</span><br><span class="line">核心代码如下：</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;排序</span><br><span class="line">&#x2F;&#x2F;按照age字段，倒序排序</span><br><span class="line">&#x2F;&#x2F;searchSourceBuilder.sort(&quot;age&quot;, SortOrder.DESC);</span><br><span class="line">&#x2F;&#x2F;注意：age字段是数字类型，不需要分词，name字段是字符串类型(Text)，默认会被分词，所以不支持排序和聚合操作</span><br><span class="line">&#x2F;&#x2F;如果想要根据这些会被分词的字段进行排序或者聚合，需要指定使用他们的keyword类型，这个类型表示不会对数据分词(ES默认会对字符串类型数据，建立两份索引，一份分词，一份部分词)</span><br><span class="line">&#x2F;&#x2F;searchSourceBuilder.sort(&quot;name.keyword&quot;, SortOrder.DESC);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;keyword类型的特性其实也适用于精确查询的场景，可以在matchQuery中指定字段的keyword类型实现精确查询，不管在建立索引的时候有没有被分词都不影响使用</span><br><span class="line">&#x2F;&#x2F;searchSourceBuilder.query(QueryBuilders.matchQuery(&quot;name.keyword&quot;, &quot;刘德华&quot;));</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">match实现精确查询</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306140026183.png" alt="image-20230614002640823"></p><h4 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">针对用户搜索时的关键词，如果匹配到了，最终在页面展现的时候可以标红高亮显示，看起来比较清晰。</span><br><span class="line">设置高亮的核心代码如下：</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;高亮</span><br><span class="line">&#x2F;&#x2F;设置高亮字段</span><br><span class="line">HighlightBuilder highlightBuilder &#x3D; new HighlightBuilder()</span><br><span class="line">        .field(&quot;name&quot;);&#x2F;&#x2F;支持多个高亮字段，使用多个field方法指定即可</span><br><span class="line">&#x2F;&#x2F;设置高亮字段的前缀和后缀内容</span><br><span class="line">highlightBuilder.preTags(&quot;&lt;font color&#x3D;&#39;red&#39;&gt;&quot;);</span><br><span class="line">highlightBuilder.postTags(&quot;&lt;&#x2F;font&gt;&quot;);</span><br><span class="line">searchSourceBuilder.highlighter(highlightBuilder);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">别忘了前面完整代码中，要对高亮字段查询，才会有效果</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306140044744.png" alt="image-20230614004401423"></p><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306140043276.png" alt="image-20230614004343078"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">解析高亮内容的核心代码如下：</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;迭代解析具体内容</span><br><span class="line">for (SearchHit hit : searchHits) &#123;</span><br><span class="line">    &#x2F;*String sourceAsString &#x3D; hit.getSourceAsString();</span><br><span class="line">    System.out.println(sourceAsString);*&#x2F;</span><br><span class="line">    Map&lt;String, Object&gt; sourceAsMap &#x3D; hit.getSourceAsMap();</span><br><span class="line">    String name &#x3D; sourceAsMap.get(&quot;name&quot;).toString();</span><br><span class="line">    int age &#x3D; Integer.parseInt(sourceAsMap.get(&quot;age&quot;).toString());</span><br><span class="line">    &#x2F;&#x2F;获取高亮字段内容</span><br><span class="line">    Map&lt;String, HighlightField&gt; highlightFields &#x3D; hit.getHighlightFields();</span><br><span class="line">    &#x2F;&#x2F;获取name字段的高亮内容</span><br><span class="line">    HighlightField highlightField &#x3D; highlightFields.get(&quot;name&quot;);</span><br><span class="line">    if(highlightField!&#x3D;null)&#123;</span><br><span class="line">        Text[] fragments &#x3D; highlightField.getFragments();</span><br><span class="line">        name &#x3D; &quot;&quot;;</span><br><span class="line">        for (Text text : fragments) &#123;</span><br><span class="line">            name +&#x3D; text;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;获取最终的结果数据</span><br><span class="line">    System.out.println(name+&quot;---&quot;+age);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">注意：必须要设置查询的字段，否则无法实现高亮。</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;高亮查询name字段</span><br><span class="line">searchSourceBuilder.query(QueryBuilders.matchQuery(&quot;name&quot;,&quot;tom&quot;));</span><br><span class="line">searchSourceBuilder.query(QueryBuilders.matchQuery(&quot;name&quot;,&quot;刘德华&quot;));</span><br></pre></td></tr></table></figure><h3 id="评分依据-了解"><a href="#评分依据-了解" class="headerlink" title="评分依据(了解)"></a>评分依据(了解)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ES在返回满足条件的数据的时候，按照搜索条件的匹配度返回数据的，匹配度最高的数据排在最前面，这个匹配度其实就是ES中返回结果中的score字段的值。</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;获取数据的匹配度分值，值越大说明和搜索的关键字匹配度越高</span><br><span class="line">float score &#x3D; hit.getScore();</span><br><span class="line">&#x2F;&#x2F;获取最终的结果数据</span><br><span class="line">System.out.println(name+&quot;---&quot;+age+&quot;---&quot;+score);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">此时，我们搜索name&#x3D;刘华 的数据</span><br><span class="line">searchSourceBuilder.query(QueryBuilders.matchQuery(&quot;name&quot;, &quot;刘华&quot;));</span><br><span class="line"></span><br><span class="line">结果如下：</span><br><span class="line">数据总数：2</span><br><span class="line">&lt;font color&#x3D;&#39;red&#39;&gt;刘&lt;&#x2F;font&gt;德&lt;font color&#x3D;&#39;red&#39;&gt;华&lt;&#x2F;font&gt;---60---2.591636</span><br><span class="line">&lt;font color&#x3D;&#39;red&#39;&gt;刘&lt;&#x2F;font&gt;老二---20---1.0036464</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">可以看到第一条数据的score分值为2.59</span><br><span class="line">第二条数据的score分值为1.00</span><br><span class="line"></span><br><span class="line">score分值具体是如何计算出来的呢？可以通过开启评分依据进行查看详细信息：</span><br><span class="line">首先开启评分依据：</span><br><span class="line">&#x2F;&#x2F;评分依据，true：开启，false：关闭</span><br><span class="line">searchSourceBuilder.explain(true);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">获取评分依据信息：</span><br><span class="line">&#x2F;&#x2F;获取Score的评分依据</span><br><span class="line">Explanation explanation &#x3D; hit.getExplanation();</span><br><span class="line">&#x2F;&#x2F;打印评分依据</span><br><span class="line">if(explanation!&#x3D;null)&#123;</span><br><span class="line">    System.out.println(explanation.toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">再执行程序，就可以看到具体的评分依据信息了：</span><br><span class="line">数据总数：2</span><br><span class="line">&lt;font color&#x3D;&#39;red&#39;&gt;刘&lt;&#x2F;font&gt;德&lt;font color&#x3D;&#39;red&#39;&gt;华&lt;&#x2F;font&gt;---60---2.591636</span><br><span class="line">2.591636 &#x3D; sum of:</span><br><span class="line">  1.0036464 &#x3D; weight(name:刘 in 1) [PerFieldSimilarity], result of:</span><br><span class="line">    1.0036464 &#x3D; score(freq&#x3D;1.0), computed as boost * idf * tf from:</span><br><span class="line">      2.2 &#x3D; boost</span><br><span class="line">      1.4552872 &#x3D; idf, computed as log(1 + (N - n + 0.5) &#x2F; (n + 0.5)) from:</span><br><span class="line">        3.0 &#x3D; n, number of documents containing term</span><br><span class="line">        14.0 &#x3D; N, total number of documents with field</span><br><span class="line">      0.3134796 &#x3D; tf, computed as freq &#x2F; (freq + k1 * (1 - b + b * dl &#x2F; avgdl)) from:</span><br><span class="line">        1.0 &#x3D; freq, occurrences of term within document</span><br><span class="line">        1.2 &#x3D; k1, term saturation parameter</span><br><span class="line">        0.75 &#x3D; b, length normalization parameter</span><br><span class="line">        3.0 &#x3D; dl, length of field</span><br><span class="line">        1.4285715 &#x3D; avgdl, average length of field</span><br><span class="line">  1.5879896 &#x3D; weight(name:华 in 1) [PerFieldSimilarity], result of:</span><br><span class="line">    1.5879896 &#x3D; score(freq&#x3D;1.0), computed as boost * idf * tf from:</span><br><span class="line">      2.2 &#x3D; boost</span><br><span class="line">      2.3025851 &#x3D; idf, computed as log(1 + (N - n + 0.5) &#x2F; (n + 0.5)) from:</span><br><span class="line">        1.0 &#x3D; n, number of documents containing term</span><br><span class="line">        14.0 &#x3D; N, total number of documents with field</span><br><span class="line">      0.3134796 &#x3D; tf, computed as freq &#x2F; (freq + k1 * (1 - b + b * dl &#x2F; avgdl)) from:</span><br><span class="line">        1.0 &#x3D; freq, occurrences of term within document</span><br><span class="line">        1.2 &#x3D; k1, term saturation parameter</span><br><span class="line">        0.75 &#x3D; b, length normalization parameter</span><br><span class="line">        3.0 &#x3D; dl, length of field</span><br><span class="line">        1.4285715 &#x3D; avgdl, average length of field</span><br><span class="line"></span><br><span class="line">&lt;font color&#x3D;&#39;red&#39;&gt;刘&lt;&#x2F;font&gt;老二---20---1.0036464</span><br><span class="line">1.0036464 &#x3D; sum of:</span><br><span class="line">  1.0036464 &#x3D; weight(name:刘 in 2) [PerFieldSimilarity], result of:</span><br><span class="line">    1.0036464 &#x3D; score(freq&#x3D;1.0), computed as boost * idf * tf from:</span><br><span class="line">      2.2 &#x3D; boost</span><br><span class="line">      1.4552872 &#x3D; idf, computed as log(1 + (N - n + 0.5) &#x2F; (n + 0.5)) from:</span><br><span class="line">        3.0 &#x3D; n, number of documents containing term</span><br><span class="line">        14.0 &#x3D; N, total number of documents with field</span><br><span class="line">      0.3134796 &#x3D; tf, computed as freq &#x2F; (freq + k1 * (1 - b + b * dl &#x2F; avgdl)) from:</span><br><span class="line">        1.0 &#x3D; freq, occurrences of term within document</span><br><span class="line">        1.2 &#x3D; k1, term saturation parameter</span><br><span class="line">        0.75 &#x3D; b, length normalization parameter</span><br><span class="line">        3.0 &#x3D; dl, length of field</span><br><span class="line">        1.4285715 &#x3D; avgdl, average length of field</span><br></pre></td></tr></table></figure><h3 id="ES中分页的性能问题"><a href="#ES中分页的性能问题" class="headerlink" title="ES中分页的性能问题"></a>ES中分页的性能问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">在使用ES实现分页查询的时候，不要一次请求过多或者页码过大的结果，这样会对服务器造成很大的压力，因为它们会在返回前排序。</span><br><span class="line">ES是分布式搜索，所以ES客户端的一个查询请求会发送到索引对应的多个分片中，每个分片都会生成自己的排序结果，最后再进行集中排序，以确保最终结果的正确性。</span><br><span class="line"></span><br><span class="line">我们假设在搜索一个拥有5个主分片的索引，当我们请求第一页数据的时候，每个分片产生自己前10名，然后将它们返回给请求节点，然后这个请求节点会将收到的50条结果重新排序以产生最终的前10名。</span><br><span class="line"></span><br><span class="line">现在想象一下我们如果要获得第1,000页的数据，也就是第10,001到第10,010条数据，每一个分片都会先产生自己的前10,010名，然后请求节点统一处理这50,050条数据，最后再丢弃掉其中的50,040条！</span><br><span class="line">现在我们就明白了，在分布式系统中，大页码请求所消耗的系统资源是呈指数式增长的。这也是为什么网络搜索引擎一般不会提供超过1,000条搜索结果的原因。</span><br><span class="line">例如：百度上的效果。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111650965.png" alt="image-20230611165023568"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当然还有一点原因是后面的搜索结果基本上也不是我们想要的数据了，我们在使用搜索引擎的时候，一般只会看第1页和第2页的数据。</span><br></pre></td></tr></table></figure><h3 id="aggregations聚合统计"><a href="#aggregations聚合统计" class="headerlink" title="aggregations聚合统计"></a>aggregations聚合统计</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ES中可以实现基于字段进行分组聚合的统计</span><br><span class="line">聚合操作支持count()、sum()、avg()、max()、min()等</span><br><span class="line"></span><br><span class="line">下面来看两个案例</span><br></pre></td></tr></table></figure><h4 id="统计相同年龄的学员个数"><a href="#统计相同年龄的学员个数" class="headerlink" title="统计相同年龄的学员个数"></a>统计相同年龄的学员个数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">需求：统计相同年龄的学员个数</span><br><span class="line">数据如下所示：</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111657341.png" alt="image-20230611165752222"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">首先在ES中初始化这份数据：</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stu&#x2F;_doc&#x2F;1&#39; -d&#39;&#123;&quot;name&quot;:&quot;tom&quot;,&quot;age&quot;:18&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stu&#x2F;_doc&#x2F;2&#39; -d&#39;&#123;&quot;name&quot;:&quot;jack&quot;,&quot;age&quot;:29&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stu&#x2F;_doc&#x2F;3&#39; -d&#39;&#123;&quot;name&quot;:&quot;jessica&quot;,&quot;age&quot;:18&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stu&#x2F;_doc&#x2F;4&#39; -d&#39;&#123;&quot;name&quot;:&quot;dave&quot;,&quot;age&quot;:19&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stu&#x2F;_doc&#x2F;5&#39; -d&#39;&#123;&quot;name&quot;:&quot;lilei&quot;,&quot;age&quot;:18&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stu&#x2F;_doc&#x2F;6&#39; -d&#39;&#123;&quot;name&quot;:&quot;lili&quot;,&quot;age&quot;:29&#125;&#39;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.es;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpHost;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.search.SearchRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.search.SearchResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RequestOptions;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestHighLevelClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.aggregations.AggregationBuilders;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.aggregations.bucket.terms.Terms;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.aggregations.bucket.terms.TermsAggregationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.builder.SearchSourceBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 聚合统计：统计相同年龄的学员个数</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EsAggOp01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//获取RestClient连接</span></span><br><span class="line">        RestHighLevelClient client = <span class="keyword">new</span> RestHighLevelClient(</span><br><span class="line">                RestClient.builder(</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata01"</span>, <span class="number">9200</span>, <span class="string">"http"</span>),</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata02"</span>, <span class="number">9200</span>, <span class="string">"http"</span>),</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata03"</span>, <span class="number">9200</span>, <span class="string">"http"</span>)));</span><br><span class="line">        SearchRequest searchRequest = <span class="keyword">new</span> SearchRequest();</span><br><span class="line">        searchRequest.indices(<span class="string">"stu"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//指定查询条件</span></span><br><span class="line">        SearchSourceBuilder searchSourceBuilder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        <span class="comment">//指定分组信息，默认是执行count聚合</span></span><br><span class="line">        TermsAggregationBuilder aggregation = AggregationBuilders.terms(<span class="string">"age_term"</span>)</span><br><span class="line">                .field(<span class="string">"age"</span>);</span><br><span class="line">        searchSourceBuilder.aggregation(aggregation);</span><br><span class="line"></span><br><span class="line">        searchRequest.source(searchSourceBuilder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行查询操作</span></span><br><span class="line">        SearchResponse searchResponse = client.search(searchRequest, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取分组信息</span></span><br><span class="line">        Terms terms = searchResponse.getAggregations().get(<span class="string">"age_term"</span>);</span><br><span class="line">        List&lt;? extends Terms.Bucket&gt; buckets = terms.getBuckets();</span><br><span class="line">        <span class="keyword">for</span> (Terms.Bucket bucket: buckets) &#123;</span><br><span class="line">            System.out.println(bucket.getKey()+<span class="string">"---"</span>+bucket.getDocCount());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭连接</span></span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="统计每个学员的总成绩"><a href="#统计每个学员的总成绩" class="headerlink" title="统计每个学员的总成绩"></a>统计每个学员的总成绩</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">需求：统计每个学员的总成绩</span><br><span class="line">数据如下所示：</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306111659147.png" alt="image-20230611165858836"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;score&#x2F;_doc&#x2F;1&#39; -d&#39;&#123;&quot;name&quot;:&quot;tom&quot;,&quot;subject&quot;:&quot;chinese&quot;,&quot;score&quot;:59&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;score&#x2F;_doc&#x2F;2&#39; -d&#39;&#123;&quot;name&quot;:&quot;tom&quot;,&quot;subject&quot;:&quot;math&quot;,&quot;score&quot;:89&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;score&#x2F;_doc&#x2F;3&#39; -d&#39;&#123;&quot;name&quot;:&quot;jack&quot;,&quot;subject&quot;:&quot;chinese&quot;,&quot;score&quot;:78&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;score&#x2F;_doc&#x2F;4&#39; -d&#39;&#123;&quot;name&quot;:&quot;jack&quot;,&quot;subject&quot;:&quot;math&quot;,&quot;score&quot;:85&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;score&#x2F;_doc&#x2F;5&#39; -d&#39;&#123;&quot;name&quot;:&quot;jessica&quot;,&quot;subject&quot;:&quot;chinese&quot;,&quot;score&quot;:97&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;score&#x2F;_doc&#x2F;6&#39; -d&#39;&#123;&quot;name&quot;:&quot;jessica&quot;,&quot;subject&quot;:&quot;math&quot;,&quot;score&quot;:68&#125;&#39;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.es;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpHost;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.search.SearchRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.search.SearchResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RequestOptions;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestHighLevelClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.aggregations.Aggregation;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.aggregations.AggregationBuilders;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.aggregations.bucket.terms.Terms;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.aggregations.bucket.terms.TermsAggregationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.aggregations.metrics.Sum;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.builder.SearchSourceBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 聚合统计：统计每个学员的总成绩</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EsAggOp02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//获取RestClient连接</span></span><br><span class="line">        RestHighLevelClient client = <span class="keyword">new</span> RestHighLevelClient(</span><br><span class="line">                RestClient.builder(</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata01"</span>, <span class="number">9200</span>, <span class="string">"http"</span>),</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata02"</span>, <span class="number">9200</span>, <span class="string">"http"</span>),</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"bigdata03"</span>, <span class="number">9200</span>, <span class="string">"http"</span>)));</span><br><span class="line">        SearchRequest searchRequest = <span class="keyword">new</span> SearchRequest();</span><br><span class="line">        searchRequest.indices(<span class="string">"score"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//指定查询条件</span></span><br><span class="line">        SearchSourceBuilder searchSourceBuilder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        <span class="comment">//指定分组和求sum</span></span><br><span class="line">        TermsAggregationBuilder aggregation = AggregationBuilders.terms(<span class="string">"name_term"</span>)</span><br><span class="line">                .field(<span class="string">"name.keyword"</span>)<span class="comment">//指定分组字段，如果是字符串(Text)类型，则需要指定使用keyword类型</span></span><br><span class="line">                .subAggregation(AggregationBuilders.sum(<span class="string">"sum_score"</span>).field(<span class="string">"score"</span>));<span class="comment">//指定求sum,也支持avg、min、max等操作</span></span><br><span class="line">        searchSourceBuilder.aggregation(aggregation);</span><br><span class="line"></span><br><span class="line">        searchRequest.source(searchSourceBuilder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行查询操作</span></span><br><span class="line">        SearchResponse searchResponse = client.search(searchRequest, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取分组信息</span></span><br><span class="line">        Terms terms = searchResponse.getAggregations().get(<span class="string">"name_term"</span>);</span><br><span class="line">        List&lt;? extends Terms.Bucket&gt; buckets = terms.getBuckets();</span><br><span class="line">        <span class="keyword">for</span> (Terms.Bucket bucket: buckets) &#123;</span><br><span class="line">            <span class="comment">//获取sum聚合的结果</span></span><br><span class="line">            Sum sum = bucket.getAggregations().get(<span class="string">"sum_score"</span>);</span><br><span class="line">            System.out.println(bucket.getKey()+<span class="string">"---"</span>+sum.getValue());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭连接</span></span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="aggregations获取所有分组数据"><a href="#aggregations获取所有分组数据" class="headerlink" title="aggregations获取所有分组数据"></a>aggregations获取所有分组数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">默认情况下，ES只会返回10个分组的数据，如果分组之后的结果超过了10组，如何解决？</span><br><span class="line"></span><br><span class="line">可以通过在聚合操作中使用size方法进行设置，获取指定个数的数据组或者获取所有的数据组。</span><br><span class="line">在案例1的基础上再初始化一批测试数据：</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stu&#x2F;_doc&#x2F;61&#39; -d&#39;&#123;&quot;name&quot;:&quot;s1&quot;,&quot;age&quot;:31&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stu&#x2F;_doc&#x2F;62&#39; -d&#39;&#123;&quot;name&quot;:&quot;s2&quot;,&quot;age&quot;:32&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stu&#x2F;_doc&#x2F;63&#39; -d&#39;&#123;&quot;name&quot;:&quot;s3&quot;,&quot;age&quot;:33&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stu&#x2F;_doc&#x2F;64&#39; -d&#39;&#123;&quot;name&quot;:&quot;s4&quot;,&quot;age&quot;:34&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stu&#x2F;_doc&#x2F;65&#39; -d&#39;&#123;&quot;name&quot;:&quot;s5&quot;,&quot;age&quot;:35&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stu&#x2F;_doc&#x2F;66&#39; -d&#39;&#123;&quot;name&quot;:&quot;s6&quot;,&quot;age&quot;:36&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stu&#x2F;_doc&#x2F;67&#39; -d&#39;&#123;&quot;name&quot;:&quot;s7&quot;,&quot;age&quot;:37&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stu&#x2F;_doc&#x2F;68&#39; -d&#39;&#123;&quot;name&quot;:&quot;s8&quot;,&quot;age&quot;:38&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stu&#x2F;_doc&#x2F;69&#39; -d&#39;&#123;&quot;name&quot;:&quot;s9&quot;,&quot;age&quot;:39&#125;&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">支持案例1的代码，查看返回的分组个数：</span><br><span class="line">18---3</span><br><span class="line">29---2</span><br><span class="line">19---1</span><br><span class="line">31---1</span><br><span class="line">32---1</span><br><span class="line">33---1</span><br><span class="line">34---1</span><br><span class="line">35---1</span><br><span class="line">36---1</span><br><span class="line">37---1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">发现结果中返回的分组个数是10个，没有全部都显示出来，这个其实和分页也没关系，尝试增加分页的代码发现也是无效的：</span><br><span class="line">&#x2F;&#x2F;增加分页参数，注意：分页参数针对分组数据是无效的。</span><br><span class="line">searchSourceBuilder.from(0).size(20);</span><br><span class="line"></span><br><span class="line">执行案例1的代码，结果发现还是10条数据。</span><br><span class="line">18---3</span><br><span class="line">29---2</span><br><span class="line">19---1</span><br><span class="line">31---1</span><br><span class="line">32---1</span><br><span class="line">33---1</span><br><span class="line">34---1</span><br><span class="line">35---1</span><br><span class="line">36---1</span><br><span class="line">37---1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">通过在聚合操作上使用size方法进行设置：</span><br><span class="line">TermsAggregationBuilder aggregation &#x3D; AggregationBuilders.terms(&quot;age_term&quot;)</span><br><span class="line">        .field(&quot;age&quot;)</span><br><span class="line">        .size(20);&#x2F;&#x2F;获取指定分组个数的数据</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">执行案例1的代码：</span><br><span class="line">18---3</span><br><span class="line">29---2</span><br><span class="line">19---1</span><br><span class="line">31---1</span><br><span class="line">32---1</span><br><span class="line">33---1</span><br><span class="line">34---1</span><br><span class="line">35---1</span><br><span class="line">36---1</span><br><span class="line">37---1</span><br><span class="line">38---1</span><br><span class="line">39---1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">此时可以获取到所有分组的数据，因为结果一共有12个分组，在代码中通过size设置最多可以获取到20个分组的数据。</span><br><span class="line"></span><br><span class="line">如果前期不确定到底有多少个分组的数据，还想获取到所有分组的数据，此时可以在size中设置一个Integer的最大值，这样基本上就没什么问题了，但是注意：如果最后的分组个数太多，会给ES造成比较大的压力，所以官方在这做了限制，让用户手工指定获取多少分组的数据。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TermsAggregationBuilder aggregation &#x3D; AggregationBuilders.terms(&quot;age_term&quot;)</span><br><span class="line">        .field(&quot;age&quot;)</span><br><span class="line">        .size(Integer.MAX_VALUE);&#x2F;&#x2F;获取指定分组个数的数据</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：在ES7.x版本之前，想要获取所有的分组数据，只需要在size中指定参数为0即可。现在ES7.x版本不支持这个数值了。</span><br></pre></td></tr></table></figure><h2 id="5-Elasticsearch的高级特性"><a href="#5-Elasticsearch的高级特性" class="headerlink" title="5 Elasticsearch的高级特性"></a>5 Elasticsearch的高级特性</h2><h3 id="ES中的settings"><a href="#ES中的settings" class="headerlink" title="ES中的settings"></a>ES中的settings</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">ES中的settings可以设置索引库的一些配置信息，主要是针对分片数量和副本数量</span><br><span class="line">其中分片数量只能在一开始创建索引库的时候指定，后期不能修改。</span><br><span class="line">副本数量可以随时修改。</span><br><span class="line"></span><br><span class="line">首先查看一下ES中目前已有的索引库的默认settings信息。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;emp&#x2F;_settings?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;emp&quot; : &#123;</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">      &quot;index&quot; : &#123;</span><br><span class="line">        &quot;routing&quot; : &#123;</span><br><span class="line">          &quot;allocation&quot; : &#123;</span><br><span class="line">            &quot;include&quot; : &#123;</span><br><span class="line">              &quot;_tier_preference&quot; : &quot;data_content&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;number_of_shards&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;provided_name&quot; : &quot;emp&quot;,</span><br><span class="line">        &quot;creation_date&quot; : &quot;1803648122805&quot;,</span><br><span class="line">        &quot;number_of_replicas&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;uuid&quot; : &quot;kBpwz6kAQ2eS0uCISVcaew&quot;,</span><br><span class="line">        &quot;version&quot; : &#123;</span><br><span class="line">          &quot;created&quot; : &quot;7130499&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">此时分片和副本数量默认都是1。</span><br><span class="line">尝试手工指定分片和副本数量。</span><br><span class="line">针对不存在的索引，在创建的时候可以同时指定分片(5)和副本(1)数量：</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test1&#x2F;&#39; -d&#39;&#123;&quot;settings&quot;:&#123;&quot;number_of_shards&quot;:5,&quot;number_of_replicas&quot;:1&#125;&#125;&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">查看这个索引库的settings信息：</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test1&#x2F;_settings?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;test1&quot; : &#123;</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">      &quot;index&quot; : &#123;</span><br><span class="line">        &quot;routing&quot; : &#123;</span><br><span class="line">          &quot;allocation&quot; : &#123;</span><br><span class="line">            &quot;include&quot; : &#123;</span><br><span class="line">              &quot;_tier_preference&quot; : &quot;data_content&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;number_of_shards&quot; : &quot;5&quot;,</span><br><span class="line">        &quot;provided_name&quot; : &quot;test1&quot;,</span><br><span class="line">        &quot;creation_date&quot; : &quot;1804844538706&quot;,</span><br><span class="line">        &quot;number_of_replicas&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;uuid&quot; : &quot;WEUwvKVoRzWfna-KFntdqQ&quot;,</span><br><span class="line">        &quot;version&quot; : &#123;</span><br><span class="line">          &quot;created&quot; : &quot;7130499&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">针对已存在的索引，只能通过settings指定副本信息。</span><br><span class="line">将刚才创建的索引的副本数量修改为0。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test1&#x2F;_settings&#39; -d&#39;&#123;&quot;index&quot;:&#123;&quot;number_of_replicas&quot;:0&#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">查看这个索引库目前的settings信息：</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test1&#x2F;_settings?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;test1&quot; : &#123;</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">      &quot;index&quot; : &#123;</span><br><span class="line">        &quot;routing&quot; : &#123;</span><br><span class="line">          &quot;allocation&quot; : &#123;</span><br><span class="line">            &quot;include&quot; : &#123;</span><br><span class="line">              &quot;_tier_preference&quot; : &quot;data_content&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;number_of_shards&quot; : &quot;5&quot;,</span><br><span class="line">        &quot;provided_name&quot; : &quot;test1&quot;,</span><br><span class="line">        &quot;creation_date&quot; : &quot;1804844538706&quot;,</span><br><span class="line">        &quot;number_of_replicas&quot; : &quot;0&quot;,</span><br><span class="line">        &quot;uuid&quot; : &quot;WEUwvKVoRzWfna-KFntdqQ&quot;,</span><br><span class="line">        &quot;version&quot; : &#123;</span><br><span class="line">          &quot;created&quot; : &quot;7130499&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ES中的mapping"><a href="#ES中的mapping" class="headerlink" title="ES中的mapping"></a>ES中的mapping</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mapping表示索引库中数据的字段类型信息，类似于MySQL中的表结构信息。</span><br><span class="line"></span><br><span class="line">一般不需要手工指定mapping，因为ES会自动根据数据格式识别它的类型</span><br><span class="line"></span><br><span class="line">如果你需要对某些字段添加特殊属性（例如：指定分词器），就必须手工指定字段的mapping。</span><br><span class="line"></span><br><span class="line">下面先来看一下ES中的常用数据类型：</span><br></pre></td></tr></table></figure><h4 id="ES中的常用数据类型"><a href="#ES中的常用数据类型" class="headerlink" title="ES中的常用数据类型"></a>ES中的常用数据类型</h4><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306112219264.png" alt="ES中的常用数据类型"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">字符串：支持text和keyword类型</span><br><span class="line">text类型支持分词，支持模糊、精确查询，但是不支持聚合和排序操作，text类型不限制存储的内容长度，适合大字段存储。</span><br><span class="line">https:&#x2F;&#x2F;www.elastic.co&#x2F;guide&#x2F;en&#x2F;elasticsearch&#x2F;reference&#x2F;7.13&#x2F;text.html</span><br><span class="line"></span><br><span class="line">keyword类型不支持分词，会直接对数据建立索引，支持模糊、精确查询，支持聚合和排序操作。keyword类型最大支持存储内容长度为32766个UTF-8类型的字符,可以通过设置ignore_above参数指定某个字段最大支持的字符长度，超过给定长度后的数据将不被索引，此时就无法通过termQuery精确查询返回结果了。keyword类型适合存储手机号、姓名等不需要分词的数据。</span><br><span class="line">https:&#x2F;&#x2F;www.elastic.co&#x2F;guide&#x2F;en&#x2F;elasticsearch&#x2F;reference&#x2F;7.13&#x2F;keyword.html</span><br><span class="line"></span><br><span class="line">数字：最常用的就是long和double了，整数使用long、小数使用double。当然也支持integer、short、byte、float这些数据类型。</span><br><span class="line">https:&#x2F;&#x2F;www.elastic.co&#x2F;guide&#x2F;en&#x2F;elasticsearch&#x2F;reference&#x2F;7.13&#x2F;number.html</span><br><span class="line"></span><br><span class="line">日期：最常用的就是date类型了，date类型可以支持到毫秒，如果特殊情况下需要精确到纳秒需要使用date_nanos这个类型。</span><br><span class="line">其中date日期类型可以自定义日期格式，通过format参数指定：</span><br><span class="line">&#123;“type”:“date”,“format”:“yyyy-MM-dd”&#125;</span><br><span class="line">https:&#x2F;&#x2F;www.elastic.co&#x2F;guide&#x2F;en&#x2F;elasticsearch&#x2F;reference&#x2F;7.13&#x2F;date.html</span><br><span class="line"></span><br><span class="line">布尔型：支持true或者false。</span><br><span class="line"></span><br><span class="line">二进制：该字段存储编码为Base64字符串的二进制值。如果想要存储图片，可以存储图片地址，或者图片本身，存储图片本身的话就需要获取图片的二进制值进行存储了。</span><br><span class="line">https:&#x2F;&#x2F;www.elastic.co&#x2F;guide&#x2F;en&#x2F;elasticsearch&#x2F;reference&#x2F;7.13&#x2F;binary.html</span><br></pre></td></tr></table></figure><h4 id="查看mapping"><a href="#查看mapping" class="headerlink" title="查看mapping"></a>查看mapping</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">ES中还支持一些其他数据类型，感兴趣的话可以到文档里面看一下：</span><br><span class="line">https:&#x2F;&#x2F;www.elastic.co&#x2F;guide&#x2F;en&#x2F;elasticsearch&#x2F;reference&#x2F;7.13&#x2F;mapping-types.html</span><br><span class="line"></span><br><span class="line">下面查询一下目前已有的索引库score的mapping信息：</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;score&#x2F;_mapping?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;score&quot; : &#123;</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">      &quot;properties&quot; : &#123;</span><br><span class="line">        &quot;name&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;,</span><br><span class="line">          &quot;fields&quot; : &#123;</span><br><span class="line">            &quot;keyword&quot; : &#123;</span><br><span class="line">              &quot;type&quot; : &quot;keyword&quot;,</span><br><span class="line">              &quot;ignore_above&quot; : 256</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;score&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;long&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;subject&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;,</span><br><span class="line">          &quot;fields&quot; : &#123;</span><br><span class="line">            &quot;keyword&quot; : &#123;</span><br><span class="line">              &quot;type&quot; : &quot;keyword&quot;,</span><br><span class="line">              &quot;ignore_above&quot; : 256</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">通过返回的mapping信息可以看到score这个索引库里面有3个字段，name、score和subject。</span><br><span class="line">1：name是text类型，其中还通过fields属性指定了一个keyword类型，表示name字段会按照text类型和keyword类型存储2份。</span><br><span class="line"></span><br><span class="line">针对fields属性的解释官网里面有详细介绍，见下图：</span><br><span class="line">大致意思是说，一个字段可以设置多种数据类型，这样ES会按照多种数据类型的特性对这个字段进行存储和建立索引。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306112222083.png" alt="image-20230611222209691"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&quot;ignore_above&quot; : 256，表示keyword类型最大支持的字符串长度是256。</span><br><span class="line">ES默认会把字符串类型的数据同时指定text类型和keyword类型。</span><br><span class="line">想要实现分词检索的时候需要使用text类型，在代码层面直接指定这个name字段就表示使用text类型。</span><br><span class="line">想要实现精确查询的时候需要使用keyword类型，在代码层面指定name.keyword表示使用name的keyword类型。</span><br><span class="line"></span><br><span class="line">其实前面我们在讲排序的时候也用到了这个keyword类型的特性，因为直接指定name字段会使用text类型，text类型不支持排序和聚合，所以使用的是name.keyword。</span><br><span class="line"></span><br><span class="line">2：score是long类型，整数默认会被识别为long类型。</span><br><span class="line">3：subject也是text类型，和name是一样的。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：ES 7.x版本之前字符串默认只会被识别为text类型，不会附加一个keyword类型。</span><br></pre></td></tr></table></figure><h4 id="手工创建mapping"><a href="#手工创建mapping" class="headerlink" title="手工创建mapping"></a>手工创建mapping</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">下面我们首先操作一个不存在的索引库的mapping信息：</span><br><span class="line">指定name为text类型(手工指定字符串类型时，就不会再支持keyword类型了)，并且使用ik分词器。</span><br><span class="line">age为integer类型。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test2&#39; -d&#39;&#123;&quot;mappings&quot;:&#123;&quot;properties&quot;:&#123;&quot;name&quot;:&#123;&quot;type&quot;:&quot;text&quot;,&quot;analyzer&quot;: &quot;ik_max_word&quot;&#125;,&quot;age&quot;:&#123;&quot;type&quot;:&quot;integer&quot;&#125;&#125;&#125;&#125;&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">查看这个索引库的mapping信息。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test2&#x2F;_mapping?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;test2&quot; : &#123;</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">      &quot;properties&quot; : &#123;</span><br><span class="line">        &quot;age&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;integer&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;name&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;,</span><br><span class="line">          &quot;analyzer&quot; : &quot;ik_max_word&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="更新mapping"><a href="#更新mapping" class="headerlink" title="更新mapping"></a>更新mapping</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在这个已存在的索引库中增加mapping信息。</span><br><span class="line"></span><br><span class="line">注意：只能新增字段，不能修改已有字段的类型，否则会报错。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test2&#x2F;_mapping&#39; -d&#39;&#123;&quot;properties&quot;:&#123;&quot;age&quot;:&#123;&quot;type&quot;:&quot;long&quot;&#125;&#125;&#125;&#39;</span><br><span class="line">&#123;&quot;error&quot;:&#123;&quot;root_cause&quot;:[&#123;&quot;type&quot;:&quot;illegal_argument_exception&quot;,&quot;reason&quot;:&quot;mapper [age] cannot be changed from type [integer] to [long]&quot;&#125;],&quot;type&quot;:&quot;illegal_argument_exception&quot;,&quot;reason&quot;:&quot;mapper [age] cannot be changed from type [integer] to [long]&quot;&#125;,&quot;status&quot;:400&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">可以假设一下，假设支持修改已有字段的类型，之前name是text类型，如果我修改为long类型，这样就会出现矛盾了，所以ES不支持修改已有字段的类型。</span><br><span class="line">在已存在的索引库中增加一个flag字段，类型为boolean类型</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test2&#x2F;_mapping&#39; -d&#39;&#123;&quot;properties&quot;:&#123;&quot;flag&quot;:&#123;&quot;type&quot;:&quot;boolean&quot;&#125;&#125;&#125;&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">查看索引库的最新mapping信息。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test2&#x2F;_mapping?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;test2&quot; : &#123;</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">      &quot;properties&quot; : &#123;</span><br><span class="line">        &quot;age&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;integer&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;flag&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;boolean&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;name&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;,</span><br><span class="line">          &quot;analyzer&quot; : &quot;ik_max_word&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ES的偏好查询-分片查询方式"><a href="#ES的偏好查询-分片查询方式" class="headerlink" title="ES的偏好查询(分片查询方式)"></a>ES的偏好查询(分片查询方式)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ES中的索引数据最终都是存储在分片里面的，分片有多个，并且分片还分为主分片和副本分片。</span><br><span class="line"></span><br><span class="line">ES在查询索引库中的数据时，具体是到哪些分片里面查询数据呢？</span><br><span class="line"></span><br><span class="line">在具体分析这个之前，我们先分析一下ES的分布式查询过程：</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306112228956.png" alt="image-20230611222857840"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">这个表示是一个3个节点的ES集群，集群内有一个索引库，索引库里面有P0和P1两个主分片，这两个主分片分别都有2个副本分片，R0和R1。</span><br><span class="line"></span><br><span class="line">查询过程主要包含三个步骤：</span><br><span class="line"></span><br><span class="line">1.客户端发送一个查询请求到Node 3，Node 3会创建一个空优先队列，主要为了存储结果数据。</span><br><span class="line">2.Node 3将查询请求转发到索引的主分片或副本分片中。每个分片在本地执行查询并将查询到的结果添加到本地的有序优先队列中。</span><br><span class="line">具体这里面Node 3将查询请求转发到索引的哪个分片中，可以是随机的，也可以由我们程序员来控制。默认是randomize across shards：表示随机从分片中取数据。</span><br><span class="line">3.每个分片返回各自优先队列中所有文档的ID和排序值给到Node 3，Node 3合并这些值到自己的优先队列中来产生一个全局排序后的结果列表。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注意：当客户端的一个搜索请求被发送到某个节点时，这个节点就变成了协调节点。 这个节点的任务是广播查询请求到所有相关分片，并将它们查询到的结果整合成全局排序后的结果集合，这个结果集合会返回给客户端。</span><br><span class="line">这里面的Node3节点其实就是协调节点。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">接下来我们来具体分析一下如何控制查询请求到分片之间的分发规则：</span><br><span class="line">先创建一个具有5个分片，0个副本的索引库</span><br><span class="line">分片太少不好验证效果。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;pre&#x2F;&#39; -d&#39;&#123;&quot;settings&quot;:&#123;&quot;number_of_shards&quot;:5,&quot;number_of_replicas&quot;:0&#125;&#125;&#39;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306112239645.png" alt="image-20230611223918180"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在索引库中初始化一批测试数据：</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;pre&#x2F;_doc&#x2F;1&#39; -d&#39;&#123;&quot;name&quot;:&quot;tom&quot;,&quot;age&quot;:18&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;pre&#x2F;_doc&#x2F;2&#39; -d&#39;&#123;&quot;name&quot;:&quot;jack&quot;,&quot;age&quot;:29&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;pre&#x2F;_doc&#x2F;3&#39; -d&#39;&#123;&quot;name&quot;:&quot;jessica&quot;,&quot;age&quot;:18&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;pre&#x2F;_doc&#x2F;4&#39; -d&#39;&#123;&quot;name&quot;:&quot;dave&quot;,&quot;age&quot;:19&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;pre&#x2F;_doc&#x2F;5&#39; -d&#39;&#123;&quot;name&quot;:&quot;lilei&quot;,&quot;age&quot;:18&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;pre&#x2F;_doc&#x2F;6&#39; -d&#39;&#123;&quot;name&quot;:&quot;lili&quot;,&quot;age&quot;:29&#125;&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这些测试数据在索引库的分片中的分布情况是这样的：</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306112242368.png" alt="image-20230611224210088"></p><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306112242380.png" alt="image-20230611224227978"></p><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306112242573.png" alt="image-20230611224242367"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在代码层面通过preference(...)来设置具体的分片查询方式：</span><br><span class="line">&#x2F;&#x2F;指定分片查询方式</span><br><span class="line">searchRequest.preference();&#x2F;&#x2F;默认随机</span><br></pre></td></tr></table></figure><h4 id="local"><a href="#local" class="headerlink" title="_local"></a>_local</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">表示查询操作会优先在本地节点(协调节点)的分片中查询，没有的话再到其它节点中查询。</span><br><span class="line">这种方式可以提高查询性能，假设一个索引库有5个分片，这5个分片都在Node3节点里面，客户端的查询请求正好也分配到了Node3节点上，这样在查询这5个分片的数据就都在Node3节点上进行查询了，每个分片返回结果数据的时候就不需要跨网络传输数据了，可以节省网络传输的时间。</span><br><span class="line">但是这种方式也会有弊端，如果这个节点在某一时刻接收到的查询请求比较多的时候，会对当前节点造成比较大的压力，因为这些查询请求都会优先查询这个节点上的分片数据。</span><br><span class="line"></span><br><span class="line">searchRequest.preference(&quot;_local&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">此时是可以查到所有数据的。</span><br><span class="line">数据总数：6</span><br><span class="line">&#123;&quot;name&quot;:&quot;jessica&quot;,&quot;age&quot;:18&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;lilei&quot;,&quot;age&quot;:18&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;dave&quot;,&quot;age&quot;:19&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;jack&quot;,&quot;age&quot;:29&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;lili&quot;,&quot;age&quot;:29&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;tom&quot;,&quot;age&quot;:18&#125;</span><br></pre></td></tr></table></figure><h4 id="only-local"><a href="#only-local" class="headerlink" title="_only_local"></a>_only_local</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">表示查询只会在本地节点的分片中查询。</span><br><span class="line">这种方式只会在查询请求所在的节点上进行查询，查询速度比较快，但是数据可能不完整，因为我们无法保证索引库的分片正好都在这一个节点上。</span><br><span class="line"></span><br><span class="line">searchRequest.preference(&quot;_only_local&quot;);</span><br><span class="line"></span><br><span class="line">数据总数：2</span><br><span class="line">&#123;&quot;name&quot;:&quot;dave&quot;,&quot;age&quot;:19&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;tom&quot;,&quot;age&quot;:18&#125;</span><br><span class="line"></span><br><span class="line">注意：大家在自己本地试验的时候，结果和我的可能不一样，因为请求不一定会分到哪一个节点上面。</span><br></pre></td></tr></table></figure><h4 id="only-nodes"><a href="#only-nodes" class="headerlink" title="_only_nodes"></a>_only_nodes</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">表示只在指定的节点中查询。</span><br><span class="line">可以控制只在指定的节点中查询某一个索引库的分片信息。</span><br><span class="line">但是注意：这里指定的节点列表里面，必须包含指定索引库的所有分片，如果从这些节点列表中获取到的索引库的分片个数不完整，程序会报错。</span><br><span class="line">这种情况适用于在某种特殊情况下，集群中的个别节点压力比较大，短时间内又无法恢复，那么我们在查询的时候可以规避掉这些节点，只选择一些正常的节点进行查询。</span><br><span class="line">前提是索引库的分片有副本，如果没有副本，只有一个主分片，就算主分片的节点压力比较大，那也只能查询这个节点了。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在这里面需要指定节点ID，节点ID应该如何获取呢？</span><br><span class="line"></span><br><span class="line">通过ES中针对节点信息的RestAPI可以快速获取：</span><br><span class="line">http:&#x2F;&#x2F;bigdata01:9200&#x2F;_nodes?pretty</span><br><span class="line">返回的信息有点多，建议在浏览器中访问。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306112251246.png" alt="image-20230611225100064"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">最终可以获取到三个节点的ID：</span><br><span class="line"></span><br><span class="line">注意：这个节点ID是集群随机生成的一个字符串，所以每个人的集群节点ID都是不一样的。</span><br><span class="line"></span><br><span class="line">目前这个索引库的分片分布在3个节点上</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306112253294.png" alt="image-20230611225316854"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">在这里可以指定一个或者多个节点ID，多个节点ID之间使用逗号分割即可</span><br><span class="line">首先指定bigdata01节点的ID</span><br><span class="line"></span><br><span class="line">searchRequest.preference(&quot;_only_nodes:KzjZauWGRt6hJRKTgZ7BcA&quot;);</span><br><span class="line"></span><br><span class="line">注意：执行这个查询会报错，错误提示找不到pre索引库的2号分片的数据，2号分片是在bigdata03节点上</span><br><span class="line">&#123;&quot;error&quot;:&#123;&quot;root_cause&quot;:[&#123;&quot;type&quot;:&quot;illegal_argument_exception&quot;,&quot;reason&quot;:&quot;no data nodes with criteria [l7H4B3pdRm6ckBWd7ODS5Q] found for shard: [pre][2]&quot;&#125;],&quot;type&quot;:&quot;illegal_argument_exception&quot;,&quot;reason&quot;:&quot;no data nodes with criteria [l7H4B3pdRm6ckBWd7ODS5Q] found for shard: [pre][2]&quot;&#125;,&quot;status&quot;:400&#125;</span><br><span class="line"></span><br><span class="line">再把bigdata03的节点ID添加到里面</span><br><span class="line">searchRequest.preference(&quot;_only_nodes:l7H4B3pdRm6ckBWd7ODS5Q,KzjZauWGRt6hJRKTgZ7BcA&quot;);</span><br><span class="line">执行发现还是会报错，提示找不到pre索引库的3号分片，3号分片是在bigdata02节点上的</span><br><span class="line">&#123;&quot;error&quot;:&#123;&quot;root_cause&quot;:[&#123;&quot;type&quot;:&quot;illegal_argument_exception&quot;,&quot;reason&quot;:&quot;no data nodes with criterion [l7H4B3pdRm6ckBWd7ODS5Q,KzjZauWGRt6hJRKTgZ7BcA] found for shard: [pre][3]&quot;&#125;],&quot;type&quot;:&quot;illegal_argument_exception&quot;,&quot;reason&quot;:&quot;no data nodes with criterion [l7H4B3pdRm6ckBWd7ODS5Q,KzjZauWGRt6hJRKTgZ7BcA] found for shard: [pre][3]&quot;&#125;,&quot;status&quot;:400&#125;</span><br><span class="line"></span><br><span class="line">再把bigdata02的节点ID添加到里面</span><br><span class="line">searchRequest.preference(&quot;_only_nodes:l7H4B3pdRm6ckBWd7ODS5Q,KzjZauWGRt6hJRKTgZ7BcA,nS_RptvTQDuRYTplia24WA&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">此时执行就可以正常执行了：</span><br><span class="line">数据总数：6</span><br><span class="line">&#123;&quot;name&quot;:&quot;jessica&quot;,&quot;age&quot;:18&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;lilei&quot;,&quot;age&quot;:18&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;dave&quot;,&quot;age&quot;:19&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;jack&quot;,&quot;age&quot;:29&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;lili&quot;,&quot;age&quot;:29&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;tom&quot;,&quot;age&quot;:18&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：在ES7.x版本之前，_only_nodes后面可以只指定某一个索引库部分分片所在的节点信息，如果不完整，不会报错，只是返回的数据是不完整的。</span><br></pre></td></tr></table></figure><h4 id="prefer-nodes"><a href="#prefer-nodes" class="headerlink" title="_prefer_nodes"></a>_prefer_nodes</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">表示优先在指定的节点上查询。</span><br><span class="line">优先在指定的节点上查询索引库分片中的数据</span><br><span class="line">如果某个节点比较空闲，尽可能的多在这个节点上查询，减轻集群中其他节点的压力，尽可能实现负载均衡。</span><br><span class="line">这里可以指定一个或者多个节点</span><br><span class="line"></span><br><span class="line">searchRequest.preference(&quot;_prefer_nodes:l7H4B3pdRm6ckBWd7ODS5Q&quot;);</span><br><span class="line"></span><br><span class="line">最终可以查询到完整的结果：</span><br><span class="line">数据总数：6</span><br><span class="line">&#123;&quot;name&quot;:&quot;jessica&quot;,&quot;age&quot;:18&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;lilei&quot;,&quot;age&quot;:18&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;dave&quot;,&quot;age&quot;:19&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;jack&quot;,&quot;age&quot;:29&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;lili&quot;,&quot;age&quot;:29&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;tom&quot;,&quot;age&quot;:18&#125;</span><br></pre></td></tr></table></figure><h4 id="shards-常用"><a href="#shards-常用" class="headerlink" title="_shards(常用)"></a>_shards(常用)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">表示只查询索引库中指定分片的数据。</span><br><span class="line">在查询的时候可以指定只查询索引库中指定分片中的数据，其实有点类似于Hive中的分区表的特性。</span><br><span class="line">如果我们提前已经知道需要查询的数据都在这个索引库的哪些分片里面，在这里提前指定对应分片编号，这样查询请求就只会到这些分片里面进行查询，这样可以提高查询效率，减轻集群压力。</span><br><span class="line">可以指定一个或者多个分片编号，分片编号是从0开始的。</span><br><span class="line"></span><br><span class="line">searchRequest.preference(&quot;_shards:0,1&quot;);</span><br><span class="line"></span><br><span class="line">最终可以看到这两个分区里面的数据：</span><br><span class="line">数据总数：3</span><br><span class="line">&#123;&quot;name&quot;:&quot;jessica&quot;,&quot;age&quot;:18&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;lilei&quot;,&quot;age&quot;:18&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;dave&quot;,&quot;age&quot;:19&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">那我们如何控制将某一类型的数据添加到指定分片呢？</span><br><span class="line"></span><br><span class="line">不要着急，一会就会讲到。</span><br></pre></td></tr></table></figure><h4 id="custom-string"><a href="#custom-string" class="headerlink" title="custom-string"></a>custom-string</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">自定义一个参数，不能以下划线(_)开头。</span><br><span class="line">有时候我们希望多次查询使用索引库中相同的分片，因为分片会有副本，正常情况下如果不做控制，那么两次查询的时候使用的分片可能会不一样，第一次查询可能使用的是主分片，第二次查询可能使用的是副本分片。</span><br><span class="line"></span><br><span class="line">大家可能会有疑问，不管是主分片，还是副本分片，这些分片里面的数据是完全一样的，就算两次查询使用的不是相同分片又会有什么问题吗？</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">会有问题的！如果searchType使用的是QUERY_THEN_FETCH，此时分片里面的数据在计算打分依据的时候是根据当前节点里面的词频和文档频率，两次查询使用的分片不是同一个，这样就会导致在计算打分依据的时候使用的样本不一致，最终导致两次相同的查询条件返回的结果不一样。</span><br><span class="line">当然了，如果你使用的是DFS_QUERY_THEN_FETCH就不会有这个问题了，但是DFS_QUERY_THEN_FETCH对性能损耗会大一些，所以并不是所有情况下都使用这种searchType。</span><br><span class="line"></span><br><span class="line">通过自定义参数的设置，只要两次查询使用的自定义参数是同一个，这样就可以保证这两次查询使用的分片是一样的，那么这两次查询的结果肯定是一样的。</span><br><span class="line"></span><br><span class="line">注意：自定义参数不能以_开头。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">searchRequest.preference(&quot;abc&quot;);&#x2F;&#x2F;自定义参数</span><br><span class="line"></span><br><span class="line">查询到的结果还是完整的。</span><br><span class="line">数据总数：6</span><br><span class="line">&#123;&quot;name&quot;:&quot;jessica&quot;,&quot;age&quot;:18&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;lilei&quot;,&quot;age&quot;:18&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;dave&quot;,&quot;age&quot;:19&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;jack&quot;,&quot;age&quot;:29&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;lili&quot;,&quot;age&quot;:29&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;tom&quot;,&quot;age&quot;:18&#125;</span><br></pre></td></tr></table></figure><h3 id="ES中的routing路由功能"><a href="#ES中的routing路由功能" class="headerlink" title="ES中的routing路由功能"></a>ES中的routing路由功能</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ES在添加数据时，会根据id或者routing参数进行hash，得到hash值再与该索引库的分片数量取模，得到的值即为存入的分片编号</span><br><span class="line"></span><br><span class="line">如果多条数据使用相同的routing，那么最终计算出来的分片编号都是一样的，那么这些数据就可以存储到相同的分片里面了。</span><br><span class="line"></span><br><span class="line">后期查询的只需要到指定分片中查询即可，可以显著提高查询性能。</span><br><span class="line"></span><br><span class="line">如果在面试的时候面试官问你如何在ES中实现极速查询，其实就是问这个routing路由功能的。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">下面来演示一下：</span><br><span class="line">创建一个新的索引库，指定5个分片，0个副本。</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;rout&#x2F;&#39; -d&#39;&#123;&quot;settings&quot;:&#123;&quot;number_of_shards&quot;:5,&quot;number_of_replicas&quot;:0&#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">初始化数据：</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;rout&#x2F;_doc&#x2F;1?routing&#x3D;class1&#39; -d&#39;&#123;&quot;name&quot;:&quot;tom&quot;,&quot;age&quot;:18&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;rout&#x2F;_doc&#x2F;2?routing&#x3D;class1&#39; -d&#39;&#123;&quot;name&quot;:&quot;jack&quot;,&quot;age&quot;:29&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;rout&#x2F;_doc&#x2F;3?routing&#x3D;class1&#39; -d&#39;&#123;&quot;name&quot;:&quot;jessica&quot;,&quot;age&quot;:18&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;rout&#x2F;_doc&#x2F;4?routing&#x3D;class1&#39; -d&#39;&#123;&quot;name&quot;:&quot;dave&quot;,&quot;age&quot;:19&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;rout&#x2F;_doc&#x2F;5?routing&#x3D;class1&#39; -d&#39;&#123;&quot;name&quot;:&quot;lilei&quot;,&quot;age&quot;:18&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;rout&#x2F;_doc&#x2F;6?routing&#x3D;class1&#39; -d&#39;&#123;&quot;name&quot;:&quot;lili&quot;,&quot;age&quot;:29&#125;&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">如果是使用的JavaAPI，那么需要通过使用routing函数指定。</span><br><span class="line"></span><br><span class="line">private static void addIndexByJson(RestHighLevelClient client) throws IOException &#123;</span><br><span class="line">    IndexRequest request &#x3D; new IndexRequest(&quot;emp&quot;);</span><br><span class="line">    request.id(&quot;10&quot;);</span><br><span class="line">    String jsonString &#x3D; &quot;&#123;&quot; +</span><br><span class="line">            &quot;\&quot;name\&quot;:\&quot;jessic\&quot;,&quot; +</span><br><span class="line">            &quot;\&quot;age\&quot;:20&quot; +</span><br><span class="line">            &quot;&#125;&quot;;</span><br><span class="line">    request.source(jsonString, XContentType.JSON);</span><br><span class="line">    request.routing(&quot;class1&quot;);</span><br><span class="line">    &#x2F;&#x2F;执行</span><br><span class="line">    client.index(request, RequestOptions.DEFAULT);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">查看数据在分片中的分布情况，发现所有数据都在0号分片里面，说明routing参数生效了。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306112320577.png" alt="image-20230611232004430"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">通过代码查询的时候，可以通过偏好查询指定只查询0号分片里面的数据。</span><br><span class="line"></span><br><span class="line">SearchRequest searchRequest &#x3D; new SearchRequest();</span><br><span class="line">searchRequest.indices(&quot;rout&quot;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;指定分片查询方式</span><br><span class="line">searchRequest.preference(&quot;_shards:0&quot;);</span><br><span class="line"></span><br><span class="line">这样就可以查看所有的数据：</span><br><span class="line">数据总数：6</span><br><span class="line">&#123;&quot;name&quot;:&quot;tom&quot;,&quot;age&quot;:18&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;jack&quot;,&quot;age&quot;:29&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;jessica&quot;,&quot;age&quot;:18&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;dave&quot;,&quot;age&quot;:19&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;lilei&quot;,&quot;age&quot;:18&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;lili&quot;,&quot;age&quot;:29&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">通过偏好查询中的_shard手工指定分片编号在使用的时候不太友好，需要我们单独维护一份数据和分片之间的关系，比较麻烦。</span><br><span class="line">还有一种比较简单常用的方式是在查询的时候设置相同的路由参数，这样就可以快速查询到使用这个路由参数添加的数据了。</span><br><span class="line">底层其实是会计算这个路由参数对应的分片编号，最终到指定的分片中查询数据。</span><br><span class="line"></span><br><span class="line">SearchRequest searchRequest &#x3D; new SearchRequest();</span><br><span class="line">&#x2F;&#x2F;指定索引库，支持指定一个或者多个，也支持通配符，例如：user*</span><br><span class="line">searchRequest.indices(&quot;rout&quot;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;指定分片查询方式</span><br><span class="line">&#x2F;&#x2F;searchRequest.preference(&quot;_shards:0&quot;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;指定路由参数</span><br><span class="line">searchRequest.routing(&quot;class1&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">结果如下</span><br><span class="line">数据总数：6</span><br><span class="line">&#123;&quot;name&quot;:&quot;tom&quot;,&quot;age&quot;:18&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;jack&quot;,&quot;age&quot;:29&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;jessica&quot;,&quot;age&quot;:18&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;dave&quot;,&quot;age&quot;:19&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;lilei&quot;,&quot;age&quot;:18&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;lili&quot;,&quot;age&quot;:29&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">我们把routing参数修改一下，改为class2</span><br><span class="line">&#x2F;&#x2F;指定路由参数</span><br><span class="line">searchRequest.routing(&quot;class2&quot;);</span><br><span class="line"></span><br><span class="line">此时结果如下：</span><br><span class="line">数据总数：0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">从这可以看出来，这个routing参数确实生效了。</span><br><span class="line"></span><br><span class="line">注意：routing机制使用不好可能会导致数据倾斜，就是有的分片里面数据很多，有的分片里面数据很少。</span><br></pre></td></tr></table></figure><h3 id="ES的索引库模板-了解"><a href="#ES的索引库模板-了解" class="headerlink" title="ES的索引库模板(了解)"></a>ES的索引库模板(了解)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在实际工作中针对一批大量数据存储的时候需要使用多个索引库，如果手工指定每个索引库的配置信息的话就很麻烦了。</span><br><span class="line">配置信息其实主要就是settings和mapping。</span><br><span class="line">可以通过提前创建一个索引库模板，后期在创建索引库的时候，只要索引库的命名符合一定的要求就可以直接套用模板中的配置。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">下面看一个案例：</span><br><span class="line">首先创建两个索引库模板：</span><br><span class="line">第一个索引库模板：</span><br><span class="line">[root@bigdata01 ~]#curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;_template&#x2F;t_1&#39; -d &#39;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;template&quot; : &quot;*&quot;,</span><br><span class="line">    &quot;order&quot; : 0,</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">        &quot;number_of_shards&quot; : 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">        &quot;properties&quot;:&#123;</span><br><span class="line">            &quot;name&quot;:&#123;&quot;type&quot;:&quot;text&quot;&#125;,</span><br><span class="line">            &quot;age&quot;:&#123;&quot;type&quot;:&quot;integer&quot;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">第二个索引库模板：</span><br><span class="line">[root@bigdata01 ~]#curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;_template&#x2F;t_2&#39; -d &#39;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;template&quot; : &quot;te*&quot;,</span><br><span class="line">    &quot;order&quot; : 1,</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">        &quot;number_of_shards&quot; : 3</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">        &quot;properties&quot;:&#123;</span><br><span class="line">            &quot;name&quot;:&#123;&quot;type&quot;:&quot;text&quot;&#125;,</span><br><span class="line">            &quot;age&quot;:&#123;&quot;type&quot;:&quot;long&quot;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">注意：order值大的模板内容会覆盖order值小的。</span><br><span class="line"></span><br><span class="line">第一个索引库模板默认会匹配所有的索引库，第二个索引库模板只会匹配索引库名称以te开头的索引库，通过template属性配置的。</span><br><span class="line">如果我们创建的索引库名称满足第二个就会使用第二个模板，不满足的话才会使用第一个模板。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">下面创建一个索引库，索引库名称为：test10</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl  -XPUT &#39;http:&#x2F;&#x2F;localhost:9200&#x2F;test10&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">查看索引库test10的setting和mapping信息。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test10&#x2F;_settings?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;test10&quot; : &#123;</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">      &quot;index&quot; : &#123;</span><br><span class="line">        &quot;routing&quot; : &#123;</span><br><span class="line">          &quot;allocation&quot; : &#123;</span><br><span class="line">            &quot;include&quot; : &#123;</span><br><span class="line">              &quot;_tier_preference&quot; : &quot;data_content&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;number_of_shards&quot; : &quot;3&quot;,</span><br><span class="line">        &quot;provided_name&quot; : &quot;test10&quot;,</span><br><span class="line">        &quot;creation_date&quot; : &quot;1804935156129&quot;,</span><br><span class="line">        &quot;number_of_replicas&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;uuid&quot; : &quot;iJLdIRwQSpagzEtIu0LDEw&quot;,</span><br><span class="line">        &quot;version&quot; : &#123;</span><br><span class="line">          &quot;created&quot; : &quot;7130499&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;test10&#x2F;_mapping?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;test10&quot; : &#123;</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">      &quot;properties&quot; : &#123;</span><br><span class="line">        &quot;age&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;long&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;name&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">接下来再创建一个索引库，索引库名称为hello</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl  -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;hello&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;hello&#x2F;_settings?pretty&#39; </span><br><span class="line">&#123;</span><br><span class="line">  &quot;hello&quot; : &#123;</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">      &quot;index&quot; : &#123;</span><br><span class="line">        &quot;routing&quot; : &#123;</span><br><span class="line">          &quot;allocation&quot; : &#123;</span><br><span class="line">            &quot;include&quot; : &#123;</span><br><span class="line">              &quot;_tier_preference&quot; : &quot;data_content&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;number_of_shards&quot; : &quot;2&quot;,</span><br><span class="line">        &quot;provided_name&quot; : &quot;hello&quot;,</span><br><span class="line">        &quot;creation_date&quot; : &quot;1804935301339&quot;,</span><br><span class="line">        &quot;number_of_replicas&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;uuid&quot; : &quot;xkg-XXSQSHKcJ_5nxyTPTQ&quot;,</span><br><span class="line">        &quot;version&quot; : &#123;</span><br><span class="line">          &quot;created&quot; : &quot;7130499&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;hello&#x2F;_mapping?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;hello&quot; : &#123;</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">      &quot;properties&quot; : &#123;</span><br><span class="line">        &quot;age&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;integer&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;name&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">通过结果可以看出来hello这个索引库使用到了第一个索引库模板。</span><br><span class="line"></span><br><span class="line">后期想要查看索引库模板内容可以这样查看：</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;_template&#x2F;t_*?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;t_1&quot; : &#123;</span><br><span class="line">    &quot;order&quot; : 0,</span><br><span class="line">    &quot;index_patterns&quot; : [</span><br><span class="line">      &quot;*&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">      &quot;index&quot; : &#123;</span><br><span class="line">        &quot;number_of_shards&quot; : &quot;2&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">      &quot;properties&quot; : &#123;</span><br><span class="line">        &quot;name&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;age&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;integer&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;aliases&quot; : &#123; &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;t_2&quot; : &#123;</span><br><span class="line">    &quot;order&quot; : 1,</span><br><span class="line">    &quot;index_patterns&quot; : [</span><br><span class="line">      &quot;te*&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">      &quot;index&quot; : &#123;</span><br><span class="line">        &quot;number_of_shards&quot; : &quot;3&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">      &quot;properties&quot; : &#123;</span><br><span class="line">        &quot;name&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;age&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;long&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;aliases&quot; : &#123; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">想要删除索引库模板可以这样做：</span><br><span class="line">[root@bigdata01 ~]# curl -XDELETE &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;_template&#x2F;t_2&#39;</span><br></pre></td></tr></table></figure><h3 id="ES的索引库别名-了解"><a href="#ES的索引库别名-了解" class="headerlink" title="ES的索引库别名(了解)"></a>ES的索引库别名(了解)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在工作中使用ES收集应用的运行日志，每个星期创建一个索引库，这样时间长了就会创建很多的索引库，操作和管理的时候很不方便。</span><br><span class="line">由于新增索引数据只会操作当前这个星期的索引库，所以为了使用方便，我们就创建了两个索引库别名：curr_week和last_3_month。</span><br><span class="line"></span><br><span class="line">-curr_week：这个别名指向当前这个星期的索引库，新增数据使用这个索引库别名。</span><br><span class="line">-last_3_month：这个别名指向最近三个月的所有索引库，因为我们的需求是需要查询最近三个月的日志信息。</span><br><span class="line"></span><br><span class="line">后期只需要修改这两个别名和索引库之间的指向关系即可，应用层代码不需要任何改动。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">下面来演示一下这个案例：</span><br><span class="line">假设ES已经收集了一段时间的日志数据，每一星期都会创建一个索引库，所以目前创建了4个索引库：</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;log_20260301&#x2F;&#39; </span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;log_20260308&#x2F;&#39; </span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;log_20260315&#x2F;&#39; </span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;log_20260322&#x2F;&#39; </span><br><span class="line"></span><br><span class="line">分别向每个索引库里面初始化1条测试数据:</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;log_20260301&#x2F;_doc&#x2F;1&#39; -d&#39;&#123;&quot;log&quot;:&quot;info-&gt;20260301&quot;&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;log_20260308&#x2F;_doc&#x2F;1&#39; -d&#39;&#123;&quot;log&quot;:&quot;info-&gt;20260308&quot;&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;log_20260315&#x2F;_doc&#x2F;1&#39; -d&#39;&#123;&quot;log&quot;:&quot;info-&gt;20260315&quot;&#125;&#39;</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;log_20260322&#x2F;_doc&#x2F;1&#39; -d&#39;&#123;&quot;log&quot;:&quot;info-&gt;20260322&quot;&#125;&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">为了使用方便，我们创建了两个索引库别名：curr_week和last_3_month。</span><br><span class="line">curr_week指向最新的索引库：log_20260322</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;_aliases&#39; -d &#39;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;actions&quot; : [</span><br><span class="line">        &#123; &quot;add&quot; : &#123; &quot;index&quot; : &quot;log_20260322&quot;, &quot;alias&quot; : &quot;curr_week&quot; &#125; &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">last_3_month指向之前3个月内的索引库：</span><br><span class="line">可以同时增加多个索引别名。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;_aliases&#39; -d &#39;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;actions&quot; : [</span><br><span class="line">        &#123; &quot;add&quot; : &#123; &quot;index&quot; : &quot;log_20260301&quot;, &quot;alias&quot; : &quot;last_3_month&quot; &#125; &#125;,</span><br><span class="line">        &#123; &quot;add&quot; : &#123; &quot;index&quot; : &quot;log_20260308&quot;, &quot;alias&quot; : &quot;last_3_month&quot; &#125; &#125;,</span><br><span class="line">        &#123; &quot;add&quot; : &#123; &quot;index&quot; : &quot;log_20260315&quot;, &quot;alias&quot; : &quot;last_3_month&quot; &#125; &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">以后使用的时候，想要操作当前星期内的数据就使用curr_week这个索引库别名就行了。</span><br><span class="line">查询一下curr_week里面的数据：</span><br><span class="line">这里面就1条数据，和使用索引库log_20260322查询的结果是一样的。</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;curr_week&#x2F;_search?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;took&quot; : 987,</span><br><span class="line">  &quot;timed_out&quot; : false,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 2,</span><br><span class="line">    &quot;successful&quot; : 2,</span><br><span class="line">    &quot;skipped&quot; : 0,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;hits&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : &#123;</span><br><span class="line">      &quot;value&quot; : 1,</span><br><span class="line">      &quot;relation&quot; : &quot;eq&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;max_score&quot; : 1.0,</span><br><span class="line">    &quot;hits&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;log_20260322&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;_score&quot; : 1.0,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;log&quot; : &quot;info-&gt;20260322&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">再使用last_3_month查询一下数据：</span><br><span class="line">这里面返回了log_20260301、log_20260308和log_20260315这3个索引库里面的数据。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;last_3_month&#x2F;_search?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;took&quot; : 73,</span><br><span class="line">  &quot;timed_out&quot; : false,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 6,</span><br><span class="line">    &quot;successful&quot; : 6,</span><br><span class="line">    &quot;skipped&quot; : 0,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;hits&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : &#123;</span><br><span class="line">      &quot;value&quot; : 3,</span><br><span class="line">      &quot;relation&quot; : &quot;eq&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;max_score&quot; : 1.0,</span><br><span class="line">    &quot;hits&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;log_20260301&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;_score&quot; : 1.0,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;log&quot; : &quot;info-&gt;20260301&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;log_20260308&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;_score&quot; : 1.0,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;log&quot; : &quot;info-&gt;20260308&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;log_20260315&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;_score&quot; : 1.0,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;log&quot; : &quot;info-&gt;20260315&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">过了一个星期之后，又多了一个新的索引库：log_20260329</span><br><span class="line">创建这个索引库并初始化一条数据</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;log_20260329&#x2F;&#39; </span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;log_20260329&#x2F;_doc&#x2F;1&#39; -d&#39;&#123;&quot;log&quot;:&quot;info-&gt;20260329&quot;&#125;&#39;</span><br><span class="line"></span><br><span class="line">此时就需要修改curr_week别名指向的索引库了，需要先删除之前的关联关系，再增加新的。</span><br><span class="line">删除curr_week和log_20260322之间的关联关系。</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;_aliases&#39; -d &#39;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;actions&quot; : [</span><br><span class="line">        &#123; &quot;remove&quot; : &#123; &quot;index&quot; : &quot;log_20260322&quot;, &quot;alias&quot; : &quot;curr_week&quot; &#125; &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;&#39;</span><br><span class="line"></span><br><span class="line">新增curr_week和log_20260329之间的关联关系</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;_aliases&#39; -d &#39;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;actions&quot; : [</span><br><span class="line">        &#123; &quot;add&quot; : &#123; &quot;index&quot; : &quot;log_20260329&quot;, &quot;alias&quot; : &quot;curr_week&quot; &#125; &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;&#39;</span><br><span class="line"></span><br><span class="line">此时再查询curr_week中的数据其实就是查询索引库log_20260329里面的数据了。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">然后再把索引库log_20260322添加到last_3_month别名中：</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;_aliases&#39; -d &#39;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;actions&quot; : [</span><br><span class="line">        &#123; &quot;add&quot; : &#123; &quot;index&quot; : &quot;log_20260322&quot;, &quot;alias&quot; : &quot;last_3_month&quot; &#125; &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">这些关联别名映射关系和移除别名映射关系的操作需要写个脚本定时执行，这样就可以实现别名自动关联到指定索引库了。</span><br><span class="line"></span><br><span class="line">假设时间长了，我们如果忘记了这个别名下对应的都有哪些索引库，可以使用下面的方法查看一下：</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;_alias&#x2F;curr_week?pretty&#39;  </span><br><span class="line">&#123;</span><br><span class="line">  &quot;log_20260329&quot; : &#123;</span><br><span class="line">    &quot;aliases&quot; : &#123;</span><br><span class="line">      &quot;curr_week&quot; : &#123; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;_alias&#x2F;last_3_month?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;log_20260315&quot; : &#123;</span><br><span class="line">    &quot;aliases&quot; : &#123;</span><br><span class="line">      &quot;last_3_month&quot; : &#123; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;log_20260308&quot; : &#123;</span><br><span class="line">    &quot;aliases&quot; : &#123;</span><br><span class="line">      &quot;last_3_month&quot; : &#123; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;log_20260301&quot; : &#123;</span><br><span class="line">    &quot;aliases&quot; : &#123;</span><br><span class="line">      &quot;last_3_month&quot; : &#123; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;log_20260322&quot; : &#123;</span><br><span class="line">    &quot;aliases&quot; : &#123;</span><br><span class="line">      &quot;last_3_month&quot; : &#123; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">如果想知道哪些别名指向了这个索引，可以这样查看：</span><br><span class="line">[root@bigdata01 ~]#  curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;log_20260301&#x2F;_alias&#x2F;*?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;log_20260301&quot; : &#123;</span><br><span class="line">    &quot;aliases&quot; : &#123;</span><br><span class="line">      &quot;last_3_month&quot; : &#123; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">注意：针对3个月以前的索引基本上就很少再使用了，为了减少对ES服务器的性能损耗（主要是内存的损耗），建议把这些长时间不使用的索引库close掉，close之后这个索引库里面的索引数据就不支持读写操作了，close并不会删除索引库里面的数据，后期想要重新读写这个索引库里面的数据的话，可以通过open把索引库打开。</span><br><span class="line"></span><br><span class="line">将log_20260301索引库close掉：</span><br><span class="line">[root@bigdata01 ~]# curl -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;log_20260301&#x2F;_close&#39;</span><br><span class="line"></span><br><span class="line">此时再查看这个索引库的数据就查询不到了：</span><br><span class="line">会提示这个索引库已经被close掉了。</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;log_20260301&#x2F;_search?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;error&quot; : &#123;</span><br><span class="line">    &quot;root_cause&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot; : &quot;index_closed_exception&quot;,</span><br><span class="line">        &quot;reason&quot; : &quot;closed&quot;,</span><br><span class="line">        &quot;index_uuid&quot; : &quot;VGfSvKVJRjy5h3aCcsveKQ&quot;,</span><br><span class="line">        &quot;index&quot; : &quot;log_20260301&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;type&quot; : &quot;index_closed_exception&quot;,</span><br><span class="line">    &quot;reason&quot; : &quot;closed&quot;,</span><br><span class="line">    &quot;index_uuid&quot; : &quot;VGfSvKVJRjy5h3aCcsveKQ&quot;,</span><br><span class="line">    &quot;index&quot; : &quot;log_20260301&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;status&quot; : 400</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">注意：这些close之后的索引库需要从索引库别名中移除掉，否则会导致无法使用从索引库别名查询数据，因为这个索引库别名中映射的有已经close掉的索引库。</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;last_3_month&#x2F;_search?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;error&quot; : &#123;</span><br><span class="line">    &quot;root_cause&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot; : &quot;index_closed_exception&quot;,</span><br><span class="line">        &quot;reason&quot; : &quot;closed&quot;,</span><br><span class="line">        &quot;index_uuid&quot; : &quot;VGfSvKVJRjy5h3aCcsveKQ&quot;,</span><br><span class="line">        &quot;index&quot; : &quot;log_20260301&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;type&quot; : &quot;index_closed_exception&quot;,</span><br><span class="line">    &quot;reason&quot; : &quot;closed&quot;,</span><br><span class="line">    &quot;index_uuid&quot; : &quot;VGfSvKVJRjy5h3aCcsveKQ&quot;,</span><br><span class="line">    &quot;index&quot; : &quot;log_20260301&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;status&quot; : 400</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">接下来将log_20260301索引库重新open（打开）。</span><br><span class="line">[root@bigdata01 ~]# curl -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;log_20260301&#x2F;_open&#39;</span><br><span class="line"></span><br><span class="line">索引库open之后就可以查询了</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;log_20260301&#x2F;_search?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;took&quot; : 5,</span><br><span class="line">  &quot;timed_out&quot; : false,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 2,</span><br><span class="line">    &quot;successful&quot; : 2,</span><br><span class="line">    &quot;skipped&quot; : 0,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;hits&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : &#123;</span><br><span class="line">      &quot;value&quot; : 1,</span><br><span class="line">      &quot;relation&quot; : &quot;eq&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;max_score&quot; : 1.0,</span><br><span class="line">    &quot;hits&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;log_20260301&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;_score&quot; : 1.0,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;log&quot; : &quot;info-&gt;20260301&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">索引库别名也可以正常使用了</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">索引库close掉之后，虽然对ES服务器没有性能损耗了，但是对ES集群的磁盘占用还是存在的，所以可以根据需求，将一年以前的索引库彻底删除掉。</span><br></pre></td></tr></table></figure><h3 id="ES-SQL"><a href="#ES-SQL" class="headerlink" title="ES SQL"></a>ES SQL</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">针对ES中的结构化数据，使用SQL实现聚合统计会很方便，可以减少很多工作量。</span><br><span class="line"></span><br><span class="line">ES SQL支持常见的SQL语法，包括分组、排序、函数等，但是目前不支持JOIN。</span><br><span class="line"></span><br><span class="line">在使用的时候可以使用SQL命令行、RestAPI、JDBC、ODBC等方式操作。</span><br><span class="line">本地测试的时候使用SQL命令行更加方便。</span><br><span class="line">想要实现跨语言调用使用RestAPI更加方便。</span><br><span class="line">Java程序员使用JDBC方式更方便。</span><br></pre></td></tr></table></figure><h4 id="ES-SQL命令行下的使用"><a href="#ES-SQL命令行下的使用" class="headerlink" title="ES SQL命令行下的使用"></a>ES SQL命令行下的使用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[es@bigdata01 elasticsearch-7.13.4]$ bin&#x2F;elasticsearch-sql-cli http:&#x2F;&#x2F;bigdata01:9200</span><br><span class="line">sql&gt; select * from user;</span><br><span class="line">      age      |     name      </span><br><span class="line">---------------+---------------</span><br><span class="line">20             |tom            </span><br><span class="line">15             |tom            </span><br><span class="line">17             |jack           </span><br><span class="line">19             |jess           </span><br><span class="line">23             |mick           </span><br><span class="line">12             |lili           </span><br><span class="line">28             |john           </span><br><span class="line">30             |jojo           </span><br><span class="line">16             |bubu           </span><br><span class="line">21             |pig            </span><br><span class="line">19             |mary           </span><br><span class="line">60             |刘德华            </span><br><span class="line">20             |刘老二</span><br><span class="line">sql&gt; select * from user where age &gt; 20;</span><br><span class="line">      age      |     name      </span><br><span class="line">---------------+---------------</span><br><span class="line">23             |mick           </span><br><span class="line">28             |john           </span><br><span class="line">30             |jojo           </span><br><span class="line">21             |pig            </span><br><span class="line">60             |刘德华</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">如果想要实现模糊查询，使用sql中的like是否可行？</span><br><span class="line">sql&gt; select * from user where name like &#39;刘华&#39;;                     </span><br><span class="line">      age      |     name      </span><br><span class="line">---------------+---------------</span><br><span class="line">sql&gt; select * from user where name like &#39;刘%&#39;;  </span><br><span class="line">      age      |     name      </span><br><span class="line">---------------+---------------</span><br><span class="line">60             |刘德华            </span><br><span class="line">20             |刘老二</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">like这种方式其实就是普通的查询了，无法实现分词查询。</span><br><span class="line">想要实现分词查询，需要使用match。</span><br><span class="line"></span><br><span class="line">sql&gt; select * from user where match(name,&#39;刘华&#39;);       </span><br><span class="line">      age      |     name      </span><br><span class="line">---------------+---------------</span><br><span class="line">60             |刘德华            </span><br><span class="line">20             |刘老二</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">退出ES SQL命令行，需要输入exit；</span><br></pre></td></tr></table></figure><h4 id="RestAPI下ES-SQL的使用。"><a href="#RestAPI下ES-SQL的使用。" class="headerlink" title="RestAPI下ES SQL的使用。"></a>RestAPI下ES SQL的使用。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">查询user索引库中的数据，根据age倒序排序，获取前5条数据。</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;_sql?format&#x3D;txt&#39; -d&#39;</span><br><span class="line">&#123;</span><br><span class="line">&quot;query&quot;:&quot;select * from user order by age desc limit 5&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#39;</span><br><span class="line">      age      |     name      </span><br><span class="line">---------------+---------------</span><br><span class="line">60             |刘德华            </span><br><span class="line">30             |jojo           </span><br><span class="line">28             |john           </span><br><span class="line">23             |mick           </span><br><span class="line">21             |pig</span><br></pre></td></tr></table></figure><h4 id="JDBC操作ES-SQL"><a href="#JDBC操作ES-SQL" class="headerlink" title="JDBC操作ES SQL"></a>JDBC操作ES SQL</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">首先添加ES sql-jdbc的依赖。</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.elasticsearch.plugin&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;x-pack-sql-jdbc&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;7.13.4&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">package com.imooc.es;</span><br><span class="line"></span><br><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.DriverManager;</span><br><span class="line">import java.sql.ResultSet;</span><br><span class="line">import java.sql.Statement;</span><br><span class="line">import java.util.Properties;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * JDBC操作ES SQL</span><br><span class="line"> * Created by xuwei</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class EsJdbcOp &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception&#123;</span><br><span class="line">        &#x2F;&#x2F;指定jdbcUrl</span><br><span class="line">        String jdbcUrl &#x3D; &quot;jdbc:es:&#x2F;&#x2F;http:&#x2F;&#x2F;bigdata01:9200&#x2F;?timezone&#x3D;UTC+8&quot;;</span><br><span class="line">        Properties properties &#x3D; new Properties();</span><br><span class="line">        &#x2F;&#x2F;获取JDBC连接</span><br><span class="line">        Connection conn &#x3D; DriverManager.getConnection(jdbcUrl, properties);</span><br><span class="line">        Statement stmt &#x3D; conn.createStatement();</span><br><span class="line">        ResultSet results &#x3D; stmt.executeQuery(&quot;select name,age from user order by age desc limit 5&quot;);</span><br><span class="line">        while (results.next())&#123;</span><br><span class="line">            String name &#x3D; results.getString(1);</span><br><span class="line">            int age &#x3D; results.getInt(2);</span><br><span class="line">            System.out.println(name+&quot;--&quot;+age);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;关闭连接</span><br><span class="line">        stmt.close();</span><br><span class="line">        conn.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注意：jdbc这种方式目前无法免费使用，需要购买授权。</span><br><span class="line"></span><br><span class="line">Exception in thread &quot;main&quot; java.sql.SQLInvalidAuthorizationSpecException: current license is non-compliant for [jdbc]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">所以在工作中常用的是RestAPI这种方式。</span><br></pre></td></tr></table></figure><h3 id="ES优化策略"><a href="#ES优化策略" class="headerlink" title="ES优化策略"></a>ES优化策略</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">1.ES中Too many open files的问题。</span><br><span class="line"></span><br><span class="line">ES中的索引数据都是存储在磁盘文件中的，每一条数据在底层都会产生一份索引片段文件</span><br><span class="line">这些索引数据默认的存储目录是在ES安装目录下的data目录里面。</span><br><span class="line"></span><br><span class="line">[es@bigdata01 index]$ pwd</span><br><span class="line">&#x2F;data&#x2F;soft&#x2F;elasticsearch-7.13.4&#x2F;data&#x2F;nodes&#x2F;0&#x2F;indices&#x2F;28q_rMHAR4GJBImzb40woA&#x2F;0&#x2F;index</span><br><span class="line">[es@bigdata01 index]$ ll</span><br><span class="line">total 52</span><br><span class="line">-rw-rw-r--. 1 es es  479 Mar 12 15:21 _0.cfe</span><br><span class="line">-rw-rw-r--. 1 es es 3302 Mar 12 15:21 _0.cfs</span><br><span class="line">-rw-rw-r--. 1 es es  363 Mar 12 15:21 _0.si</span><br><span class="line">-rw-rw-r--. 1 es es  479 Mar 12 15:21 _1.cfe</span><br><span class="line">-rw-rw-r--. 1 es es 2996 Mar 12 15:21 _1.cfs</span><br><span class="line">-rw-rw-r--. 1 es es  363 Mar 12 15:21 _1.si</span><br><span class="line">-rw-rw-r--. 1 es es  923 Mar 12 16:28 _2_1.fnm</span><br><span class="line">-rw-rw-r--. 1 es es  103 Mar 12 16:28 _2_1_Lucene80_0.dvd</span><br><span class="line">-rw-rw-r--. 1 es es  160 Mar 12 16:28 _2_1_Lucene80_0.dvm</span><br><span class="line">-rw-rw-r--. 1 es es  479 Mar 12 16:28 _2.cfe</span><br><span class="line">-rw-rw-r--. 1 es es 3718 Mar 12 16:28 _2.cfs</span><br><span class="line">-rw-rw-r--. 1 es es  363 Mar 12 16:28 _2.si</span><br><span class="line">-rw-rw-r--. 1 es es  533 Mar 12 16:33 segments_4</span><br><span class="line">-rw-rw-r--. 1 es es    0 Mar 12 15:21 write.lock</span><br><span class="line"></span><br><span class="line">注意：路径中的28q_rMHAR4GJBImzb40woA表示是索引库的UUID。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306112348016.png" alt="image-20230611234857593"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ES在查询索引库里面数据的时候需要读取所有的索引片段，如果索引库中数据量比较多，那么ES在查询的时候就需要读取很多索引片段文件，此时可能就会达到Linux系统的极限，因为Linux会限制系统内最大文件打开数。</span><br><span class="line">这个最大文件打开数的的配置在安装ES集群的时候我们已经修改过了：</span><br><span class="line">主要就是这些参数：</span><br><span class="line">[root@bigdata01 soft]# vi &#x2F;etc&#x2F;security&#x2F;limits.conf </span><br><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 131072</span><br><span class="line">* soft nproc 2048</span><br><span class="line">* hard nproc 4096</span><br><span class="line"></span><br><span class="line">理论上来说，不管我们将最大文件打开数修改为多大，在使用的时候都有可能会出问题，因为ES中的数据是越来越多的，那如何解决？</span><br><span class="line">其实也不用过于担心，因为ES中默认会有一个自动的索引片段合并机制，这样可以保证ES中不会产生过多的索引片段。</span><br><span class="line">只要是单个索引片段文件小于5G的，在自动索引片段合并机制触发的时候都会进行合并。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">2.索引合并优化，清除标记为删除状态的索引数据。</span><br><span class="line"></span><br><span class="line">咱们前面分析过，ES中的删除并不是真正的删除，只是会给数据标记一个删除状态，索引片段在合并的时候，是会把索引片段中标记为删除的数据真正删掉，这样也是可以提高性能的，因为标记为删除状态的数据是会参与查询的，只不过会被过滤掉。</span><br><span class="line"></span><br><span class="line">索引片段合并除了可以避免产生Too many open files这个问题，其实它也是可以显著提升查询性能的，因为我们读取一个中等大小的文件肯定是比读取很多个小文件效率更高的</span><br><span class="line"></span><br><span class="line">除了等待自动的索引片段合并，也可以手工执行索引片段合并操作，但是要注意：索引片段合并操作是比较消耗系统IO资源的，不要在业务高峰期执行，也没必要频繁调用，可以每天凌晨执行一次。</span><br><span class="line"></span><br><span class="line">[root@bigdata01 ~]# curl -XPOST &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;stu&#x2F;_forcemerge&#39;</span><br><span class="line">合并之后会的索引片段就变成了这样，这些文件其实属于一个索引片段，都是以_3开头的：</span><br><span class="line">[es@bigdata01 index]$ ll</span><br><span class="line">total 72</span><br><span class="line">-rw-rw-r--. 1 es es 158 Mar 14 15:47 _3.fdm</span><br><span class="line">-rw-rw-r--. 1 es es 527 Mar 14 15:47 _3.fdt</span><br><span class="line">-rw-rw-r--. 1 es es  64 Mar 14 15:47 _3.fdx</span><br><span class="line">-rw-rw-r--. 1 es es 922 Mar 14 15:47 _3.fnm</span><br><span class="line">-rw-rw-r--. 1 es es 202 Mar 14 15:47 _3.kdd</span><br><span class="line">-rw-rw-r--. 1 es es  69 Mar 14 15:47 _3.kdi</span><br><span class="line">-rw-rw-r--. 1 es es 200 Mar 14 15:47 _3.kdm</span><br><span class="line">-rw-rw-r--. 1 es es 159 Mar 14 15:47 _3_Lucene80_0.dvd</span><br><span class="line">-rw-rw-r--. 1 es es 855 Mar 14 15:47 _3_Lucene80_0.dvm</span><br><span class="line">-rw-rw-r--. 1 es es  78 Mar 14 15:47 _3_Lucene84_0.doc</span><br><span class="line">-rw-rw-r--. 1 es es  92 Mar 14 15:47 _3_Lucene84_0.pos</span><br><span class="line">-rw-rw-r--. 1 es es 305 Mar 14 15:47 _3_Lucene84_0.tim</span><br><span class="line">-rw-rw-r--. 1 es es  74 Mar 14 15:47 _3_Lucene84_0.tip</span><br><span class="line">-rw-rw-r--. 1 es es 261 Mar 14 15:47 _3_Lucene84_0.tmd</span><br><span class="line">-rw-rw-r--. 1 es es  59 Mar 14 15:47 _3.nvd</span><br><span class="line">-rw-rw-r--. 1 es es 103 Mar 14 15:47 _3.nvm</span><br><span class="line">-rw-rw-r--. 1 es es 575 Mar 14 15:47 _3.si</span><br><span class="line">-rw-rw-r--. 1 es es 316 Mar 14 15:47 segments_5</span><br><span class="line">-rw-rw-r--. 1 es es   0 Mar 12 15:21 write.lock</span><br><span class="line"></span><br><span class="line">如果一个索引库中的数据已经非常多了，手工执行索引片段合并操作可能会产生一些非常大的索引片段（超过5G的），如果继续向这个索引库里面写入新的数据，那么ES的自动索引片段合并机制就不会再考虑这些非常大的索引片段了（超过5G的），这样会导致索引库中保留了非常大的索引片段，从而降低搜索性能。</span><br><span class="line"></span><br><span class="line">这种问题该如何解决呢？往下面继续看！</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">3.分片和副本个数调整</span><br><span class="line"></span><br><span class="line">分片多的话，可以提升建立索引的能力，单个索引库，建议使用5-20个分片比较合适。</span><br><span class="line">分片数过少或过多，都会降低检索效率。</span><br><span class="line">分片数过多会导致检索时打开比较多的文件，另外也会导致多台服务器之间的通讯。</span><br><span class="line">而分片数过少会导致单个分片索引过大，所以检索速度也会慢。</span><br><span class="line">建议单个分片存储20G左右的索引数据【最高也不要超过50G，否则性能会很差】</span><br><span class="line">所以，大致有一个公式：分片数量&#x3D;数据总量&#x2F;20G</span><br><span class="line"></span><br><span class="line">当数据规模超过单个索引库最大存储能力的时候，只需要新建一个索引库即可，所以ES中的海量数据存储能力是需要依靠多个索引库的，这样就可以解决前面所说的索引库中单个索引片段过大的问题。</span><br><span class="line"></span><br><span class="line">副本多的话，理论上来说可以提升检索的能力，但是如果设置很多副本的话也会对服务器造成额外的压力，因为主分片需要给所有副本分片同步数据，所以建议最多设置1-2个副本即可。</span><br><span class="line"></span><br><span class="line">注意：从ES7.x版本开始，集群中每个节点默认支持最多1000个了片，这块主要是考虑到单个节点的性能问题，如果集群内每个节点的性能都比较强，当然也是支持修改的。</span><br><span class="line"></span><br><span class="line">先查看一下现在集群默认的参数配置：</span><br><span class="line">现在里面的参数都是空的。</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;_cluster&#x2F;settings?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;persistent&quot; : &#123; &#125;,</span><br><span class="line">  &quot;transient&quot; : &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">修改节点支持的最大分片数量</span><br><span class="line">[root@bigdata01 ~]# curl -H &quot;Content-Type: application&#x2F;json&quot; -XPUT &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;_cluster&#x2F;settings&#39;  -d &#39;&#123; &quot;persistent&quot;: &#123; &quot;cluster.max_shards_per_node&quot;: &quot;10000&quot; &#125; &#125;&#39;</span><br><span class="line"></span><br><span class="line">重新查询集群最新的参数配置：</span><br><span class="line">[root@bigdata01 ~]# curl -XGET &#39;http:&#x2F;&#x2F;bigdata01:9200&#x2F;_cluster&#x2F;settings?pretty&#39;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;persistent&quot; : &#123;</span><br><span class="line">    &quot;cluster&quot; : &#123;</span><br><span class="line">      &quot;max_shards_per_node&quot; : &quot;10000&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;transient&quot; : &#123; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">4.初始化数据时，建议将副本数设置为0。</span><br><span class="line"></span><br><span class="line">如果是在项目初期，ES集群刚安装好，需要向里面批量初始化大量数据，此时建议将副本数设置为0，这样是可以显著提高入库效率的。</span><br><span class="line">如果有副本的话，在批量初始化数据的同时，索引库的主分片还需要负责向副本分片同步数据，这样会影响数据的入库性能。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5. 针对不使用的index，建议close，减少性能损耗。</span><br><span class="line">具体的操作方式在前面讲索引库别名的时候已经讲过了。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">6.调整ES的JVM内存大小，单个ES实例最大不超过32G。</span><br><span class="line"></span><br><span class="line">单个ES实例官方建议最大使用32G内存，如果超过这个内存ES也使用不了，这样会造成资源浪费。</span><br><span class="line">所以在前期申请ES集群机器的时候，建议单机内存在32G左右即可。</span><br><span class="line">如果由于历史遗留问题导致每台机器的内存都很大，假设是128G的，如果在这台机器上只部署一个ES实例，会造成内存资源浪费，此时有一种取巧的方式，在同一台机器上部署多个ES实例，只需要让这台机器中的每个ES实例监听不同的端口就行了。</span><br><span class="line">这样这个128G内存的机器理论上至少可以部署4个ES实例。</span><br><span class="line">但是这样会存在一个弊端，如果后期这台机器出现了故障，那么ES集群会同时丢失4个节点，可能会丢数据，所以还是尽量避免这种情况。</span><br></pre></td></tr></table></figure><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据开发工程师" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
      <category term="大数据" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-第十七周-Flink极速上手篇-Flink新版本1.12以上-3</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC%E5%8D%81%E4%B8%83%E5%91%A8-Flink%E6%9E%81%E9%80%9F%E4%B8%8A%E6%89%8B%E7%AF%87-Flink%E6%96%B0%E7%89%88%E6%9C%AC1-12%E4%BB%A5%E4%B8%8A-3.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC%E5%8D%81%E4%B8%83%E5%91%A8-Flink%E6%9E%81%E9%80%9F%E4%B8%8A%E6%89%8B%E7%AF%87-Flink%E6%96%B0%E7%89%88%E6%9C%AC1-12%E4%BB%A5%E4%B8%8A-3.html</id>
    <published>2023-06-02T09:40:07.000Z</published>
    <updated>2023-06-02T10:01:55.124Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="Flink新版本1-12以上-3"><a href="#Flink新版本1-12以上-3" class="headerlink" title="Flink新版本1.12以上-3"></a>Flink新版本1.12以上-3</h1><h2 id="Checkpoint与State剖析"><a href="#Checkpoint与State剖析" class="headerlink" title="Checkpoint与State剖析"></a>Checkpoint与State剖析</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">前面我们已经掌握了Checkpoint和State使用，下面我们来从底层原理层面深度分析一下Checkpoint和State的细节流程。</span><br><span class="line"></span><br><span class="line">首先是checkpoint的生成过程</span><br></pre></td></tr></table></figure><h3 id="Checkpoint的生成过程"><a href="#Checkpoint的生成过程" class="headerlink" title="Checkpoint的生成过程"></a>Checkpoint的生成过程</h3><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306021740884.png" alt="image-20230602174046655"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">我们先整体看一下这个图：</span><br><span class="line"></span><br><span class="line">首先看图中左边的内容，这块内容表示是输入数据流中的数据以及对应的偏移量。</span><br><span class="line">其中里面的send、follow是具体的数据，下面的1、2、3、4、5、6是数据对应的偏移量。</span><br><span class="line">这个输入数据流表示是直播间内用户产生的实时行为数据，send表示送礼，follow表示关注</span><br><span class="line">在这里我们需要对这些用户行为数据实时统计，统计出每种行为出现的总次数。</span><br><span class="line"></span><br><span class="line">中间的[send ,4]表示目前消费者消费到的那条数据及对应的偏移量，这个信息会存储在基于内存的状态中。</span><br><span class="line"></span><br><span class="line">右边的[count(send), 3]、[count(follow) ,1],这些是实时汇总的结果，这些数据也会存储在基于内存的状态中。</span><br><span class="line"></span><br><span class="line">Flink触发执行Checkpoint之后会把内存中存储的状态数据写入到下面的持久化存储中。</span><br><span class="line"></span><br><span class="line">下面我们来详细看一下checkpoint的执行流程。</span><br><span class="line">1：当消费到[send，4]这条数据时，正好达到了checkpoint的执行时机，此时JobManager中的checkpoint coordinator会触发checkpoint开始执行。</span><br><span class="line">此时状态中存储的消费偏移量是4</span><br><span class="line"></span><br><span class="line">2-1：checkpoint真正开始执行的时候，他会先把状态中维护的消费偏移量写入到持久化存储中。</span><br><span class="line"></span><br><span class="line">2-2：写入结束后，DataSource组件会把状态的存储路径信息反馈给JobManager中的checkpoint coordinator。</span><br><span class="line"></span><br><span class="line">3-1、3-2、4-1、4-2：接着后面算子中的状态数据：[count(send), 3]、[count(follow) ,1]也会进行同样的步骤</span><br><span class="line"></span><br><span class="line">5：等所有的算子都完成了状态数据的持久化存储，也就是说 checkpoint coordinator 收集到了所有任务反馈给他的状态存储路径，这个时候就认为这一次的checkpoint真正执行成功了，最后他会向持久化存储中再备份一个 checkpoint metadata元数据文件，那么本次整个checkpoint流程就完成了。如果中间有任何一个阶段不成功，那么本次checkpoint就宣告失败。</span><br><span class="line"></span><br><span class="line">当达到下一次checkpoint执行时机的时候，会继续重复前面的执行流程。</span><br><span class="line"></span><br><span class="line">这就是checkpoint的生成过程。</span><br></pre></td></tr></table></figure><h3 id="Checkpoint的恢复过程"><a href="#Checkpoint的恢复过程" class="headerlink" title="Checkpoint的恢复过程"></a>Checkpoint的恢复过程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">下面我们来分析一下Checkpoint的恢复过程。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306021745635.png" alt="image-20230602174549554"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">继续接着前面的业务流程，前面我们在消费完第4条数据的时候触发了一次checkpoint。</span><br><span class="line">checkpoint执行结束后，紧接着消费者开始消费第5条数据，当把第5条数据follow消费出来之后，在计算的时候由于资源问题导致出现了故障，此时任务异常结束了。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306021746680.png" alt="image-20230602174608348"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">任务结束后，Flink尝试重启任务，并恢复数据到之前的状态。</span><br><span class="line">在最开始重启任务的时候，任务中基于内存的状态都是空的。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306021746670.png" alt="image-20230602174632536"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当任务重新启动之后，会根据指定的快照数据进行恢复，此时上一次在快照时保存的偏移量4、[count(send), 3]、[count(follow) ,1]这些数据对应的都恢复到了正确的位置。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306021746394.png" alt="image-20230602174650649"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">恢复成功之后，任务会基于之前的偏移量4继续往后面消费，所以又把[follow，5]这条数据消费出来了。</span><br><span class="line">此时算子中计算的结果，count(follow)就变成了2。</span><br><span class="line">这就是正常的数据处理流程了。</span><br></pre></td></tr></table></figure><h3 id="Checkpoint-Barrier"><a href="#Checkpoint-Barrier" class="headerlink" title="Checkpoint Barrier"></a>Checkpoint Barrier</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在Checkpoint执行过程中，还有一个重要的角色，Barrier。</span><br><span class="line">可以将Barrier认为是一个标记或者说是一条特殊的数据。</span><br><span class="line"></span><br><span class="line">Flink任务在每次触发Checkpoint的时候都会由JobManager的Checkpoint Coordinator向Source端插入一个Barrier。</span><br><span class="line"></span><br><span class="line">Barrier中包含有一个Checkpoint ID，用于标识它属于哪一个Checkpoint。</span><br><span class="line"></span><br><span class="line">Barrier中的Checkpoint ID是严格单调递增的(自增ID)。</span><br><span class="line">看下面这个图</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306021747611.png" alt="image-20230602174724039"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">图里面的A\B\C\D这些属于数据流中的正常数据。</span><br><span class="line">其中1和2是checkpoint ID，这是特殊的Barrier标记数据。</span><br><span class="line">每次触发checkpoint的时候，JobManager的Checkpoint Coordinator都会向数据流中插入一个Barrier。</span><br><span class="line"></span><br><span class="line">这个Barrier标记在源码中对应的类是CheckpointBarrier</span><br><span class="line">可以大致看一下他的代码：</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public class CheckpointBarrier extends RuntimeEvent &#123;</span><br><span class="line"></span><br><span class="line">    private final long id;</span><br><span class="line">    private final long timestamp;</span><br><span class="line">    private final CheckpointOptions checkpointOptions;</span><br><span class="line"></span><br><span class="line">    public CheckpointBarrier(long id, long timestamp, CheckpointOptions checkpointOptions) &#123;</span><br><span class="line">        this.id &#x3D; id;</span><br><span class="line">        this.timestamp &#x3D; timestamp;</span><br><span class="line">        this.checkpointOptions &#x3D; checkNotNull(checkpointOptions);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">从这可以看出来他里面除了包含一个自增的id字段，还有一个时间戳字段，以及保存checkpoint参数的字段。</span><br><span class="line"></span><br><span class="line">Barrier中的Checkpoint ID其实就是之前我们在任务界面中查看Checkpoint相关信息时显示的那个ID。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306021748333.png" alt="image-20230602174822221"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Checkpoint在执行的时候，Source在接收到Barrier，会把Barrier广播发送到下游算子，当下游算子A接收到了所有输入数据流的Barrier时，意味着算子A已经处理完了截止到当前Checkpoint的数据。</span><br><span class="line"></span><br><span class="line">然后算子A就可以执行Checkpoint，并将Barrier广播发送至下游算子。</span><br><span class="line"></span><br><span class="line">Barrier的最大作用是用于算子各个子任务之间对齐检查点，Barrier对齐之后才会保存状态数据，最终保持一致性语义。</span><br><span class="line"></span><br><span class="line">怎么理解呢？</span><br><span class="line"></span><br><span class="line">看下面这个图：</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202306021748577.png" alt="image-20230602174840536"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Source会把Barrier广播发送到下游算子A。</span><br><span class="line"></span><br><span class="line">Source的并行度为2，所以Source的每个子任务都会给下游的算子广播发送Barrier。</span><br><span class="line"></span><br><span class="line">算子A在这里也产生了2个子任务，对应的是算子A-1和算子A-2，每个子任务负责处理一部分数据</span><br><span class="line"></span><br><span class="line">在这里Source-1这个子任务会给下游的算子A-1和算子A-2分别发送Barrier。</span><br><span class="line"></span><br><span class="line">Source-2这个子任务也会给下游的算子A-1和算子A-2分别发送Barrier。</span><br><span class="line"></span><br><span class="line">当算子A-1收到Source-1和Source-2这两个子任务发给他的Barrier标记时，他才会真正执行checkpoint，因为这个时候才实现了Barrier对齐，也就意味着这个子任务把本次checkpoint之前需要处理的数据都处理完了，这个时候执行checkpoint操作，才能保证数据的一致性。</span><br><span class="line"></span><br><span class="line">算子A-2也是这样的。</span><br></pre></td></tr></table></figure><h4 id="Kafka-Flink-Kafka实现端到端一致性"><a href="#Kafka-Flink-Kafka实现端到端一致性" class="headerlink" title="Kafka+Flink+Kafka实现端到端一致性"></a>Kafka+Flink+Kafka实现端到端一致性</h4><h3 id="Flink-Kafka相关源码分析"><a href="#Flink-Kafka相关源码分析" class="headerlink" title="Flink-Kafka相关源码分析"></a>Flink-Kafka相关源码分析</h3><h2 id="Kafka连接器新API的使用"><a href="#Kafka连接器新API的使用" class="headerlink" title="Kafka连接器新API的使用"></a>Kafka连接器新API的使用</h2><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>找工作知识复习</title>
    <link href="http://tianyong.fun/%E6%89%BE%E5%B7%A5%E4%BD%9C%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0.html"/>
    <id>http://tianyong.fun/%E6%89%BE%E5%B7%A5%E4%BD%9C%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0.html</id>
    <published>2023-05-25T08:59:41.000Z</published>
    <updated>2023-05-27T17:14:09.354Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="找工作知识复习"><a href="#找工作知识复习" class="headerlink" title="找工作知识复习"></a>找工作知识复习</h1><h2 id="直播平台三度关系推荐"><a href="#直播平台三度关系推荐" class="headerlink" title="直播平台三度关系推荐"></a>直播平台三度关系推荐</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.技术选型：</span><br><span class="line">数据采集聚合</span><br><span class="line">数据分发</span><br><span class="line">数据存储</span><br><span class="line">数据计算</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2.整体架构</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3.Neo4j安装，概念，创建节点和关系，查找，更新，索引，批量导入</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4.数据来源分析，模拟产生</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5.zookeeper,kafka启动-&gt;创建topic-&gt;数据分发-&gt;数据落盘</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6.第二个任务：实时维护粉丝关注</span><br></pre></td></tr></table></figure><h2 id="Java常识"><a href="#Java常识" class="headerlink" title="Java常识"></a>Java常识</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">继承-&gt;extends-&gt;protected-&gt;super-&gt;构造函数第一行应该是父类的某个构造函数，否则默认父类无参数构造函数-&gt;限制继承final和sealed、permits-&gt;覆写和重载-&gt;多态-&gt;向上转型</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">抽象方法-&gt;抽象类-&gt;继承抽象类时必须覆写(否则还是抽象类)-&gt;可以有实例字段和方法</span><br><span class="line"></span><br><span class="line">接口-&gt;interface-&gt;implements-&gt;一个类可以继承多个接口-&gt;一个接口可以extends一个接口-&gt;不能有实例字段(可以有静态字段，且要有final修饰)和方法-&gt;可以有default方法</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">静态字段static-&gt;静态方法</span><br></pre></td></tr></table></figure><h2 id="IDEA常识"><a href="#IDEA常识" class="headerlink" title="IDEA常识"></a>IDEA常识</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">内存设置：</span><br><span class="line">一个全局内存设置，一个为单独程序设置运行时的内存</span><br></pre></td></tr></table></figure><h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><pre><code></code></pre><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-第十八周 直播平台三度关系推荐v2.0-4</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC%E5%8D%81%E5%85%AB%E5%91%A8-%E7%9B%B4%E6%92%AD%E5%B9%B3%E5%8F%B0%E4%B8%89%E5%BA%A6%E5%85%B3%E7%B3%BB%E6%8E%A8%E8%8D%90v2-0-4.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC%E5%8D%81%E5%85%AB%E5%91%A8-%E7%9B%B4%E6%92%AD%E5%B9%B3%E5%8F%B0%E4%B8%89%E5%BA%A6%E5%85%B3%E7%B3%BB%E6%8E%A8%E8%8D%90v2-0-4.html</id>
    <published>2023-05-17T07:34:44.000Z</published>
    <updated>2023-05-17T07:39:42.425Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="第十八周-直播平台三度关系推荐v2-0-4"><a href="#第十八周-直播平台三度关系推荐v2-0-4" class="headerlink" title="第十八周 直播平台三度关系推荐v2.0-4"></a>第十八周 直播平台三度关系推荐v2.0-4</h1><h2 id="数据加工总线之SparkSQL计算引擎开发"><a href="#数据加工总线之SparkSQL计算引擎开发" class="headerlink" title="数据加工总线之SparkSQL计算引擎开发"></a>数据加工总线之SparkSQL计算引擎开发</h2><h3 id="核心功能点梳理"><a href="#核心功能点梳理" class="headerlink" title="核心功能点梳理"></a>核心功能点梳理</h3><h3 id="开发基于SparkSQL的计算引擎"><a href="#开发基于SparkSQL的计算引擎" class="headerlink" title="开发基于SparkSQL的计算引擎"></a>开发基于SparkSQL的计算引擎</h3><h2 id="数据加工总线之FlinkSQL计算引擎开发"><a href="#数据加工总线之FlinkSQL计算引擎开发" class="headerlink" title="数据加工总线之FlinkSQL计算引擎开发"></a>数据加工总线之FlinkSQL计算引擎开发</h2><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据开发工程师" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
      <category term="大数据" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="直播平台三度关系推荐v2.0" scheme="http://tianyong.fun/tags/%E7%9B%B4%E6%92%AD%E5%B9%B3%E5%8F%B0%E4%B8%89%E5%BA%A6%E5%85%B3%E7%B3%BB%E6%8E%A8%E8%8D%90v2-0/"/>
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-第十八周 直播平台三度关系推荐v2.0-3</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC%E5%8D%81%E5%85%AB%E5%91%A8-%E7%9B%B4%E6%92%AD%E5%B9%B3%E5%8F%B0%E4%B8%89%E5%BA%A6%E5%85%B3%E7%B3%BB%E6%8E%A8%E8%8D%90v2-0-3.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC%E5%8D%81%E5%85%AB%E5%91%A8-%E7%9B%B4%E6%92%AD%E5%B9%B3%E5%8F%B0%E4%B8%89%E5%BA%A6%E5%85%B3%E7%B3%BB%E6%8E%A8%E8%8D%90v2-0-3.html</id>
    <published>2023-05-03T09:35:36.000Z</published>
    <updated>2023-05-17T07:39:38.772Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="第十八周-直播平台三度关系推荐v2-0-3"><a href="#第十八周-直播平台三度关系推荐v2-0-3" class="headerlink" title="第十八周 直播平台三度关系推荐v2.0-3"></a>第十八周 直播平台三度关系推荐v2.0-3</h1><h2 id="数据中台的前世今生"><a href="#数据中台的前世今生" class="headerlink" title="数据中台的前世今生"></a>数据中台的前世今生</h2><h3 id="什么是中台"><a href="#什么是中台" class="headerlink" title="什么是中台"></a>什么是中台</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">中台是2019年开始火起来的一个概念，它最早是由阿里在2015年提出的“大中台，小前台”战略中延伸出来的概念，灵感来源于一家芬兰的小公司Supercell——一家仅有300名员工，却接连推出爆款游戏，是全球最会赚钱的明星游戏公司。2015年年中,马云带领阿里巴巴集团高管,拜访了位于芬兰赫尔辛基的这家移动游戏公司，这家看似很小的公司，设置了一个强大的技术平台，来支持众多的小团队进行游戏研发。这样一来，他们就可以专心创新，不用担心基础却又至关重要的技术支撑问题。恰恰是这家小公司，开创了中台的“玩法”，并将其运用到了极致。</span><br><span class="line">下面我们举个例子，通过IT行业的发展来进一步理解什么是中台？为什么要出现中台？</span><br></pre></td></tr></table></figure><p>传统IT时代</p><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305162119743.png" alt="image-20230516211621053"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在传统IT时代，无论项目如何复杂，都可以分为 前台 和 后台 两部分，简单明了。</span><br><span class="line">每一个业务线负责维护自己的前台和后台</span><br><span class="line">这里的前台不仅仅包含前端页面，还包含提供的各种服务</span><br><span class="line">后台指的是底层的服务，例如我们提取的一些工具服务</span><br><span class="line">在当时，项目的发展相对稳定，并不需要像互联网时代那么快速的去迭代和试错，所以这种架构没有什么问题。</span><br></pre></td></tr></table></figure><h4 id="传统IT时代存在的问题"><a href="#传统IT时代存在的问题" class="headerlink" title="传统IT时代存在的问题"></a>传统IT时代存在的问题</h4><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305162119728.png" alt="image-20230516211851281"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">发展到现在这个时代，传统的前台+后台这种架构是存在一些问题的，每一个产品线之间都会有一些重复的内容，例如这里面的用户模块和支付模块，每一个产品线都需要，如果每一个产品线都是自己开发自己的，这样就会有三套用户模块和支付模块，对于集团公司而言，这就叫重复造轮子。如果后期又增加了新的产品线，还要重新再开发用户模块和支付模块。</span><br><span class="line"></span><br><span class="line">所以说为了提高开发效率，我们有必要抽取出一个中间组织，为所有的产品线提供一些公共资源，这个中间组织就是中台。</span><br><span class="line"></span><br><span class="line">下面来看一个引入了中台之后的案例。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305162122689.png" alt="image-20230516212224583"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">本来是各个部门都建立了自己的数据采集，数仓，数据模型等内容，重复开发，浪费成本。各个部门的数据也没有打通，数据很难产生很大的价值。</span><br><span class="line">引入了中台之后，构建了统一的数据采集、统一的数据资产中心、统一的数据建模、分析与挖掘、统一的数据服务，最终向各部门统一提供数据支撑。</span><br></pre></td></tr></table></figure><h4 id="阿里”大中台小前台架构-”"><a href="#阿里”大中台小前台架构-”" class="headerlink" title="阿里”大中台小前台架构 ”"></a>阿里”大中台小前台架构 ”</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">接下来这个是阿里的大中台 小前台架构</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305162125389.png" alt="image-20230516212502449"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">阿里许多产品线的共通业务经过下沉，形成了中台的各种业务中心，为各大业务线提供支持。</span><br><span class="line">这样前台应用就会更加灵活，想要构建一个新的前台应用也是比较快速容易的。</span><br></pre></td></tr></table></figure><h4 id="中台架构主要解决的问题"><a href="#中台架构主要解决的问题" class="headerlink" title="中台架构主要解决的问题"></a>中台架构主要解决的问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">下面我们来总结一下中台这种架构主要解决的问题。</span><br><span class="line"></span><br><span class="line">信息获取成本高，之前是每一个产品线都需要单独维护自己的数据，成本比较高。</span><br><span class="line">服务具有不确定性，通过中台可以以不变应万变</span><br><span class="line">互联互通成本高，不同产品线的数据想要打通成本过高。</span><br><span class="line">低水平重复建设，不同产品线需要重复建设相同的模块。</span><br><span class="line">通过中台，可以很好的解决这些问题。</span><br></pre></td></tr></table></figure><h4 id="中台的延伸"><a href="#中台的延伸" class="headerlink" title="中台的延伸"></a>中台的延伸</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">中台是一个大而全的概念，基于中台延伸出了多个方向</span><br><span class="line">技术中台</span><br><span class="line">移动中台</span><br><span class="line">业务中台</span><br><span class="line">数据中台</span><br><span class="line">研发中台</span><br><span class="line">组织中台</span><br><span class="line">等等…</span><br><span class="line"></span><br><span class="line">在这里我们可以把中台理解为航空母舰，这些中台都是基于这个航空母舰延伸出来的</span><br><span class="line"></span><br><span class="line">技术中台提供了技术支撑能力，帮助我们解决了基础设施，分布式数据库等底层技术问题，为前台特种兵提供了精良的武器装备。</span><br><span class="line"></span><br><span class="line">移动中台提供了战场一线火力支援能力，帮助我们提供更加个性化的服务，增强用户体验，为战场提供了陆军支援能力，随机应变，所向披靡。</span><br><span class="line">注意：这里的移动中台并不是说这个中台会移动，这里的移动表示的是移动端的意思，就是手机端。</span><br><span class="line"></span><br><span class="line">业务中台提供重用服务，例如用户中心，订单中心之类的开箱即用可重用能力，为战场提供了强大的后台炮火支援能力，随叫随到，威力强大。</span><br><span class="line"></span><br><span class="line">数据中台提供了数据分析能力，帮助我们从数据中学习改进，调整方向，为战场提供了强大及时的雷达监测能力，帮助我们掌控战场。</span><br><span class="line"></span><br><span class="line">研发中台提供了技术实践支撑能力，帮助我们快速搭建项目，管理进度，测试，持续集成，持续交付，是前台特种兵的训练基地及快速送达战场的机动运输部队。</span><br><span class="line"></span><br><span class="line">组织中台为我们的项目提供投资管理、风险管理、资源调度等，是战场的指挥部，战争的大脑，指挥前线，调度后方。</span><br></pre></td></tr></table></figure><h4 id="阿里中台技术栈全景"><a href="#阿里中台技术栈全景" class="headerlink" title="阿里中台技术栈全景"></a>阿里中台技术栈全景</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">接下来我们来看一下阿里的中台技术栈全景</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305162133313.png" alt="image-20230516213309367"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">最下面是一些基础设施和基础中间件</span><br><span class="line">上层是业务中台和数据中台</span><br><span class="line">其中业务中台里面是以业务进行区分，抽取出来的一些公共组件，例如：会员中心，商品中心，交易中心、订单中心、支付中心、评价中心</span><br><span class="line">后期如果新增的产品线需要用到这些功能的时候可以从业务总台中直接开箱即用，提高效率。</span><br><span class="line">数据中台中包含大数据计算服务(包含离线和实时)、大数据开发套件(这里面包含的是一些小工具)、画像分析、数据可视化、数仓规则、数据服务等，可以实现数据的一站式接入和使用。</span><br><span class="line">移动中台包含了很多移动端的公共组件和功能。</span><br><span class="line">基于这些中台就可以快速为上层这些应用提供各种支持了。</span><br></pre></td></tr></table></figure><h3 id="什么是数据中台"><a href="#什么是数据中台" class="headerlink" title="什么是数据中台"></a>什么是数据中台</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">前面我们讲了什么是中台，中台其实是一个统称，基于中台也延伸出了很多分支。</span><br><span class="line">每一个分支深究起来都有很多内容，不过目前来说，在这些中台的分支里面，数据中台是最为火热的，因为数据是可以直接为企业决策提供支持，可以直接产生价值的。</span><br><span class="line"></span><br><span class="line">下面我们就来具体分析一下什么是数据中台</span><br><span class="line">针对数据中台的定义业内目前有很多种说法，没有官方的定义，不同的人有不同的理解。</span><br><span class="line"></span><br><span class="line">通俗来讲数据中台是指利用大数据技术，对海量数据统一进行采集、计算、存储，并且对外提供数据服务。</span><br><span class="line">数据中台的主要作用在于将企业内部所有数据统一处理形成标准化数据，挖掘出对企业最有价值的数据，构建企业数据资产库，对内对外提供一致的，高可用的大数据服务。</span><br><span class="line"></span><br><span class="line">正式一点来说，可以这样理解</span><br><span class="line">数据中台是一套可持续 ”让企业的数据用起来 ” 的机制</span><br><span class="line">通过数据中台把数据变为一种服务能力，既能提升决策水平，又能直接支撑企业业务</span><br><span class="line">数据中台不仅仅是技术，也不仅仅是产品，而是一套完整的让数据用起来的机制。</span><br><span class="line">数据中台不是单纯的技术叠加，不是一个技术化的大数据平台，二者有本质区别。</span><br><span class="line">大数据平台更关心技术层面的事情，包括研发效率，平台的大数据处理能力，针对的往往是技术人员</span><br><span class="line">而数据中台的核心是数据服务能力，数据中台不仅面向技术人员，更需要面向多个部门的业务人员。</span><br></pre></td></tr></table></figure><h3 id="数据中台的演进过程"><a href="#数据中台的演进过程" class="headerlink" title="数据中台的演进过程"></a>数据中台的演进过程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">数据中台并不是直接就有的，也是根据时代的发展，企业的需求，一步一步演进出来的。</span><br><span class="line">下面我们就来看一下数据中台的演进过程。</span><br><span class="line"></span><br><span class="line">1：最开始是 数据库阶段，主要是OLTP（联机事务处理）的需求；</span><br><span class="line">以淘宝为例，最开始淘宝还只是一个简单的网站，淘宝的整个结构就是前端的一些页面，加上后端的数据库，只是个简单的OLTP系统，主要就是交易的事务处理。</span><br><span class="line"></span><br><span class="line">这个阶段，互联网黄页才刚刚出现，数据来源大部分还是传统商业的ERP&#x2F;CRM的结构化数据，数据量并不大，也就是GB的级别。简单的数据库就能满足需求。</span><br><span class="line"></span><br><span class="line">随着淘宝用户超过100万，分析需求的比重就越来越大。淘宝需要知道它的交易来自于哪些地区，来自于哪些人，谁在买淘宝的东西等等，于是，就进入了数据处理的第二个阶段：数据仓库阶段。</span><br><span class="line"></span><br><span class="line">2：数据仓库阶段，OLAP（联机分析处理）成为主要需求；</span><br><span class="line">OLTP和OLAP对数据存储和计算的需求是不一样的，OLTP处理的是结构化的交易数据，而OLAP对应的是互联网数据，而互联网里面数据量最大的是日志，90%以上的数据都是用户点击之类的非结构化的日志数据，而且数据量已经达到了TB的级别。</span><br><span class="line"></span><br><span class="line">针对分析需求，就诞生了数据仓库，数据仓库主要解决大量数据的存储和计算需求，也就是把非结构化的数据转化成结构化数据，存储下来。</span><br><span class="line"></span><br><span class="line">这个阶段，数据仓库支持的主要就是BI和报表需求。</span><br><span class="line"></span><br><span class="line">随着数据量越来越大，从TB进入了PB级别，原来的技术架构越来越不能支持海量数据处理，这时候就进入了第三个阶段：数据平台阶段。</span><br><span class="line"></span><br><span class="line">3：数据平台阶段，主要解决BI和报表需求的技术问题；</span><br><span class="line">这个阶段解决的还是BI和报表需求，但是主要是在解决底层的技术问题，也就是数据库架构设计的问题。</span><br><span class="line"></span><br><span class="line">这在数据库技术领域被概括为「Shared Everything、Shared Nothing、或Shared Disk」，说的就是数据库架构设计本身的不同技术思路之争。</span><br><span class="line"></span><br><span class="line">Shared Everything一般是针对单个主机，完全透明共享CPU&#x2F;MEMORY&#x2F;IO，并行处理能力是最差的，典型的代表SQLServer。</span><br><span class="line"></span><br><span class="line">Shared Disk的代表是Oracle RAC，用户访问RAC就像访问一个数据库，但是这背后是一个集群，RAC来保证这个集群的数据一致性。</span><br><span class="line"></span><br><span class="line">问题在于Oracle RAC(实时应用集群)是基于IOE架构的（使用IBM的小型机、Oracle数据库、EMC存储设备）。在海量数据处理上，IOE架构有天然的限制，不适合未来的发展。</span><br><span class="line"></span><br><span class="line">Shared Nothing的代表就是Hadoop。Hadoop的并行处理和扩展能力更好。</span><br><span class="line"></span><br><span class="line">Hadoop的好处是如果要增加数据处理的能力和容量，只需要增加服务器就好，成本不高，在海量数据处理和大规模并行处理上有很大优势。</span><br><span class="line"></span><br><span class="line">综上所述，第三阶段就是，建立Shared Nothing的海量数据处理平台来解决数据存储成本增长过快的问题。</span><br><span class="line"></span><br><span class="line">4：数据中台阶段，通过系统来对接OLTP（事务处理）和OLAP（报表分析）的需求，强调数据业务化的能力。</span><br><span class="line">这个阶段的特征是数据量呈现指数级增长，从PB迈向了EB级别，未来会到什么量级，谁也说不清楚。</span><br><span class="line"></span><br><span class="line">主要是因为，2015年之后，IOT（物联网）发展起来，带动了视频、图像、声音数据的增长，未来90%的数据可能都来自于视频、图像、声音这些非结构化数据，这些数据需要视觉计算技术、图像解析引擎+视频解析引擎+音频解析引擎来转换成结构化数据。5G技术的发展，可能会进一步放大视频、图像、声音数据的重要性。</span><br><span class="line"></span><br><span class="line">线下要想和线上一样，通过数据来改善业务，就要和线上一样能做到行为可监测，数据可收集，这是前提。线下最大量的就是视频、图像、声音数据，而这些数据靠人来手工收集，肯定是不靠谱的，依靠IOT（物联网）技术和算法的进步，最终会通过智能端来自动化获取数据。</span><br><span class="line"></span><br><span class="line">要使用这些数据，光有视觉算法和智能端也不行，要有云来存储和处理这些数据，以及打通其它领域的数据。</span><br><span class="line"></span><br><span class="line">目前的数据中台，最底层的数据平台还是偏技术的，是中台技术方案的其中一个组件，主要解决数据存储和计算的问题；在往上面就是一层数据服务层，数据服务层通过服务化API能够把数据和前台的业务层对接；数据中台里面都是系统去做对接，通过智能算法，能把前台的分析需求和交易需求去做对接，最终赋能业务。</span><br></pre></td></tr></table></figure><h3 id="数据中台-VS-数据仓库"><a href="#数据中台-VS-数据仓库" class="headerlink" title="数据中台 VS 数据仓库"></a>数据中台 VS 数据仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据仓库主要支持管理决策和业务分析</span><br><span class="line">数据中台是将数据服务化之后提供给业务系统，目的是将数据能力渗透到各个业务环节，不限于决策分析类场景</span><br><span class="line">数据中台建设包含数据体系建设，也就是数据中台包含数据仓库的完整内容</span><br><span class="line">所以说数据仓库阶段的成果是可以转化到数据中台阶段的，并不会全部推倒重做。</span><br></pre></td></tr></table></figure><h3 id="数据中台需要具备的四大能力"><a href="#数据中台需要具备的四大能力" class="headerlink" title="数据中台需要具备的四大能力"></a>数据中台需要具备的四大能力</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">根据我们前面对数据中台的分析，总结起来，数据中台需要具备以下能力：</span><br><span class="line">1：数据汇聚整合</span><br><span class="line">随着业务的发展，企业内部往往有多个信息部门和数据中心，大量系统、功能和应用重复建设，存在巨大的数据资源、计算资源和人力资源的浪费，同时组织壁垒也会导致数据孤岛的出现，使得内外部数据难以全局规划，数据中台需要对数据进行整合和完善。</span><br><span class="line"></span><br><span class="line">2：数据提纯加工</span><br><span class="line">数据就像石油，需要经过提纯加工才能使用，这个过程就是数据资产化。</span><br><span class="line">数据中台必须联通全域数据，通过统一的数据标准和质量体系，建设提纯加工后的标准数据资产体系，以满足企业业务对数据的需求。</span><br><span class="line"></span><br><span class="line">3：数据服务可视化</span><br><span class="line">为了尽快让数据用起来，数据中台必须提供快捷，快速的数据服务能力，让相关人员能够迅速开发数据应用，支持数据资产场景化能力的快速输出，以响应客户的动态需求。</span><br><span class="line"></span><br><span class="line">4：数据价值变现</span><br><span class="line">数据中台通过打通企业数据，提供以前单个部门无法提供的数据服务能力，以实现数据的更大价值变现。</span><br></pre></td></tr></table></figure><h2 id="数据中台架构"><a href="#数据中台架构" class="headerlink" title="数据中台架构"></a>数据中台架构</h2><h3 id="数据中台总体架构图"><a href="#数据中台总体架构图" class="headerlink" title="数据中台总体架构图"></a>数据中台总体架构图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">前面我们通过理论层面对数据中台有了一定的了解，下面我们通过架构层面来详细看一下数据中台的设计</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305171109254.png" alt="image-20230517110950057"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">数据中台是位于底层存储计算平台与上层的数据应用之间的一整套体系。</span><br><span class="line">数据中台屏蔽掉底层存储平台的计算技术复杂性，降低对技术人才的需求，让数据的使用成本更低。</span><br><span class="line">通过数据中台的数据汇聚、数据开发模块建立企业数据资产。</span><br><span class="line">通过数据体系对数据进行分层存储</span><br><span class="line">通过资产管理、数据服务，把数据资产变为数据服务能力，服务于企业业务。</span><br><span class="line">数据安全管理、数据运营体系，保障数据中台可以长期健康、持续运转。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">数据汇聚</span><br><span class="line">数据汇聚是数据中台数据接入的入口，数据中台本身不产生数据，所有的数据来自于业务系统，数据库、日志、文件等，这些数据分散在不同的网络环境和存储平台中，难以利用，很难产生业务价值，所以需要统一汇聚。</span><br><span class="line"></span><br><span class="line">数据开发</span><br><span class="line">数据开发是一整套数据加工以及处理的工具，因为通过数据汇聚模块汇聚到中台的数据没有经过处理，基本是按照数据的原始状态堆砌在一起的，这样业务是很难直接使用的。所以需要通过数据开发模块实现对数据的加工处理，形成有价值的数据，提供给业务部门使用。</span><br><span class="line"></span><br><span class="line">数据体系</span><br><span class="line">通过数据汇聚、数据开发，中台就具备了构建数仓平台的基本能力，这一块其实就是将采集过来的各种数据按照数仓的标准进行建设。</span><br><span class="line"></span><br><span class="line">数据资产管理</span><br><span class="line">通过数仓建立起来的数据资产比较偏向于技术，业务人员比较难理解，资产管理是以业务人员更好理解的方式，把数据资产展现给企业的业务人员。</span><br><span class="line"></span><br><span class="line">数据服务体系</span><br><span class="line">数据服务体系就是把数据变为一种服务能力，通过数据服务让数据参与到业务，激活整个数据中台，数据服务体系是数据中台存在的价值所在。</span><br><span class="line"></span><br><span class="line">数据运营体系</span><br><span class="line">是数据中台得以健康、持续运转的基础</span><br><span class="line"></span><br><span class="line">数据安全管理</span><br><span class="line">是为了保证数据中台中的数据安全。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个典型的数据中台总体架构设计。</span><br></pre></td></tr></table></figure><h3 id="数据中台-四字箴言"><a href="#数据中台-四字箴言" class="headerlink" title="数据中台 四字箴言"></a>数据中台 四字箴言</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果大家之前没有工作过的话，可能对数据中台还是不好理解，所以在这我将数据中台的功能总结为四个字：采、存、通、用</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">下面我们来详细分析一下这四字箴言</span><br><span class="line"></span><br><span class="line">采</span><br><span class="line">采：表示采集的意思，就是采集企业中的所有数据。</span><br><span class="line">随着互联网、移动互联网、物联网等技术的兴起，企业的业务形态开始多元化，数据的产生形式也是多样化的，对应的就需要有多种采集形式</span><br><span class="line"></span><br><span class="line">埋点采集、硬件采集、爬虫采集、数据库采集、日志采集</span><br><span class="line"></span><br><span class="line">埋点采集：一般是采集用户行为信息，例如用户在平台上的浏览、点击、停留等行为</span><br><span class="line">硬件采集：指的是物联网数据采集，例如通过无人机传感器来采集空气质量指标</span><br><span class="line">爬虫采集：指的是采集互联网上的公开数据，例如：电商平台竞品价格采集</span><br><span class="line">数据库采集：一般是采集企业内的业务数据，例如：用户交易数据、用户个人信息数据等</span><br><span class="line">日志采集：一般是采集软件运行时产生的日志</span><br><span class="line"></span><br><span class="line">这些是常见的采集形式</span><br><span class="line"></span><br><span class="line">从数据组织形式可以分为：结构化数据、半结构化数据、非结构化数据</span><br><span class="line">结构化数据：数据规则、完整、能够通过二维逻辑来表现的数据，严格遵守数据格式与长度规范，常见的有数据库中的数据、excel中的数据</span><br><span class="line">半结构化数据：数据规则、完整，同样严格遵守数据格式与长度规范，但无法通过二维关系来表现，常见的有JSON、XML等格式的数据</span><br><span class="line">非结构化数据：数据结构不规则或不完整，不方便用二维逻辑表来表现，需要经过复杂的逻辑处理才能提取其中的信息内容，常见的有word文档、图片、视频、音频等数据</span><br><span class="line"></span><br><span class="line">从数据的时效性上来划分，可以分为：离线数据、实时数据</span><br><span class="line">离线数据：主要用于大批量数据的周期性迁移，对时效性要求不高，一般采用分布式批量数据同步的形式，通过连接读取数据，读取数据过程中可以有全量、增量的方式，经过统一处理后写入到目标存储。</span><br><span class="line">实时数据：主要面向低延时的数据应用场景，一般通过实时监控的方式实现，例如通过读取数据库的binlog日志来实现数据库的实时数据采集。</span><br><span class="line"></span><br><span class="line">前面我们针对数据的采集形式、数据的组织形式、数据的时效性进行了分析，那这些数据在采集的时候具体应该使用什么类型的工具呢？</span><br><span class="line"></span><br><span class="line">常见的采集工具有：Flume、FileBeat、Logstash、Sqoop、Canal、DataX等</span><br><span class="line">其中Flume、FileBeat、Logstash适合采集日志数据，这三个组件的特性在前面项目课程中已经详细分析过了，在这不再赘述。</span><br><span class="line">sqoop是在结构化数据和HDFS之间进行批量数据迁移的工具，适合批量采集数据库中的数据，它的主要优势是，在特定场景下，数据交换过程会有很大的性能提升。主要缺点是处理过程定制程度较高，需要在脚本中调整配置参数实现，在用户的一些自定义逻辑和数据同步链路监控方面比较薄弱。</span><br><span class="line">DataX是阿里开源的一套数据采集工具，提供数据采集全链路的流量监控，将作业本身的状态，数据流量，数据速度，执行速度等信息进行展示，提供脏数据探测功能，支持传输过程中对传输报错进行策略化处理。由于它是基于进程内读写直连的方式，高并发数据采集场景下对机器内存要求比较高。不过DataX不支持非结构化数据的采集。</span><br><span class="line"></span><br><span class="line">这些单个工具都无法很好的满足企业复杂的数据采集场景，所以我们需要对已有的采集工具进行二次开发，以可视化配置的方式提供给用户，屏蔽底层工具的复杂性，要支持常见的数据源采集：关系型数据库、NoSQL数据库、MQ、文件系统等，并且支持增量同步、全量同步等方式。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">存</span><br><span class="line">将数据采集过来之后，就需要考虑数据存储了。</span><br><span class="line">在这里我们可以将数据分为两种：静态数据和动态数据</span><br><span class="line">其中静态数据：是以 HDFS 、S3等分布式文件系统作为存储引擎，适用于高吞吐量的离线大数据分析场景。这类存储的局限性是数据无法进行随机的读写。</span><br><span class="line">动态数据：是以 HBase、Cassandra等NoSQL数据库作为存储引擎，适用于大数据随机读写的场景。这类存储的局限性是批量读取吞吐量远不如HDFS，不适合用于批量数据分析的场景。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">通</span><br><span class="line">表示是对数据进行加工计算，构建企业级数据仓库，打通企业中的全域数据。</span><br><span class="line">针对数据的加工计算，可以分为两大块，离线计算和实时计算</span><br><span class="line">离线计算中的代表框架为：MapReduce、Hive、和Spark</span><br><span class="line">实时计算中的代表框架为：Storm、SparkStreaming和Flink，针对实时计算，现在主要是以Flink为主了。</span><br><span class="line">针对这些计算框架，如果每一个计算任务都需要开发代码的话，对使用人员就不友好了，特别是针对一些业务人员，他们不会写代码，只会写SQL，所以这时候我们就需要开发一套基于SQL的一站式开发平台，底层引擎使用Spark和Flink，支持离线数据计算和实时数据计算。</span><br><span class="line">让用户彻底规避掉繁重的底层代码开发工作。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">用</span><br><span class="line">企业全域数据采集、存储，打通之后，就涉及到如何去用了。</span><br><span class="line">这里的”用” 包含很多层面。</span><br><span class="line">首先是包括数据资产管理，也可以称之为数据治理，其中包含数据元标准管理，数据标签管理，数据模型管理、元数据管理、数据质量管理等，保证数据中台里面数据的合理化和规范化，充分发挥数据的价值。</span><br><span class="line">对于数据的拥有者和管理者来说，通过对数据的合理管理和有效应用，能盘活并充分释放数据的巨大价值，但如果不能对数据进行有效管理，数据就用不起来，或者即使用起来也用不好，在这种情况下，堆积如山的无序数据给企业带来的是高昂的成本。</span><br><span class="line"></span><br><span class="line">在使用数据的时候还需要做好数据安全管理，随着大数据技术和应用的快速发展，数据所承载的多维度业务价值已被越来越多的挖掘和应用变现，随之而来的是数据安全和隐私已经成为世界性的关注点，上升到国家战略层面，最近闹得沸沸扬扬的特朗普要禁用国外版的抖音(TikTok)事件，特朗普的理由就是TikTok平台的数据对他们产生了威胁。</span><br><span class="line">所以说数据安全很有必要，整体的数据安全管理体系通过分层建设、分级防护，创造面向数据的安全管理体系系统框架，形成完整的数据安全管理体系。</span><br><span class="line">数据中台的建设，应该始终把数据安全管理放在最重要的位置上，通过设计完备的数据安全管理体系，多方面，多层次保障数据安全。</span><br><span class="line"></span><br><span class="line">最终我们需要把安全、有价值的数据快速方便的提供给上层应用，此时需要通过数据服务对外开放，也就是API接口的形式。</span><br><span class="line">举个例子，水是生命之源，是人们赖以生存和发展的重要物质资源，在日常生活中，可以通过不同的方式使用水，这也给我们的生活带来了巨大便利。</span><br><span class="line">在数据世界中，数据资产就好比日常生活中生命所需的水资源，无处不在且不可或缺。但是如果没有相应的水加工厂，运输管道，人们只能到水库打水喝，这明显会极大影响人们正常的生活和工作。因此，将数据封装成数据服务，以接口形式提供给上层应用，才能极大释放、提升数据资产的价值。</span><br><span class="line"></span><br><span class="line">最后总结一下，数据中台其实可以这样理解，采集企业全域数据，存储起来，通过加工计算打通数据之间的关系，最后以API接口的形式对外提供数据服务。这就是数据中台要做的事情。</span><br></pre></td></tr></table></figure><h2 id="什么样的企业适合建设数据中台"><a href="#什么样的企业适合建设数据中台" class="headerlink" title="什么样的企业适合建设数据中台"></a>什么样的企业适合建设数据中台</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">前面我们分析了什么是数据中台，数据中台的好处，以及数据中台的架构，是不是所有的企业都需要构建数据中台呢？</span><br><span class="line">不是的，下面就来看一下到底什么样的企业适合建设数据中台</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305171128064.png" alt="image-20230517112856557"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">看这个案例：</span><br><span class="line">某企业下面有多个科研实体，每个科研实体下面有多个研究中心</span><br><span class="line">类似于一个集团公司，下面有多个子公司，每个子公司里面还有多个产品线。</span><br><span class="line">这种类型的企业业务复杂，有丰富的数据维度和多个业务场景，比较适合建设数据中台。</span><br><span class="line">初创型企业没有必要搭建数据中台，首先要解决的是生存问题，甚至于连数据仓库都没必要搭建，需要等企业走上正轨进入快速发展期的时候才需要构建数据仓库、数据中台。</span><br></pre></td></tr></table></figure><h3 id="数据应用成熟度的四个阶段"><a href="#数据应用成熟度的四个阶段" class="headerlink" title="数据应用成熟度的四个阶段"></a>数据应用成熟度的四个阶段</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">当然了，评价一个企业是否适合建设数据中台，也是有一些量化指标的，可以根据企业中的数据应用成熟度来进行判断，我们可以把企业中数据应用成熟度分为四个阶段</span><br><span class="line"></span><br><span class="line">统计分析</span><br><span class="line">决策支持</span><br><span class="line">数据驱动</span><br><span class="line">运营优化</span><br><span class="line"></span><br><span class="line">针对不同的阶段，从企业战略定位、企业数据形态、数据应用场景、数据应用工具、企业组织架构等多个方面，不同特征维度进行参考判定，也就构成了数据应用成熟度评估模型。</span><br><span class="line">依据这四个阶段的划分标准，企业可以进行数据应用成熟度的自我评测。</span><br><span class="line">数据应用成熟度越高，则代表数据对业务的支撑能力越强，数据应用成熟度越低，则意味着业务对数据的依赖程度越低。</span><br><span class="line"></span><br><span class="line">来看一下具体的评估模型。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305171132712.png" alt="image-20230517113246298"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">第一阶段：统计分析阶段</span><br><span class="line">统计分析阶段主要有以下特征</span><br><span class="line">1：在企业战略方面，该阶段的企业战略定位纯粹以业务为驱动，主要以满足企业业务需求，实现业务流程的流程化、自动化为导向。</span><br><span class="line">2：在企业数据形态方面，该阶段的企业可能有少量的业务数据积累，但没有以数据为导向积累数据，数据主要以业务系统依托的关系型数据库进行存储，数据无组织，各业务数据分散存储和管理，数据维度单一，无数据质量管控。</span><br><span class="line">3：在数据应用场景方面，该阶段的数据应用场景只针对业务系统中的关键数据和指标，进行简单的、单一维度的统计分析和管理，辅助业务总结，每次基于业务目标的数据统计都需要定制化开发，如周报、月报等。</span><br><span class="line">4：在数据应用工具方面，该阶段业务报表主要以系统内嵌报表以及Excel报表为主，模式相对单一。</span><br><span class="line">5：在企业组织架构发面，该阶段企业无专门的数据相关部门，主要以IT部门的数据库运维管理和业务部门的数据分析师为主，需要数据报表时，一般用系统中定制的统计报表或者由特定业务部门提供Excel报表。</span><br><span class="line"></span><br><span class="line">如果对数据的应用仅停留在单系统、单维度的统计分析上，只用于对历史业务开展情况进行简单分析，数据并没有发挥出应有的价值，数据只是辅助企业了解业务运转的情况。我们希望能通过数据为业务决策提供支撑，因此就出现了第二阶段</span><br><span class="line"></span><br><span class="line">第二阶段：决策支持阶段</span><br><span class="line">决策支持阶段主要有以下特征</span><br><span class="line">1：在企业战略方面，该阶段，企业开始具备通过数据支撑经营决策的思路，并在考虑通过数据可视化的方式实现数据与业务的融合，以解决业务问题和支撑管理决策。</span><br><span class="line">2：在企业数据形态方面，企业开始注重业务过程中的数据积累，开始对各业务环节的数据进行汇聚、管理、数据维度逐渐丰富。以面向业务主体的指标体系为形式进行数据组织，开始注重数据质量的管控，实施数据质量控制。</span><br><span class="line">3：在数据应用场景方面，该阶段的数据应用场景开始基于数据仓库进行各业务主题的数据收集、管理、分析，为企业管理人员提供决策支持。</span><br><span class="line">4：在数据应用工具方面，开始针对数据收集和管理 建立数据仓库，数据开发工具和专业可视化工具，进行系统化数据收集、管理和分析。</span><br><span class="line">5：在企业组织架构发面，开始出现数据分析师的岗位，可能会设立专门的数据挖掘或商业智能部门来支撑企业进行数据化决策。</span><br><span class="line"></span><br><span class="line">无论是在统计分析阶段还是决策支撑阶段，业务的运转和数据之间依然是相互隔离的。企业对数据的应用都还停留在对部分维度的业务数据进行分析得到结果后，再由人工对业务进行不同程度的干预，最终实现业务优化。而我们希望能够让数据直接驱动业务变得更精准，更有效。最典型的应用场景就是类似于头条、抖音里面的个性化推荐功能，通过数据直接驱动业务的优化。所以就出现了第三阶段</span><br><span class="line"></span><br><span class="line">第三阶段：数据驱动阶段</span><br><span class="line"></span><br><span class="line">数据驱动阶段主要有以下特征</span><br><span class="line">1：在企业战略方面，企业开始将数据作为重要资产和生产资料，通过大数据技术对企业相关数据进行汇聚、打通和分析挖掘，为业务应用提供数据服务，通过数据驱动业务发展。</span><br><span class="line">2：在企业数据形态方面，业务数据积累具备一定规模，对结构化数据、非结构化数据进行处理与应用，根据需求进行数据清洗加工和标准化处理。</span><br><span class="line">3：在数据应用场景方面，该阶段的数据应用场景主要以满足业务需求为主，主要是用数据提升现有业务能力，进行智能化升级。</span><br><span class="line">4：在数据应用工具方面，在该阶段，企业开始通过大数据生态体系中的批计算、流计算等大数据处理技术进行数据汇聚和开发，并最终为现有的业务场景赋能，以驱动业务升级。</span><br><span class="line">5：在企业组织架构发面，在该阶段，企业开始正式设立独立的大数据部门。</span><br><span class="line"></span><br><span class="line">数据驱动阶段，数据其实已经与业务紧密结合，数据在业务运转过程中直接产生价值，但是，由于数据应用都是独立建设的，没有从全局考虑，企业在数据应用的过程中，经常会遇到标准口径不一致，内容重复建设，各业务数据无法融合产生更大的价值，企业数据价值无法被业务快速应用等问题，因此，出现了第四阶段</span><br><span class="line"></span><br><span class="line">第四阶段：运营优化阶段</span><br><span class="line">运营优化阶段主要有以下特征</span><br><span class="line">1：在企业战略方面，该阶段，企业开始建设数据中台，数据中台定位是为企业未来5~10年发展提供数据能力支撑，在DT时代对企业进行智能化升级。</span><br><span class="line">2：在企业数据形态方面，在该阶段，企业数据伴随数据驱动的业务快速发展，数据量快速增长，通过建立企业体系化，标准化的数据采集、存储、实现企业数据的全面资产化。</span><br><span class="line">3：在数据应用场景方面，在该阶段，数据应用通过统一的数据资产体系，提供统一、标准化的数据服务能力，为企业各类快速变化的业务应用提供数据服务支撑。</span><br><span class="line">4：在数据应用工具方面，建立一套体系化的数据汇聚、加工、管理、服务及应用体系，逐渐实现大数据能力工具化，工具平台化，平台智能化。</span><br><span class="line">5：在企业组织架构方面，在该阶段，企业组织架构中开始在管理层设置数据管理委员会来负责数据机制的建设和管理，将数据变为企业的一种独特资产。同时也会成立专门的资产运营部门，保障数据资产应用的合理性和效率，将更多的数据服务消费者引入到数据平台之中。</span><br><span class="line"></span><br><span class="line">这就是数据应用成熟度的四个阶段，目前中大型企业大部分处于从决策支持阶段转向数据驱动阶段，一些一线大型互联网企业正在处于从数据驱动阶段转向运营优化阶段。</span><br><span class="line">目前数据中台正处于快速发展阶段，成熟的大型公司都在开始着手构建数据中台。</span><br></pre></td></tr></table></figure><h3 id="案例分析"><a href="#案例分析" class="headerlink" title="案例分析"></a>案例分析</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">下面有几个小案例，我们来分析一下</span><br><span class="line"></span><br><span class="line">企业A：类似于”万能钥匙 ”之类的工具类APP，随着DAU的增加，需要给用户提供个性化推荐内容</span><br><span class="line">目前比较合适的是启动一个内容推荐类的算法项目，在可预见的将来，看不到更多的数据场景，所以不适合建设数据中台。</span><br><span class="line"></span><br><span class="line">企业B：类似于”百果园 ”之类的连锁店，门店数量比较多，需要用大数据来精细化运营用户和商品</span><br><span class="line">因为具备了一定的门店规模和数据规模，可以实现一些个性化营销推送，商品猜你喜欢等功能，比较适合建设数据中台。</span><br><span class="line"></span><br><span class="line">企业C：类似于”华为 ”这样的多业态集团公司，旗下有多个业务板块，各个业务板块都有自己的数仓和报表</span><br><span class="line"></span><br><span class="line">这种属于多业态集团公司，是最适合建设数据中台的。</span><br></pre></td></tr></table></figure><h2 id="数据中台企业级解决方案"><a href="#数据中台企业级解决方案" class="headerlink" title="数据中台企业级解决方案"></a>数据中台企业级解决方案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">前面我们对数据中台的理论进行分析，下面我们来看一下，数据中台在一些大型企业中的落地方案</span><br></pre></td></tr></table></figure><h3 id="阿里数据中台"><a href="#阿里数据中台" class="headerlink" title="阿里数据中台"></a>阿里数据中台</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在国内，”中台”的概念是阿里带头喊出来的，所以我们先来看一下阿里的数据中台方案</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305171137113.png" alt="image-20230517113733709"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">最底层是计算和存储平台</span><br><span class="line">往上面是垂直数据中心，负责全域数据采集与引入，以需求为驱动，以数据多样性的全域思想为指导，采集与引入全业务、多终端、多形态的数据；</span><br><span class="line">再往上面是公共数据中心，按照基础层、公共中间层、应用层的数据分层架构模式，通过数据指标结构化、规范化的方式实现指标口径统一</span><br><span class="line">再往上面是萃取数据中心，形成以业务核心对象为中心的连接和标签体系，深度萃取数据价值</span><br><span class="line">再往上面是统一主题式服务，通过构建服务元数据中心和数据服务查询引擎，面向业务统一数据出口与数据查询逻辑，屏蔽多数据源与多物理表；</span><br><span class="line">左侧是数据资产管理：通过资产分析、应用、优化、运营等方面实现降低数据管理成本、追踪数据价值。</span><br><span class="line"></span><br><span class="line">最上层的是不同的产品线应用，通过下面的数据中台提供一站式数据服务支撑。</span><br><span class="line"></span><br><span class="line">阿里数据中台有三大核心：</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305171138752.png" alt="image-20230517113808804"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">OneData（统一数据）：定义数据标准与建模标准，对离线数据、实时数据建立数据资产体系</span><br><span class="line">OneEntity（统一实体）：主数据的管理，实现全域产品体系主数据融合</span><br><span class="line">OneService（统一服务）：统一对外提供API与SDK服务</span><br><span class="line">这就是阿里数据中台的三大核心。其实就是将全域数据统一标准，然后打通，最终统一对外提供数据服务。</span><br></pre></td></tr></table></figure><h3 id="菜鸟数据中台"><a href="#菜鸟数据中台" class="headerlink" title="菜鸟数据中台"></a>菜鸟数据中台</h3><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305171138932.png" alt="image-20230517113839690"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">整体技术架构，分三层，底层是基础设施，基础平台，中间是中台，上面是前台。</span><br><span class="line">有些同学可能会有困惑“数据中台和大数据平台”的区别是什么？</span><br><span class="line">图中的基础平台就是我们常说的大数据平台，包含了数据的采集、计算、加工等。</span><br><span class="line">数据中台是构建在整个大数据平台之上的，它是围绕数据运营、分析、应用等场景去做的一套解决方案。</span><br><span class="line"></span><br><span class="line">数据中台分成两块，一个是数据层，一个是服务层。数据层就是我们前面说的“数仓“，这里边包含菜鸟的所有数据，沉淀的数据资产。</span><br><span class="line">再往上是服务层，这里划分成了几个套件，每个套件都是围绕数据使用的一个场景做的解决方案 。</span><br><span class="line"></span><br><span class="line">右侧的东西是数据管理套件，从数据的加工生产到使用，它从全链路的视角把数据给管理起来。</span><br><span class="line"></span><br><span class="line">最上层是前台业务。</span><br></pre></td></tr></table></figure><h3 id="滴滴数据中台"><a href="#滴滴数据中台" class="headerlink" title="滴滴数据中台"></a>滴滴数据中台</h3><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305171146305.jpg" alt="图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">最底层是数据架构：数据架构体系包含了当前大数据领域主流的技术</span><br><span class="line"></span><br><span class="line">再往上面是数据研发，数据中间件，实现数据的采集，计算和数据质量监控。</span><br><span class="line"></span><br><span class="line">再往上面是数据资产体系，构建了数据字典和数据图谱，然后通过数据赋能，提供各种自助查询和可视化分析。</span><br><span class="line"></span><br><span class="line">最上层是数据服务层，将数据服务化提供给各个产品使用。</span><br></pre></td></tr></table></figure><h3 id="苏宁数据中台"><a href="#苏宁数据中台" class="headerlink" title="苏宁数据中台"></a>苏宁数据中台</h3><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305171145463.jpg" alt="图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">最底层是大数据计算存储引擎</span><br><span class="line">上层是数据开发套件，负责加工计算数据，</span><br><span class="line">然后是数据仓库主题域，构建多维度的数据主题，</span><br><span class="line">接下来是数据治理套件，管理数据模型，保证数据质量。</span><br><span class="line"></span><br><span class="line">再往上层是数据应用引擎，这里面包含了可视化引擎，数据服务引擎，数据分析引擎和画像引擎，通过这几个引擎对外提供数据服务。</span><br><span class="line"></span><br><span class="line">最上层是数据应用层，主要是使用数据的。</span><br></pre></td></tr></table></figure><h3 id="华为云数据中台"><a href="#华为云数据中台" class="headerlink" title="华为云数据中台"></a>华为云数据中台</h3><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305171145118.jpg" alt="图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">华为云数据中台在这里可以划分为三块</span><br><span class="line"></span><br><span class="line">第一块是数据建设：其实就是把全域数据采集过来，对数据加工计算，基于各种维度构建数据主题。</span><br><span class="line">第二块是平台建设：这里面抽取出来了一些公共的功能组件，并且提供了数据服务。</span><br><span class="line"></span><br><span class="line">第三块是中台消费场景，这里面会有多种场景依靠数据中台提供数据支撑。</span><br></pre></td></tr></table></figure><h3 id="浙江移动数据中台"><a href="#浙江移动数据中台" class="headerlink" title="浙江移动数据中台"></a>浙江移动数据中台</h3><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305171144694.jpg" alt="图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">浙江移动打造的数据中台，是为了实现跨域数据整合并沉淀公共的数据能力，同时提供丰富的数据模型，标准化的数据服务，个性化的开发平台与工具，满足一线数据开放和智慧运营的要求。</span><br><span class="line">这个数据中台架构中主要包含了三块内容</span><br><span class="line">数据模型、数据服务和数据开发。</span><br><span class="line"></span><br><span class="line">数据模型：负责实现数据与数据模型打通。</span><br><span class="line">数据服务：负责封装标准数据服务，对外提供数据查询服务</span><br><span class="line">数据开发：针对各种个性化数据应用开发需求提供技术支持</span><br></pre></td></tr></table></figure><h3 id="某大数据服务商数据中台"><a href="#某大数据服务商数据中台" class="headerlink" title="某大数据服务商数据中台"></a>某大数据服务商数据中台</h3><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305171142475.png" alt="image-20230517114238211"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">底层是基础设施和计算层</span><br><span class="line">往上面是数据开发治理模块，里面涉及离线数据开发、实时数据开发和算法开发。</span><br><span class="line">再往上层是数据服务层，这里面会对数据进行体系化，最终对外提供服务。</span><br><span class="line">最上层是业务应用层，这里会通过数据服务提供数据支撑。</span><br></pre></td></tr></table></figure><h3 id="某企业数据大脑"><a href="#某企业数据大脑" class="headerlink" title="某企业数据大脑"></a>某企业数据大脑</h3><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305171141192.png" alt="image-20230517114128072"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这个是某企业的数据大脑总体设计，里面包含了数据中台。</span><br><span class="line">数据大脑主要是为了解决大数据系统建设中数据存储、连通、使用的共性问题，形成业务数据中台，包括数据资源的统一规划，数据整体建模和资产管理，数据标签化计算，形成不同行业的数据体系。</span><br><span class="line">将行业知识库和领域数据相结合，开发各类计算组件，构建统一数据加工平台，对数据进行加工整理支撑行业应用，形成相关领域行业的数据大脑。</span><br><span class="line"></span><br><span class="line">这里面的数据中台主要包含以下内容：</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305171141182.png" alt="image-20230517114145986"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">到这为止，我们分析了多个企业的数据中台，虽然这些企业的数据中台架构没有完全一样的，但是总结下来我们会发现，他们里面都会有一些共同的核心内容。</span><br><span class="line">数据采集存储、数据加工计算，整合打通各个维度数据，最后对外提供数据服务。</span><br><span class="line">其实精简之后就是我在前面给大家总结的数据中台四字箴言，采存通用。</span><br><span class="line"></span><br><span class="line">希望通过我们前面的学习能够然大家对数据中台有一个整体的认识。</span><br></pre></td></tr></table></figure><h2 id="数据中台之数据加工总线"><a href="#数据中台之数据加工总线" class="headerlink" title="数据中台之数据加工总线"></a>数据中台之数据加工总线</h2><h3 id="目前大数据领域实时计算的现状"><a href="#目前大数据领域实时计算的现状" class="headerlink" title="目前大数据领域实时计算的现状"></a>目前大数据领域实时计算的现状</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">随着大数据行业的整体发展，企业对实时计算的需求越来越多，特别是在构建实时数仓的时候，需要接入很多实时数据源，并且数仓还是分层的，针对每一层的数据都需要进行实时计算，此时就需要开发很多实时计算程序，实时计算程序的复用性很低，针对每一种类型的数据都需要开发对应的实时计算程序，开发成本高，并且对程序员也不友好，需要专门的大数据开发工程师，所以我们希望在实时计算领域能够提供类似HiveSQL的功能，直接写SQL就能实现实时计算任务，不需要每次都写一堆的代码，提高工作效率，尽可能让会只会SQL的普通开发人员也能轻松的开发实时计算任务。</span><br><span class="line"></span><br><span class="line">为了解决这个痛点，于是，我们研发了数据加工总线平台，也可以称之为数据实时流转平台。</span><br></pre></td></tr></table></figure><h3 id="什么是数据加工总线"><a href="#什么是数据加工总线" class="headerlink" title="什么是数据加工总线"></a>什么是数据加工总线</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">为了使实时数据的处理能够更加高效、简单，所以我们研发了一站式实时数据开发平台。只需要在页面选择数据源、目的地以及对应的SQL计算逻辑，就可以轻松实现海量实时数据计算任务的开发。</span><br><span class="line"></span><br><span class="line">这个平台主要的功能就是支持SQL实现实时数据计算任务的开发。</span><br><span class="line"></span><br><span class="line">我们期望达到的目标，通过这套平台，可以实现用SQL解决80%以上的实时数据计算需求。</span><br></pre></td></tr></table></figure><h3 id="数据加工总线原型图总览"><a href="#数据加工总线原型图总览" class="headerlink" title="数据加工总线原型图总览"></a>数据加工总线原型图总览</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">由于数据加工总线涉及前端和后端，在企业中前端代码有专门的同事负责开发，我们大数据部门只需要负责后台功能开发即可，所以在课程中不涉及前端页面代码，在这里通过原型图来演示一下数据加工总线具体的使用流程，加深大家的理解。</span><br><span class="line">注意：原型图只能在这里给大家演示一下，不能发出去，希望大家理解。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305171152004.jpg" alt="图片描述"></p><h3 id="数据加工总线架构图V1-0"><a href="#数据加工总线架构图V1-0" class="headerlink" title="数据加工总线架构图V1.0"></a>数据加工总线架构图V1.0</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">接下来看一下数据加工总线的后台架构图</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305171154966.jpg" alt="图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">数据源和目的地都是Kafka，因为目前在大数据领域，实时数据一般都是用的Kafka。</span><br><span class="line">中间就是我们需要开发的核心计算引擎，基于SparkSQL封装的实时SQL计算引擎。</span><br><span class="line">为什么在这要选择使用SparkSQL？</span><br><span class="line">因为SparkSQL在我们公司已经广泛应用了很长时间了，并且Spark框架本身也迭代了很多版本了，比较稳定，整个生态圈也比较完善。所以前期在技术选型的时候优先考虑的是底层计算引擎的稳定性。</span><br><span class="line">还有就是秒级别的延时是可以满足业务需求的，所以当时SparkSQL+SparkStreaming是最好的方案。</span><br><span class="line">Flink当时版本还不是很稳定，FlinkSQL也是刚出现没多久，所以没有直接使用Flink。</span><br><span class="line">当时我们也考虑了，等第一个版本稳定了以后，后期再把FlinkSQL也增加进来，提供两套底层计算引擎，可以根据需求进行动态切换。</span><br><span class="line"></span><br><span class="line">针对这里面的数据字段和数据模型的概念做一下解释</span><br><span class="line">由于我们需要在SparkSQL中基于kafka的数据进行建表，kafka中的数据我们使用的是json格式的，json格式的数据只有字段名称，缺少字段类型信息，官方一点来说其实就是缺少元数据信息，所以需要针对kafka中的数据定义元数据，这样才能在SparkSQL中建表。</span><br><span class="line"></span><br><span class="line">注意：元数据的定义是在数据治理子系统中维护的。</span><br></pre></td></tr></table></figure><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据开发工程师" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
      <category term="大数据" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="直播平台三度关系推荐v2.0" scheme="http://tianyong.fun/tags/%E7%9B%B4%E6%92%AD%E5%B9%B3%E5%8F%B0%E4%B8%89%E5%BA%A6%E5%85%B3%E7%B3%BB%E6%8E%A8%E8%8D%90v2-0/"/>
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-第十八周 直播平台三度关系推荐v2.0-2</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC%E5%8D%81%E5%85%AB%E5%91%A8-%E7%9B%B4%E6%92%AD%E5%B9%B3%E5%8F%B0%E4%B8%89%E5%BA%A6%E5%85%B3%E7%B3%BB%E6%8E%A8%E8%8D%90v2-0-2.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC%E5%8D%81%E5%85%AB%E5%91%A8-%E7%9B%B4%E6%92%AD%E5%B9%B3%E5%8F%B0%E4%B8%89%E5%BA%A6%E5%85%B3%E7%B3%BB%E6%8E%A8%E8%8D%90v2-0-2.html</id>
    <published>2023-05-03T09:32:38.000Z</published>
    <updated>2023-05-20T12:50:47.753Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="第十八周-直播平台三度关系推荐v2-0-2"><a href="#第十八周-直播平台三度关系推荐v2-0-2" class="headerlink" title="第十八周 直播平台三度关系推荐v2.0-2"></a>第十八周 直播平台三度关系推荐v2.0-2</h1><h2 id="每周一计算最近一周内主活主播的三度关系列表-任务六"><a href="#每周一计算最近一周内主活主播的三度关系列表-任务六" class="headerlink" title="每周一计算最近一周内主活主播的三度关系列表(任务六)"></a>每周一计算最近一周内主活主播的三度关系列表(任务六)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用Flink程序实现每周一计算最近一周内主活主播的三度关系列表</span><br><span class="line">创建子module项目：get_recommend_list</span><br><span class="line">在项目中创建scala目录，引入scala2.12版本的SDK</span><br><span class="line">创建package：com.imooc.flink</span><br><span class="line">在pom.xml中添加依赖</span><br></pre></td></tr></table></figure><h3 id="子项目pom"><a href="#子项目pom" class="headerlink" title="子项目pom"></a>子项目pom</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot;</span><br><span class="line">         xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;artifactId&gt;db_video_recommend_v2&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;groupId&gt;org.example&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;parent&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;&#x2F;modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;artifactId&gt;get_recommend_list&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-api&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-log4j12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-scala_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-clients_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.neo4j.driver&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;neo4j-java-driver&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.hadoop&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;hadoop-client&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;!-- 编译插件 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-compiler-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;3.6.0&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;source&gt;1.8&lt;&#x2F;source&gt;</span><br><span class="line">                    &lt;target&gt;1.8&lt;&#x2F;target&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;&#x2F;encoding&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">            &lt;!-- scala编译插件 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;net.alchim31.maven&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;scala-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;3.1.6&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;scalaCompatVersion&gt;2.12&lt;&#x2F;scalaCompatVersion&gt;</span><br><span class="line">                    &lt;scalaVersion&gt;2.12.11&lt;&#x2F;scalaVersion&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;&#x2F;encoding&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;compile-scala&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;compile&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;add-source&lt;&#x2F;goal&gt;</span><br><span class="line">                            &lt;goal&gt;compile&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;test-compile-scala&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;test-compile&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;add-source&lt;&#x2F;goal&gt;</span><br><span class="line">                            &lt;goal&gt;testCompile&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                &lt;&#x2F;executions&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">            &lt;!-- 打jar包插件(会包含所有依赖) --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-assembly-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.6&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;descriptorRefs&gt;</span><br><span class="line">                        &lt;descriptorRef&gt;jar-with-dependencies&lt;&#x2F;descriptorRef&gt;</span><br><span class="line">                    &lt;&#x2F;descriptorRefs&gt;</span><br><span class="line">                    &lt;archive&gt;</span><br><span class="line">                        &lt;manifest&gt;</span><br><span class="line">                            &lt;!-- 可以设置jar包的入口类(可选) --&gt;</span><br><span class="line">                            &lt;mainClass&gt;&lt;&#x2F;mainClass&gt;</span><br><span class="line">                        &lt;&#x2F;manifest&gt;</span><br><span class="line">                    &lt;&#x2F;archive&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;make-assembly&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;package&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;single&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                &lt;&#x2F;executions&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">        &lt;&#x2F;plugins&gt;</span><br><span class="line">    &lt;&#x2F;build&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;project&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在resources目录中添加log4j.properties配置文件</span><br><span class="line"></span><br><span class="line">注意：此时需要通过flink读取neo4j中的数据，但是针对DataSet是不支持addSource方法的，但是它里面有一个createInput，可以接收一个自定义的InputFormat，所以我就需要定义一个Neo4jInputFormat了</span><br></pre></td></tr></table></figure><h3 id="Neo4jInputFormat-scala"><a href="#Neo4jInputFormat-scala" class="headerlink" title="Neo4jInputFormat.scala"></a>Neo4jInputFormat.scala</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">创建类：Neo4jInputFormat</span><br><span class="line">代码如下：</span><br><span class="line"></span><br><span class="line">注意：此代码中的输入组件只能使用单并行度执行，如果使用多并行度查询可能会出现重复数据</span><br></pre></td></tr></table></figure><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.flink</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.io.statistics.<span class="type">BaseStatistics</span></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.io.&#123;<span class="type">DefaultInputSplitAssigner</span>, <span class="type">NonParallelInput</span>, <span class="type">RichInputFormat</span>&#125;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.configuration.<span class="type">Configuration</span></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.core.io.&#123;<span class="type">GenericInputSplit</span>, <span class="type">InputSplit</span>, <span class="type">InputSplitAssigner</span>&#125;</span><br><span class="line"><span class="keyword">import</span> org.neo4j.driver.&#123;<span class="type">AuthTokens</span>, <span class="type">Driver</span>, <span class="type">GraphDatabase</span>, <span class="type">Result</span>, <span class="type">Session</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从Neo4j中查询满足条件的主播</span></span><br><span class="line"><span class="comment"> * 一周内活跃过，并且主播等级大于4</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Neo4jInputFormat</span> <span class="keyword">extends</span> <span class="title">RichInputFormat</span>[<span class="type">String</span>,<span class="type">InputSplit</span>] <span class="keyword">with</span> <span class="title">NonParallelInput</span></span>&#123; <span class="comment">// 这里是多继承</span></span><br><span class="line">  <span class="comment">//注意：with NonParallelInput 表示此组件不支持多并行度</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//保存neo4j相关的配置参数</span></span><br><span class="line">  <span class="keyword">var</span> param: <span class="type">Map</span>[<span class="type">String</span>,<span class="type">String</span>] = <span class="type">Map</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> driver: <span class="type">Driver</span> = _</span><br><span class="line">  <span class="keyword">var</span> session: <span class="type">Session</span> = _</span><br><span class="line">  <span class="keyword">var</span> result: <span class="type">Result</span> = _</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 构造函数</span></span><br><span class="line"><span class="comment">   * 接收neo4j相关的配置参数</span></span><br><span class="line"><span class="comment">   * @param param</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">this</span></span>(param: <span class="type">Map</span>[<span class="type">String</span>,<span class="type">String</span>])&#123;</span><br><span class="line">    <span class="keyword">this</span>()</span><br><span class="line">    <span class="keyword">this</span>.param = param</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 配置此输入格式</span></span><br><span class="line"><span class="comment">   * @param parameters</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">configure</span></span>(parameters: <span class="type">Configuration</span>): <span class="type">Unit</span> = &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取输入数据的基本统计信息</span></span><br><span class="line"><span class="comment">   * @param cachedStatistics</span></span><br><span class="line"><span class="comment">   * @return</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">getStatistics</span></span>(cachedStatistics: <span class="type">BaseStatistics</span>): <span class="type">BaseStatistics</span> = &#123;</span><br><span class="line">    cachedStatistics</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 对输入数据切分split</span></span><br><span class="line"><span class="comment">   * @param minNumSplits</span></span><br><span class="line"><span class="comment">   * @return</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">createInputSplits</span></span>(minNumSplits: <span class="type">Int</span>): <span class="type">Array</span>[<span class="type">InputSplit</span>] = &#123;</span><br><span class="line">    <span class="type">Array</span>(<span class="keyword">new</span> <span class="type">GenericInputSplit</span>(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取切分的split</span></span><br><span class="line"><span class="comment">   * @param inputSplits</span></span><br><span class="line"><span class="comment">   * @return</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">getInputSplitAssigner</span></span>(inputSplits: <span class="type">Array</span>[<span class="type">InputSplit</span>]): <span class="type">InputSplitAssigner</span> = &#123;</span><br><span class="line">    <span class="keyword">new</span> <span class="type">DefaultInputSplitAssigner</span>(inputSplits)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 初始化方法：只执行一次</span></span><br><span class="line"><span class="comment">   * 获取neo4j连接，开启会话</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">openInputFormat</span></span>(): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="comment">//初始化Neo4j连接</span></span><br><span class="line">    <span class="keyword">this</span>.driver = <span class="type">GraphDatabase</span>.driver(param(<span class="string">"boltUrl"</span>), <span class="type">AuthTokens</span>.basic(param(<span class="string">"userName"</span>), param(<span class="string">"passWord"</span>)))</span><br><span class="line">    <span class="comment">//开启会话</span></span><br><span class="line">    <span class="keyword">this</span>.session = driver.session()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 关闭Neo4j连接</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">closeInputFormat</span></span>(): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">if</span>(driver!=<span class="literal">null</span>)&#123;</span><br><span class="line">      driver.close()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 此方法也是只执行一次</span></span><br><span class="line"><span class="comment">   * @param split</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">open</span></span>(split: <span class="type">InputSplit</span>): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">this</span>.result = session.run(<span class="string">"match (a:User) where a.timestamp &gt;="</span>+param(<span class="string">"timestamp"</span>)+<span class="string">" and a.level &gt;= "</span>+param(<span class="string">"level"</span>)+<span class="string">" return a.uid"</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 如果数据读取完毕号以后，需要返回true</span></span><br><span class="line"><span class="comment">   * @return</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">reachedEnd</span></span>(): <span class="type">Boolean</span> = &#123;</span><br><span class="line">    !result.hasNext</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 读取结果数据，一次读取一条</span></span><br><span class="line"><span class="comment">   * @param reuse</span></span><br><span class="line"><span class="comment">   * @return</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">nextRecord</span></span>(reuse: <span class="type">String</span>): <span class="type">String</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> record = result.next()</span><br><span class="line">    <span class="keyword">val</span> uid = record.get(<span class="number">0</span>).asString()</span><br><span class="line">    uid</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 关闭会话</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">close</span></span>(): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">if</span>(session!=<span class="literal">null</span>)&#123;</span><br><span class="line">      session.close()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="GetRecommendList-scala"><a href="#GetRecommendList-scala" class="headerlink" title="GetRecommendList.scala"></a>GetRecommendList.scala</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.flink</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.scala.<span class="type">ExecutionEnvironment</span></span><br><span class="line"><span class="keyword">import</span> org.neo4j.driver.&#123;<span class="type">AuthTokens</span>, <span class="type">GraphDatabase</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scala.collection.mutable.&#123;<span class="type">ArrayBuffer</span>, <span class="type">ListBuffer</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 任务6：</span></span><br><span class="line"><span class="comment"> * 每周一计算最近一周内主活主播的三度关系列表</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> * 1：待推荐主播最近一周内活跃过</span></span><br><span class="line"><span class="comment"> * 2：待推荐主播等级&gt;4</span></span><br><span class="line"><span class="comment"> * 3：待推荐主播最近1个月视频评级满足3B+或2A+(flag=1)</span></span><br><span class="line"><span class="comment"> * 4：待推荐主播的粉丝列表关注重合度&gt;2</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">GetRecommendListScala</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">var</span> appName = <span class="string">"GetRecommendListScala"</span></span><br><span class="line">    <span class="keyword">var</span> boltUrl = <span class="string">"bolt://bigdata04:7687"</span></span><br><span class="line">    <span class="keyword">var</span> userName = <span class="string">"neo4j"</span></span><br><span class="line">    <span class="keyword">var</span> passWord = <span class="string">"admin"</span></span><br><span class="line">    <span class="keyword">var</span> timestamp = <span class="number">0</span>L <span class="comment">//过滤最近一周内是否活跃过</span></span><br><span class="line">    <span class="keyword">var</span> dumplicateNum = <span class="number">2</span> <span class="comment">//粉丝列表关注重合度</span></span><br><span class="line">    <span class="keyword">var</span> level = <span class="number">4</span> <span class="comment">//主播等级</span></span><br><span class="line">    <span class="keyword">var</span> outputPath = <span class="string">"hdfs://bigdata01:9000/data/recommend_data/20260201"</span></span><br><span class="line">    <span class="keyword">if</span>(args.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">      appName = args(<span class="number">0</span>)</span><br><span class="line">      boltUrl = args(<span class="number">1</span>)</span><br><span class="line">      userName = args(<span class="number">2</span>)</span><br><span class="line">      passWord = args(<span class="number">3</span>)</span><br><span class="line">      timestamp = args(<span class="number">4</span>).toLong</span><br><span class="line">      dumplicateNum = args(<span class="number">5</span>).toInt</span><br><span class="line">      level = args(<span class="number">6</span>).toInt</span><br><span class="line">      outputPath = args(<span class="number">7</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> env = <span class="type">ExecutionEnvironment</span>.getExecutionEnvironment</span><br><span class="line">    <span class="comment">//添加隐式转换代码</span></span><br><span class="line">    <span class="keyword">import</span>  org.apache.flink.api.scala._</span><br><span class="line">    <span class="keyword">val</span> param = <span class="type">Map</span>(<span class="string">"boltUrl"</span>-&gt;boltUrl,<span class="string">"userName"</span>-&gt;userName,<span class="string">"passWord"</span>-&gt;passWord,<span class="string">"timestamp"</span>-&gt;timestamp.toString,<span class="string">"level"</span>-&gt;level.toString)</span><br><span class="line">    <span class="comment">//获取一周内主活的主播 并且主播等级大于4的数据</span></span><br><span class="line">    <span class="keyword">val</span> uidSet = env.createInput(<span class="keyword">new</span> <span class="type">Neo4jInputFormat</span>(param))</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一次处理一批</span></span><br><span class="line">    <span class="comment">//过滤出粉丝关注重合度&gt;2的数据，并且对关注重合度倒序排序</span></span><br><span class="line">    <span class="comment">//最终的数据格式是：主播id,待推荐的主播id</span></span><br><span class="line">    <span class="keyword">val</span> mapSet = uidSet.mapPartition(it=&gt;&#123;</span><br><span class="line">      <span class="comment">//获取neo4j的连接</span></span><br><span class="line">      <span class="keyword">val</span> driver = <span class="type">GraphDatabase</span>.driver(boltUrl, <span class="type">AuthTokens</span>.basic(userName, passWord))</span><br><span class="line">      <span class="comment">//开启一个会话</span></span><br><span class="line">      <span class="keyword">val</span> session = driver.session()</span><br><span class="line">      <span class="comment">//保存计算出来的结果</span></span><br><span class="line">      <span class="keyword">val</span> resultArr = <span class="type">ArrayBuffer</span>[<span class="type">String</span>]()</span><br><span class="line">      it.foreach(uid=&gt;&#123;</span><br><span class="line">        <span class="comment">//计算一个用户的三度关系(主播的三度关系)</span></span><br><span class="line">        <span class="comment">//注意：数据量打了之后，这个计算操作是非常耗时</span></span><br><span class="line">        <span class="keyword">val</span> result = session.run(<span class="string">"match (a:User &#123;uid:'"</span>+uid+<span class="string">"'&#125;) &lt;-[:follow]- (b:User) -[:follow]-&gt; (c:User) return a.uid as auid,c.uid as cuid,count(c.uid) as sum order by sum desc limit 30"</span>)</span><br><span class="line">        <span class="comment">//对b、c的主活时间进行过滤，以及对c的level和flag值进行过滤</span></span><br><span class="line">        <span class="comment">/*val result = session.run("match (a:User &#123;uid:'"+uid+"'&#125;) &lt;-[:follow]- (b:User) -[:follow]-&gt; (c:User)" +</span></span><br><span class="line"><span class="comment">          " where b.timestamp &gt;= "+timestamp+" and c.timestamp &gt;= "+timestamp+" and c.level &gt;= "+level +" and c.flag =1 " +</span></span><br><span class="line"><span class="comment">          " return a.uid as auid,c.uid as cuid,count(c.uid) as sum order by sum desc limit 30")*/</span></span><br><span class="line">        <span class="keyword">while</span>(result.hasNext)&#123;</span><br><span class="line">          <span class="keyword">val</span> record = result.next()</span><br><span class="line">          <span class="keyword">val</span> sum = record.get(<span class="string">"sum"</span>).asInt()</span><br><span class="line">          <span class="keyword">if</span>(sum &gt; dumplicateNum)&#123;</span><br><span class="line">            resultArr += record.get(<span class="string">"auid"</span>).asString()+<span class="string">"\t"</span>+record.get(<span class="string">"cuid"</span>).asString()</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="comment">//关闭会话</span></span><br><span class="line">      session.close()</span><br><span class="line">      <span class="comment">//关闭连接</span></span><br><span class="line">      driver.close()</span><br><span class="line">      resultArr.iterator</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把数据转成tupl2的形式</span></span><br><span class="line">    <span class="keyword">val</span> tup2Set = mapSet.map(line =&gt; &#123;</span><br><span class="line">      <span class="keyword">val</span> splits = line.split(<span class="string">"\t"</span>)</span><br><span class="line">      (splits(<span class="number">0</span>), splits(<span class="number">1</span>))</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据主播id进行分组，可以获取到这个主播的待推荐列表</span></span><br><span class="line">    <span class="keyword">val</span> reduceSet = tup2Set.groupBy(_._1).reduceGroup(it =&gt; &#123;</span><br><span class="line">      <span class="keyword">val</span> list = it.toList</span><br><span class="line">      <span class="keyword">val</span> tmpList = <span class="type">ListBuffer</span>[<span class="type">String</span>]()</span><br><span class="line">      <span class="keyword">for</span> (l &lt;- list) &#123;</span><br><span class="line">        tmpList += l._2</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//把结果组装成这种形式 1001   1002,1003,1004</span></span><br><span class="line">      (list.head._1, tmpList.toList.mkString(<span class="string">","</span>))</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意：writeAsCsv只能保存tuple类型的数据</span></span><br><span class="line">    <span class="comment">//writerAsText可以支持任何类型，如果是对象，会调用对象的toString方法写入到文件中</span></span><br><span class="line">    reduceSet.writeAsCsv(outputPath,<span class="string">"\n"</span>,<span class="string">"\t"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//执行任务</span></span><br><span class="line">    env.execute(appName)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">其实我们也可以直接在这里将结果输入写入到redis中，不过为了整体看起来更加规范，在这就先把数据临时写到hdfs上面。</span><br><span class="line"></span><br><span class="line">在本地执行代码，然后到hdfs上面确认结果</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305161459949.png" alt="image-20230516145733981"></p><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">接下来对程序编译打包</span><br><span class="line">在pom.xml中添加编译打包配置</span><br></pre></td></tr></table></figure><h3 id="startGetRecommendList-sh"><a href="#startGetRecommendList-sh" class="headerlink" title="startGetRecommendList.sh"></a>startGetRecommendList.sh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">默认获取上周一的时间</span></span><br><span class="line">dt=`date -d "7 days ago" +"%Y%m%d"`</span><br><span class="line">if [ "x$1" != "x" ]</span><br><span class="line">then</span><br><span class="line">    dt=`date -d "7 days ago $1" +"%Y%m%d"`</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">masterUrl="yarn-cluster"</span><br><span class="line">appName="GetRecommendListScala"`date +%s`</span><br><span class="line">boltUrl="bolt://bigdata04:7687"</span><br><span class="line">userName="neo4j"</span><br><span class="line">passWord="admin"</span><br><span class="line"><span class="meta">#</span><span class="bash">获取上周一的时间戳(单位：毫秒)</span></span><br><span class="line">timestamp=`date --date="$&#123;dt&#125;" +%s`000</span><br><span class="line"><span class="meta">#</span><span class="bash">粉丝列表关注重合度</span></span><br><span class="line">dumplicateNum=2</span><br><span class="line"><span class="meta">#</span><span class="bash">主播等级</span></span><br><span class="line">level=4</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">输出结果数据路径</span></span><br><span class="line">outputPath="hdfs://bigdata01:9000/data/recommend_data/$&#123;dt&#125;"</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">注意：需要将flink脚本路径配置到linux的环境变量中</span></span><br><span class="line">flink run \</span><br><span class="line">-m $&#123;masterUrl&#125; \</span><br><span class="line">-ynm $&#123;appName&#125; \</span><br><span class="line">-yqu default \</span><br><span class="line">-yjm 1024 \</span><br><span class="line">-ytm 1024 \</span><br><span class="line">-ys 1 \</span><br><span class="line">-p 5 \</span><br><span class="line">-c com.imooc.flink.GetRecommendListScala \</span><br><span class="line">/data/soft/video_recommend_v2/jobs/get_recommend_list-1.0-SNAPSHOT-jar-with-dependencies.jar $&#123;appName&#125; $&#123;boltUrl&#125; $&#123;userName&#125; $&#123;passWord&#125; $&#123;timestamp&#125; $&#123;dumplicateNum&#125; $&#123;level&#125; $&#123;outputPath&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">验证任务执行状态</span></span><br><span class="line">appStatus=`yarn application -appStates FINISHED -list | grep $&#123;appName&#125; | awk '&#123;print $8&#125;'`</span><br><span class="line">if [ "$&#123;appStatus&#125;" != "SUCCEEDED" ]</span><br><span class="line">then</span><br><span class="line">    echo "任务执行失败"</span><br><span class="line">    # 发送短信或者邮件</span><br><span class="line">else</span><br><span class="line">    echo "任务执行成功"</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="提交任务"><a href="#提交任务" class="headerlink" title="提交任务"></a>提交任务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -x startGetRecommendList.sh 20260201</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305161504206.png" alt="image-20230516150429277"></p><h2 id="三度关系列表数据导出到Redis-任务七"><a href="#三度关系列表数据导出到Redis-任务七" class="headerlink" title="三度关系列表数据导出到Redis(任务七)"></a>三度关系列表数据导出到Redis(任务七)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用Flink程序实现将三度关系列表数据导出到Redis</span><br><span class="line"></span><br><span class="line">注意：此任务每周执行一次，在任务6执行完毕以后执行这个。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">创建子module项目：export_data</span><br><span class="line">在项目中创建scala目录，引入scala2.12版本的SDK</span><br><span class="line">创建package：com.imooc.flink</span><br><span class="line">在pom.xml中添加依赖</span><br></pre></td></tr></table></figure><h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot;</span><br><span class="line">         xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;artifactId&gt;db_video_recommend_v2&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;groupId&gt;org.example&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;parent&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;&#x2F;modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;artifactId&gt;export_data&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-api&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-log4j12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-scala_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-clients_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.hadoop&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;hadoop-client&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;redis.clients&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jedis&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;!-- 编译插件 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-compiler-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;3.6.0&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;source&gt;1.8&lt;&#x2F;source&gt;</span><br><span class="line">                    &lt;target&gt;1.8&lt;&#x2F;target&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;&#x2F;encoding&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">            &lt;!-- scala编译插件 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;net.alchim31.maven&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;scala-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;3.1.6&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;scalaCompatVersion&gt;2.12&lt;&#x2F;scalaCompatVersion&gt;</span><br><span class="line">                    &lt;scalaVersion&gt;2.12.11&lt;&#x2F;scalaVersion&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;&#x2F;encoding&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;compile-scala&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;compile&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;add-source&lt;&#x2F;goal&gt;</span><br><span class="line">                            &lt;goal&gt;compile&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;test-compile-scala&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;test-compile&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;add-source&lt;&#x2F;goal&gt;</span><br><span class="line">                            &lt;goal&gt;testCompile&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                &lt;&#x2F;executions&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">            &lt;!-- 打jar包插件(会包含所有依赖) --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-assembly-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.6&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;descriptorRefs&gt;</span><br><span class="line">                        &lt;descriptorRef&gt;jar-with-dependencies&lt;&#x2F;descriptorRef&gt;</span><br><span class="line">                    &lt;&#x2F;descriptorRefs&gt;</span><br><span class="line">                    &lt;archive&gt;</span><br><span class="line">                        &lt;manifest&gt;</span><br><span class="line">                            &lt;!-- 可以设置jar包的入口类(可选) --&gt;</span><br><span class="line">                            &lt;mainClass&gt;&lt;&#x2F;mainClass&gt;</span><br><span class="line">                        &lt;&#x2F;manifest&gt;</span><br><span class="line">                    &lt;&#x2F;archive&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;make-assembly&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;package&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;single&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                &lt;&#x2F;executions&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">        &lt;&#x2F;plugins&gt;</span><br><span class="line">    &lt;&#x2F;build&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;project&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在resources目录中添加log4j.properties配置文件</span><br><span class="line">创建类：ExportDataScala</span><br><span class="line">代码如下：</span><br></pre></td></tr></table></figure><h3 id="ExportDataScala"><a href="#ExportDataScala" class="headerlink" title="ExportDataScala"></a>ExportDataScala</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.flink</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.scala.<span class="type">ExecutionEnvironment</span></span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.<span class="type">Jedis</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 任务7：</span></span><br><span class="line"><span class="comment"> * 将三度列表关系数据导出到Redis</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">ExportDataScala</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">var</span> filePath = <span class="string">"hdfs://bigdata01:9000/data/recommend_data/20260125"</span></span><br><span class="line">    <span class="keyword">var</span> redisHost = <span class="string">"bigdata04"</span></span><br><span class="line">    <span class="keyword">var</span> redisPort = <span class="number">6379</span></span><br><span class="line">    <span class="keyword">if</span>(args.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">      filePath = args(<span class="number">0</span>)</span><br><span class="line">      redisHost = args(<span class="number">1</span>)</span><br><span class="line">      redisPort = args(<span class="number">2</span>).toInt</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> env = <span class="type">ExecutionEnvironment</span>.getExecutionEnvironment</span><br><span class="line">    <span class="comment">//读取hdfs中的数据</span></span><br><span class="line">    <span class="keyword">val</span> text = env.readTextFile(filePath)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加隐式转换代码</span></span><br><span class="line">    <span class="keyword">import</span> org.apache.flink.api.scala._</span><br><span class="line">    <span class="comment">//处理数据</span></span><br><span class="line">    text.mapPartition(it=&gt;&#123;</span><br><span class="line">      <span class="comment">//获取jedis连接</span></span><br><span class="line">      <span class="keyword">val</span> jedis = <span class="keyword">new</span> <span class="type">Jedis</span>(redisHost, redisPort)</span><br><span class="line">      <span class="comment">//开启管道(提高性能，不开启也没事)</span></span><br><span class="line">      <span class="keyword">val</span> pipeline = jedis.pipelined()</span><br><span class="line">      it.foreach(line=&gt;&#123;</span><br><span class="line">        <span class="keyword">val</span> fields = line.split(<span class="string">"\t"</span>)</span><br><span class="line">        <span class="comment">//获取uid</span></span><br><span class="line">        <span class="keyword">val</span> uid = fields(<span class="number">0</span>)</span><br><span class="line">        <span class="comment">//获取待推荐主播列表</span></span><br><span class="line">        <span class="keyword">val</span> recommend_uids = fields(<span class="number">1</span>).split(<span class="string">","</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//注意：在这里给key起一个有意义的名字，l表示list类型、rec是recommend的简写(简写是因为key要放内存)</span></span><br><span class="line">        <span class="keyword">val</span> key = <span class="string">"l_rec_"</span>+uid</span><br><span class="line"></span><br><span class="line">        <span class="comment">//先删除(保证每周更新一次),pipeline中的删除操作在scala语言下使用有问题</span></span><br><span class="line">        jedis.del(key)</span><br><span class="line">        <span class="keyword">for</span>(r_uid &lt;- recommend_uids)&#123;</span><br><span class="line">          pipeline.rpush(key,r_uid)</span><br><span class="line">          <span class="comment">//给key设置一个有效时间，30天，如果30天数据没有更新，则删除此key</span></span><br><span class="line">          pipeline.expire(key,<span class="number">30</span>*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="comment">//提交管道中的命令</span></span><br><span class="line">      pipeline.sync()</span><br><span class="line">      <span class="comment">//关闭jedis连接</span></span><br><span class="line">      jedis.close()</span><br><span class="line">      <span class="string">""</span></span><br><span class="line">    &#125;).print()</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：在执行代码之前，需要先把redis服务启动起来</span><br></pre></td></tr></table></figure><h3 id="本地执行"><a href="#本地执行" class="headerlink" title="本地执行"></a>本地执行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在本地执行代码，到redis中验证效果。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305161647908.png" alt="image-20230516164750844"></p><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305161638708.png" alt="image-20230516163851685"></p><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305161649565.png" alt="image-20230516164936168"></p><h3 id="打包-1"><a href="#打包-1" class="headerlink" title="打包"></a>打包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">接下来对程序编译打包</span><br><span class="line">在pom.xml中添加编译打包配置</span><br></pre></td></tr></table></figure><h3 id="startExportData-sh"><a href="#startExportData-sh" class="headerlink" title="startExportData.sh"></a>startExportData.sh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">默认获取上周一的时间</span></span><br><span class="line">dt=`date -d "7 days ago" +"%Y%m%d"`</span><br><span class="line">if [ "x$1" != "x" ]</span><br><span class="line">then</span><br><span class="line">    dt=`date -d "7 days ago $1" +"%Y%m%d"`</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">HDFS输入数据路径</span></span><br><span class="line">filePath="hdfs://bigdata01:9000/data/recommend_data/$&#123;dt&#125;"</span><br><span class="line"></span><br><span class="line">masterUrl="yarn-cluster"</span><br><span class="line">appName="ExportDataScala"`date +%s`</span><br><span class="line">redisHost="bigdata04"</span><br><span class="line">redisPort=6379</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">注意：需要将flink脚本路径配置到linux的环境变量中</span></span><br><span class="line">flink run \</span><br><span class="line">-m $&#123;masterUrl&#125; \</span><br><span class="line">-ynm $&#123;appName&#125; \</span><br><span class="line">-yqu default \</span><br><span class="line">-yjm 1024 \</span><br><span class="line">-ytm 1024 \</span><br><span class="line">-ys 1 \</span><br><span class="line">-p 5 \</span><br><span class="line">-c com.imooc.flink.ExportDataScala \</span><br><span class="line">/data/soft/video_recommend_v2/jobs/export_data-1.0-SNAPSHOT-jar-with-dependencies.jar $&#123;filePath&#125; $&#123;redisHost&#125; $&#123;redisPort&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">验证任务执行状态</span></span><br><span class="line">appStatus=`yarn application -appStates FINISHED -list | grep $&#123;appName&#125; | awk '&#123;print $8&#125;'`</span><br><span class="line">if [ "$&#123;appStatus&#125;" != "SUCCEEDED" ]</span><br><span class="line">then</span><br><span class="line">    echo "任务执行失败"</span><br><span class="line">    # 发送短信或者邮件</span><br><span class="line">else</span><br><span class="line">    echo "任务执行成功"</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="提交任务-1"><a href="#提交任务-1" class="headerlink" title="提交任务"></a>提交任务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">向集群提交任务，先把redis中之前生成的数据删一下</span><br><span class="line"></span><br><span class="line">sh -x startExportData.sh 20260201</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">任务成功执行，验证redis中的结果也是正确的</span><br></pre></td></tr></table></figure><h2 id="数据接口定义及开发-java-web了解即可"><a href="#数据接口定义及开发-java-web了解即可" class="headerlink" title="数据接口定义及开发(java web了解即可)"></a>数据接口定义及开发(java web了解即可)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">前面我们把结果数据计算好了，那接下来我们需要开发数据接口，对外提供数据。</span><br><span class="line">首先定义接口文档</span><br></pre></td></tr></table></figure><h3 id="数据接口文档定义"><a href="#数据接口文档定义" class="headerlink" title="数据接口文档定义"></a>数据接口文档定义</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">为了方便跨部门数据使用，我们需要定义接口文档，便于其他部门的同事使用我们的数据</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305161701517.png" alt="image-20230516170118438"></p><h3 id="数据接口代码开发"><a href="#数据接口代码开发" class="headerlink" title="数据接口代码开发"></a>数据接口代码开发</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">开发数据接口需要用到javaweb项目，在这给大家演示一下如何基于spring-boot搭建一个javaweb项目</span><br><span class="line">创建子module项目：data_server</span><br><span class="line">在pom.xml中添加依赖</span><br><span class="line">首先添加spring-boot的依赖，还有fastjson依赖，因为我们后面在传输数据的时候需要使用json格式</span><br></pre></td></tr></table></figure><h4 id="pom-xml-1"><a href="#pom-xml-1" class="headerlink" title="pom.xml"></a>pom.xml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot;</span><br><span class="line">         xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;artifactId&gt;db_video_recommend_v2&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;groupId&gt;org.example&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;parent&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;&#x2F;modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;artifactId&gt;data_server&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;fastjson&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;redis.clients&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jedis&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;!-- java编译插件 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-compiler-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.3.2&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;source&gt;1.8&lt;&#x2F;source&gt;</span><br><span class="line">                    &lt;target&gt;1.8&lt;&#x2F;target&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;&#x2F;encoding&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.1.1.RELEASE&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;mainClass&gt;com.imooc.Application&lt;&#x2F;mainClass&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;repackage&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                &lt;&#x2F;executions&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">        &lt;&#x2F;plugins&gt;</span><br><span class="line">    &lt;&#x2F;build&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;project&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在项目的resource目录中添加这两个文件</span><br><span class="line"></span><br><span class="line">application.properties</span><br><span class="line">logback.xml</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">创建包：com.imooc</span><br><span class="line">然后把下面这几个文件夹及文件拷贝到com.imooc包里面</span><br><span class="line">controller</span><br><span class="line">Application.java</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305161716013.png" alt="image-20230516171622873"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">直接在Application类中右键执行，就可以启动这个javaweb项目，项目内部已经集成了tomcta容器，监听的端口是8085</span><br><span class="line">验证项目是否可以正常访问。</span><br><span class="line">在浏览器中访问</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305161726656.png" alt="image-20230516172612542"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">能看到结果数据说明此项目的基础框架是ok的，接下来我们就来开发一个接口</span><br><span class="line">由于在这我们需要操作redis，所以需要到pom.xml中增加jedis的依赖，以及把我们之前开发的RedisUtils工具类也拷贝过来</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在com.imooc下创建utils目录，把RedisUtils拷贝到里面</span><br><span class="line"></span><br><span class="line">接下来到DataController类中增加一个方法：getRecommendList</span><br><span class="line">代码如下：</span><br></pre></td></tr></table></figure><h4 id="DataController-java"><a href="#DataController-java" class="headerlink" title="DataController.java"></a>DataController.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.imooc.utils.RedisUtils;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数据接口V1.0</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span><span class="comment">//控制器类</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/v1"</span>)<span class="comment">//映射路径</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(DataController<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试接口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value=<span class="string">"/t1"</span>,method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(@RequestParam(<span class="string">"name"</span>)</span> String name) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello,"</span>+name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主播uid查询三度关系推荐列表数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 返回数据格式：</span></span><br><span class="line"><span class="comment">     * &#123;"flag":"success/error","msg":"错误信息","rec_uids":["1005","1004"]&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> uid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value=<span class="string">"/get_recommend_list"</span>,method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> JSONObject <span class="title">getRecommendList</span><span class="params">(@RequestParam(<span class="string">"uid"</span>)</span> String uid) </span>&#123;</span><br><span class="line">        JSONObject resobj = <span class="keyword">new</span> JSONObject();</span><br><span class="line">        String flag = <span class="string">"success"</span>;</span><br><span class="line">        String msg = <span class="string">"ok"</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Jedis jedis = RedisUtils.getJedis();</span><br><span class="line">            <span class="comment">//获取待推荐列表数据</span></span><br><span class="line">            List&lt;String&gt; uidList = jedis.lrange(<span class="string">"l_rec_"</span> + uid, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">            String[] uidArr = uidList.toArray(<span class="keyword">new</span> String[<span class="number">0</span>]);</span><br><span class="line">            resobj.put(<span class="string">"rec_uids"</span>,uidArr);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            flag = <span class="string">"error"</span>;</span><br><span class="line">            msg = e.getMessage();</span><br><span class="line">            logger.error(msg);</span><br><span class="line">        &#125;</span><br><span class="line">        resobj.put(<span class="string">"flag"</span>,flag);</span><br><span class="line">        resobj.put(<span class="string">"msg"</span>,msg);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> resobj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Application-java"><a href="#Application-java" class="headerlink" title="Application.java"></a>Application.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Spring boot 入口启动程序</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span> <span class="comment">//定义springboot入口程序</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(Application<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">重新启动data_server项目</span><br><span class="line">然后在浏览器中访问刚才开发的接口，能看到正常输出结果则说明此接口是正常的。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305161730743.png" alt="image-20230516173008401"></p><h3 id="打包-2"><a href="#打包-2" class="headerlink" title="打包"></a>打包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar data_server-1.0-SNAPSHOT.jar &amp;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这个命令相当于模拟浏览器的请求</span><br><span class="line">curl -XGET &#39;http:&#x2F;&#x2F;bigdata04:8085&#x2F;v1&#x2F;get_recommend_list?uid&#x3D;1000&#39;</span><br><span class="line">&#123;&quot;msg&quot;:&quot;ok&quot;,&quot;flag&quot;:&quot;success&quot;,&quot;rec_uids&quot;:[&quot;1005&quot;,&quot;1004&quot;]&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305161754559.png" alt="image-20230516175456652"></p><h2 id="数据展示"><a href="#数据展示" class="headerlink" title="数据展示"></a>数据展示</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">略略略</span><br></pre></td></tr></table></figure><h2 id="项目扩展优化"><a href="#项目扩展优化" class="headerlink" title="项目扩展优化"></a>项目扩展优化</h2><h3 id="如何保证在Neo4j中维护平台全量粉丝关注数据"><a href="#如何保证在Neo4j中维护平台全量粉丝关注数据" class="headerlink" title="如何保证在Neo4j中维护平台全量粉丝关注数据"></a>如何保证在Neo4j中维护平台全量粉丝关注数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">针对粉丝关注数据我们有两份</span><br><span class="line">第一份是历史粉丝关注数据</span><br><span class="line">第二份是实时粉丝关注数据</span><br><span class="line"></span><br><span class="line">如何通过这两份数据实现维护平台全量粉丝关注数据呢？</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">背景是这样的</span><br><span class="line">历史粉丝数据是由服务端每天晚上0点的时候定时同步到mysql数据库中的，因为之前平台是把粉丝的关注数据，存储到了redis中，每天晚上定时向mysql中同步一次。</span><br><span class="line">实时粉丝数据在准备做这个项目之前通过日志采集工具把这些数据采集到kafka里面了</span><br><span class="line"></span><br><span class="line">基于此，假设我们是在2026年2月1日那天上午10点开始将mysql中的历史数据导出来，然后批量导入到neo4j中，mysql中的粉丝数据其实是截止到2026年2月1日0点的。</span><br><span class="line">这个导入过程当时耗时将近2天。</span><br><span class="line">也就是在2026年2月3日上午10点左右导入完毕的，此时neo4j中的粉丝关注数据是截止到2026年2月1日0点的。</span><br><span class="line"></span><br><span class="line">接下来我们需要通过kafka来将这两天内的粉丝关注数据读取出来，补充到neo4j中，如何实现呢？</span><br><span class="line">因为我们的kafka当时是保存3天的数据，所以说这里面保存的还有2026-01-31 10点左右开始的数据，所以说当时我们开发好SparkStreaming程序之后，使用一个新的消费者groupid，然后将auto.offset.reset设置为earlist，读取最早的数据，这样就可以将这个topic中前3天的数据都读出来，然后在neo4j中进行维护，这样其实会重复执行2026-01-31 10点到2月1 日0点之间的数据，但是对最终的结果是没有影响的。</span><br><span class="line">这样就可以实现在neo4j中全量维护粉丝关注数据了。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305162119832.png" alt="image-20230516210302781"></p><h3 id="如何解决数据乱序导致的粉丝关注关系不准确"><a href="#如何解决数据乱序导致的粉丝关注关系不准确" class="headerlink" title="如何解决数据乱序导致的粉丝关注关系不准确"></a>如何解决数据乱序导致的粉丝关注关系不准确</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">通过在sparkStreaming内部对读取到的一小批数据基于时间进行排序，按照时间顺序执行粉丝关注相关操作，这样可以从一定程度上解决数据乱序的问题</span><br><span class="line">在v2.0中，我们使用了Flink计算引擎，此时可以使用watermark+eventtime来解决数据乱序的问题。</span><br></pre></td></tr></table></figure><h3 id="如何优化三度关系推荐列表数据计算程序"><a href="#如何优化三度关系推荐列表数据计算程序" class="headerlink" title="如何优化三度关系推荐列表数据计算程序"></a>如何优化三度关系推荐列表数据计算程序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">针对三度关系推荐列表数据计算程序：GetRecommendListScala</span><br><span class="line">这个任务在执行的时候需要执行20个小时左右，因为这里面会先查询出来满足条件的主播，然后挨个计算这些主播的三度关系数据，这里面需要和neo4j进行交互，主要慢在了neo4j这里，因为三度关系查询是比较复杂的，所以会比较耗时。</span><br><span class="line">这个任务在执行的时候我们会发现它有时候无缘无故的提示task丢失，进而导致任务失败，还得重新计算，代价太大，所以这样不太靠谱。</span><br><span class="line">后来发现是由于spark离线任务执行时间过长的时候会出现这种task丢失的问题。</span><br><span class="line">所以后来我们对这个程序又做了优化。</span><br><span class="line">针对第一步计算出来的主播列表，分成20份保存到hdfs上面</span><br></pre></td></tr></table></figure><h3 id="项目数据规模"><a href="#项目数据规模" class="headerlink" title="项目数据规模"></a>项目数据规模</h3><h3 id="集群资源规模-HDP集群"><a href="#集群资源规模-HDP集群" class="headerlink" title="集群资源规模(HDP集群)"></a>集群资源规模(HDP集群)</h3><h3 id="集群数据规模"><a href="#集群数据规模" class="headerlink" title="集群数据规模"></a>集群数据规模</h3><h3 id="Neo4j性能指标"><a href="#Neo4j性能指标" class="headerlink" title="Neo4j性能指标"></a>Neo4j性能指标</h3><h3 id="Neo4j核心参数修改"><a href="#Neo4j核心参数修改" class="headerlink" title="Neo4j核心参数修改"></a>Neo4j核心参数修改</h3><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据开发工程师" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
      <category term="大数据" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="直播平台三度关系推荐v2.0" scheme="http://tianyong.fun/tags/%E7%9B%B4%E6%92%AD%E5%B9%B3%E5%8F%B0%E4%B8%89%E5%BA%A6%E5%85%B3%E7%B3%BB%E6%8E%A8%E8%8D%90v2-0/"/>
    
  </entry>
  
  <entry>
    <title>大数据开发工程师-第十八周 直播平台三度关系推荐v2.0-1</title>
    <link href="http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC%E5%8D%81%E5%85%AB%E5%91%A8-%E7%9B%B4%E6%92%AD%E5%B9%B3%E5%8F%B0%E4%B8%89%E5%BA%A6%E5%85%B3%E7%B3%BB%E6%8E%A8%E8%8D%90v2-0-1.html"/>
    <id>http://tianyong.fun/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88-%E7%AC%AC%E5%8D%81%E5%85%AB%E5%91%A8-%E7%9B%B4%E6%92%AD%E5%B9%B3%E5%8F%B0%E4%B8%89%E5%BA%A6%E5%85%B3%E7%B3%BB%E6%8E%A8%E8%8D%90v2-0-1.html</id>
    <published>2023-04-24T07:37:38.000Z</published>
    <updated>2023-06-13T01:25:37.399Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><script type="text/javascript" src="/js/src/bai.js"></script><h1 id="第十八周-直播平台三度关系推荐v2-0-1"><a href="#第十八周-直播平台三度关系推荐v2-0-1" class="headerlink" title="第十八周 直播平台三度关系推荐v2.0-1"></a>第十八周 直播平台三度关系推荐v2.0-1</h1><h2 id="V1-0架构存在的问题"><a href="#V1-0架构存在的问题" class="headerlink" title="V1.0架构存在的问题"></a>V1.0架构存在的问题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">V1.0这个架构里面其实存在三个主要的问题</span><br><span class="line"></span><br><span class="line">SparkStreaming程序的实时性不够</span><br><span class="line">其实说实话，针对目前的粉丝实时关注数据，使用SparkStreaming程序来维护问题也不大，但是我们程序猿是要有追求的，既然有更好的方案，那我们肯定不能使用差的，所以这块我们我们需要使用Flink来实现，它可以提供真正意义上的实时。</span><br><span class="line"></span><br><span class="line">三度关系推荐数据适合存储在缓存系统中(Redis)</span><br><span class="line">咱们前面把最终计算好的三度关系数据保存在了MySQL中。</span><br><span class="line">其实这种数据是比较适合存储到一些基于内存的缓存系统中的，对查询的性能要求比较高，并且这些数据也是有时效性的，需要定时更新和删除老数据，所以说此时，使用redis是比较合适的，redis的查询性能比较高，并且redis中可以给key设置一个生存时间，可以实现定时删除过期数据的效果。</span><br><span class="line">咱们这份数据是有2个字段，第一列是主播uid，第二列是待推荐的主播uid</span><br><span class="line">存储到redis里面的话value使用list类型即可，在list类型里面存储待推荐的主播列表</span><br><span class="line"></span><br><span class="line">为了规范数据使用，建议开发数据接口</span><br><span class="line">咱们前面把存储系统直接暴露给其他业务部门，是不太安全的，并且他们使用起来也不方便，在实际工作中，各个业务部门之间进行数据交互，正规流程都是提供接口。</span><br><span class="line">还有一个原因是这样的，我们在开发一个功能的时候，假设需要前端和后端同时开发，这个时候我们就需要提前把数据接口定义好，先提供假数据，这样前端和后端可以同时进行开发，前端在开发页面功能的时候就可以使用我们提供的数据接口了，当我们把后端功能搞定以后，修改数据接口的底层逻辑代码，接入真实的数据即可，这个时候对前端而言是没有任何影响的，就算后期我们修改表结构了，对前端也没有什么影响，只要接口没有变就行，这样也可以实现前端和后端的解耦。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305020904879.png" alt="image-20230502090405428"></p><h2 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">接下来再来回顾一下技术选型，看看在V2.0中有哪些变化</span><br><span class="line">还是这4大块</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305020905225.png" alt="image-20230502090508445"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在数据采集这块，去掉了Sqoop，因为在这里我们需要将三度关系数据导出到redis中，sqoop是不支持的，所以我们需要开发flink程序实现数据导出功能。</span><br><span class="line"></span><br><span class="line">在数据存储这块，我们把MySQL改为了Redis</span><br><span class="line"></span><br><span class="line">在数据计算这块，我们把Spark计算引擎改为了Flink，在V2.0中，我们将之前使用Spark开发的代码都使用Flink重新实现一遍。</span><br><span class="line"></span><br><span class="line">数据展现模块没有变化。</span><br></pre></td></tr></table></figure><h2 id="整体架构设计"><a href="#整体架构设计" class="headerlink" title="整体架构设计"></a>整体架构设计</h2><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305020909294.png" alt="image-20230502090921788"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这是最新的架构图，在这里面，替换了Spark计算引擎和MySQL数据库，引入了Flink和Redis</span><br><span class="line">以及在这里引入了数据接口模块，通过接口对外提供数据。</span><br><span class="line">其它的地方没有变化。</span><br><span class="line"></span><br><span class="line">注意：其实针对离线计算使用Spark或者Flink没有多大区别，不过我们还是希望一个项目中的计算框架相对来说是统一的，这样好管理，也好维护，所以在V2.0架构中，不管是离线计算还是实时计算，都使用Flink实现。</span><br></pre></td></tr></table></figure><h2 id="数据采集模块开发"><a href="#数据采集模块开发" class="headerlink" title="数据采集模块开发"></a>数据采集模块开发</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据采集模块没有变化，所以在这就不再分析了。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305020911095.png" alt="image-20230502091109759"></p><h2 id="数据计算核心指标详细分析"><a href="#数据计算核心指标详细分析" class="headerlink" title="数据计算核心指标详细分析"></a>数据计算核心指标详细分析</h2><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305020913388.png" alt="image-20230502091324304"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这里面的数据源和计算指标都没有变化</span><br><span class="line">一共还是这7个步骤</span><br></pre></td></tr></table></figure><h2 id="历史粉丝关注数据初始化-任务一"><a href="#历史粉丝关注数据初始化-任务一" class="headerlink" title="历史粉丝关注数据初始化(任务一)"></a>历史粉丝关注数据初始化(任务一)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一步：历史粉丝关注数据初始化</span><br><span class="line">这块流程是没有变化的，使用load csv将我们之前导出的历史粉丝关注数据进行初始化即可。</span><br><span class="line">把neo4j中之前的数据清空一下，直接删除neo4j下面的data目录即可，然后启动neo4j</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">通过浏览器访问neo4j，重新设置密码</span><br><span class="line"></span><br><span class="line">然后我们使用neo4j的shell命令行执行下面命令。</span><br><span class="line"></span><br><span class="line">连接neo4j</span><br><span class="line">bin&#x2F;cypher-shell -a bolt:&#x2F;&#x2F;bigdata04:7687 -u neo4j -p admin</span><br><span class="line"></span><br><span class="line">建立索引</span><br><span class="line">CREATE CONSTRAINT ON (user:User) ASSERT user.uid IS UNIQUE;</span><br><span class="line"></span><br><span class="line">批量导入数据</span><br><span class="line">USING PERIODIC COMMIT 1000</span><br><span class="line">       LOAD CSV WITH HEADERS FROM &#39;file:&#x2F;&#x2F;&#x2F;follower_00.log&#39; AS line FIELDTERMINATOR &#39;\t&#39;</span><br><span class="line">       MERGE (viewer:User &#123; uid: toString(line.fuid)&#125;)</span><br><span class="line">       MERGE (anchor:User &#123; uid: toString(line.uid)&#125;)</span><br><span class="line">       MERGE (viewer)-[:follow]-&gt;(anchor);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305020919105.png" alt="image-20230502091913756"></p><h2 id="实时维护粉丝关注数据-任务二"><a href="#实时维护粉丝关注数据-任务二" class="headerlink" title="实时维护粉丝关注数据(任务二)"></a>实时维护粉丝关注数据(任务二)</h2><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305020920206.png" alt="image-20230502092054017"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">使用Flink程序实时维护Neo4j中粉丝关注数据</span><br><span class="line">先创建maven项目db_video_recommend_v2</span><br><span class="line">在pom.xml中添加项目需要用到的所有依赖</span><br><span class="line"></span><br><span class="line">再创建子module项目：real_time_follow</span><br><span class="line">在项目中创建scala目录，引入scala2.12版本的SDK</span><br><span class="line">创建package：com.imooc.flink</span><br><span class="line">在pom.xml中添加依赖</span><br></pre></td></tr></table></figure><h3 id="父项目pom"><a href="#父项目pom" class="headerlink" title="父项目pom"></a>父项目pom</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot;</span><br><span class="line">         xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;&#x2F;modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;org.example&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;db_video_recommend_v2&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;packaging&gt;pom&lt;&#x2F;packaging&gt;</span><br><span class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;modules&gt;</span><br><span class="line">        &lt;module&gt;real_time_follow&lt;&#x2F;module&gt;</span><br><span class="line">        &lt;module&gt;update_user_level&lt;&#x2F;module&gt;</span><br><span class="line">        &lt;module&gt;update_user_active&lt;&#x2F;module&gt;</span><br><span class="line">        &lt;module&gt;update_video_info&lt;&#x2F;module&gt;</span><br><span class="line">        &lt;module&gt;get_recommend_list&lt;&#x2F;module&gt;</span><br><span class="line">        &lt;module&gt;export_data&lt;&#x2F;module&gt;</span><br><span class="line">        &lt;module&gt;data_server&lt;&#x2F;module&gt;</span><br><span class="line">    &lt;&#x2F;modules&gt;</span><br><span class="line">    &lt;dependencyManagement&gt;</span><br><span class="line">        &lt;dependencies&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.1.1.RELEASE&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.httpcomponents&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;httpclient&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;4.5.12&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;commons-dbutils&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;commons-dbutils&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.6&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;8.0.20&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.hadoop&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;hadoop-client&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;3.2.0&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;fastjson&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.2.68&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">            &lt;!-- flink相关依赖 --&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;flink-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.11.1&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;flink-streaming-java_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.11.1&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;flink-scala_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.11.1&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;flink-streaming-scala_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.11.1&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;flink-clients_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.11.1&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;flink-connector-kafka_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.11.1&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">            &lt;!-- log4j的依赖 --&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;slf4j-api&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.7.10&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;slf4j-log4j12&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.7.10&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">            &lt;!-- neo4j相关依赖 --&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.neo4j.driver&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;neo4j-java-driver&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;4.1.1&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">            &lt;!-- jedis依赖 --&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;redis.clients&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;jedis&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.9.0&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">            &lt;!--spring-boot依赖--&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.1.1.RELEASE&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;&#x2F;dependencies&gt;</span><br><span class="line">    &lt;&#x2F;dependencyManagement&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;project&gt;</span><br></pre></td></tr></table></figure><h3 id="子项目pom"><a href="#子项目pom" class="headerlink" title="子项目pom"></a>子项目pom</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot;</span><br><span class="line">         xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;artifactId&gt;db_video_recommend_v2&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;groupId&gt;org.example&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;parent&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;&#x2F;modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;artifactId&gt;real_time_follow&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">    &lt;!-- log4j的依赖 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-api&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-log4j12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;!-- flink的依赖 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-streaming-java_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-streaming-scala_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-clients_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-connector-kafka_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;!-- neo4j的依赖 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.neo4j.driver&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;neo4j-java-driver&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;!-- fastjson的依赖 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;fastjson&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;!-- 编译插件 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-compiler-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;3.6.0&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;source&gt;1.8&lt;&#x2F;source&gt;</span><br><span class="line">                    &lt;target&gt;1.8&lt;&#x2F;target&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;&#x2F;encoding&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">            &lt;!-- scala编译插件 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;net.alchim31.maven&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;scala-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;3.1.6&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;scalaCompatVersion&gt;2.12&lt;&#x2F;scalaCompatVersion&gt;</span><br><span class="line">                    &lt;scalaVersion&gt;2.12.11&lt;&#x2F;scalaVersion&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;&#x2F;encoding&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;compile-scala&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;compile&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;add-source&lt;&#x2F;goal&gt;</span><br><span class="line">                            &lt;goal&gt;compile&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;test-compile-scala&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;test-compile&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;add-source&lt;&#x2F;goal&gt;</span><br><span class="line">                            &lt;goal&gt;testCompile&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                &lt;&#x2F;executions&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">            &lt;!-- 打jar包插件(会包含所有依赖) --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-assembly-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.6&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;descriptorRefs&gt;</span><br><span class="line">                        &lt;descriptorRef&gt;jar-with-dependencies&lt;&#x2F;descriptorRef&gt;</span><br><span class="line">                    &lt;&#x2F;descriptorRefs&gt;</span><br><span class="line">                    &lt;archive&gt;</span><br><span class="line">                        &lt;manifest&gt;</span><br><span class="line">                            &lt;!-- 可以设置jar包的入口类(可选) --&gt;</span><br><span class="line">                            &lt;mainClass&gt;&lt;&#x2F;mainClass&gt;</span><br><span class="line">                        &lt;&#x2F;manifest&gt;</span><br><span class="line">                    &lt;&#x2F;archive&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;make-assembly&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;package&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;single&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                &lt;&#x2F;executions&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">        &lt;&#x2F;plugins&gt;</span><br><span class="line">    &lt;&#x2F;build&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;project&gt;</span><br></pre></td></tr></table></figure><h3 id="RealTimeFollowScala-scala"><a href="#RealTimeFollowScala-scala" class="headerlink" title="RealTimeFollowScala.scala"></a>RealTimeFollowScala.scala</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在resources目录中添加log4j.properties配置文件</span><br><span class="line">创建类：RealTimeFollowScala</span><br><span class="line">代码如下：</span><br></pre></td></tr></table></figure><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.flink</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.<span class="type">Properties</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.<span class="type">JSON</span></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.serialization.<span class="type">SimpleStringSchema</span></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.scala.<span class="type">StreamExecutionEnvironment</span></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.connectors.kafka.<span class="type">FlinkKafkaConsumer</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 任务2：</span></span><br><span class="line"><span class="comment"> * 实时维护粉丝关注数据</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">RealTimeFollowScala</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">var</span> appName = <span class="string">"RealTimeFollowScala"</span></span><br><span class="line">    <span class="keyword">var</span> kafkaBrokers = <span class="string">"bigdata01:9092,bigdata02:9092,bigdata03:9092"</span></span><br><span class="line">    <span class="keyword">var</span> groupId = <span class="string">"con_f_1"</span></span><br><span class="line">    <span class="keyword">var</span> topic = <span class="string">"user_follow"</span></span><br><span class="line">    <span class="keyword">var</span> boltUrl = <span class="string">"bolt://bigdata04:7687"</span></span><br><span class="line">    <span class="keyword">var</span> userName = <span class="string">"neo4j"</span></span><br><span class="line">    <span class="keyword">var</span> passWord = <span class="string">"admin"</span></span><br><span class="line">    <span class="keyword">if</span>(args.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">      appName = args(<span class="number">0</span>)</span><br><span class="line">      kafkaBrokers = args(<span class="number">1</span>)</span><br><span class="line">      groupId = args(<span class="number">2</span>)</span><br><span class="line">      topic = args(<span class="number">3</span>)</span><br><span class="line">      boltUrl = args(<span class="number">4</span>)</span><br><span class="line">      userName = args(<span class="number">5</span>)</span><br><span class="line">      passWord = args(<span class="number">6</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> env = <span class="type">StreamExecutionEnvironment</span>.getExecutionEnvironment</span><br><span class="line"></span><br><span class="line">    <span class="comment">//指定FlinkKafkaConsumer相关配置</span></span><br><span class="line">    <span class="keyword">val</span> prop = <span class="keyword">new</span> <span class="type">Properties</span>()</span><br><span class="line">    prop.setProperty(<span class="string">"bootstrap.servers"</span>,kafkaBrokers)</span><br><span class="line">    prop.setProperty(<span class="string">"group.id"</span>,groupId)</span><br><span class="line">    <span class="keyword">val</span> kafkaConsumer = <span class="keyword">new</span> <span class="type">FlinkKafkaConsumer</span>[<span class="type">String</span>](topic, <span class="keyword">new</span> <span class="type">SimpleStringSchema</span>(), prop)</span><br><span class="line">    <span class="comment">//kafka consumer的消费策略设置</span></span><br><span class="line">    kafkaConsumer.setStartFromGroupOffsets()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//指定kafka作为source</span></span><br><span class="line">    <span class="keyword">import</span> org.apache.flink.api.scala._</span><br><span class="line">    <span class="keyword">val</span> text = env.addSource(kafkaConsumer)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//解析json数据中的核心字段</span></span><br><span class="line">    <span class="keyword">val</span> tupStream = text.map(line =&gt; &#123;</span><br><span class="line">      <span class="keyword">val</span> jsonObj = <span class="type">JSON</span>.parseObject(line)</span><br><span class="line">      <span class="keyword">val</span> desc = jsonObj.getString(<span class="string">"desc"</span>)</span><br><span class="line">      <span class="keyword">val</span> followerUid = jsonObj.getString(<span class="string">"followeruid"</span>)</span><br><span class="line">      <span class="keyword">val</span> followUid = jsonObj.getString(<span class="string">"followuid"</span>)</span><br><span class="line">      (desc, followerUid, followUid)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用Neo4jSink维护粉丝关注数据</span></span><br><span class="line">    <span class="keyword">val</span> param = <span class="type">Map</span>(<span class="string">"boltUrl"</span>-&gt;boltUrl,<span class="string">"userName"</span>-&gt;userName,<span class="string">"passWord"</span>-&gt;passWord)</span><br><span class="line">    tupStream.addSink(<span class="keyword">new</span> <span class="type">Neo4jSink</span>(param))</span><br><span class="line"></span><br><span class="line">    env.execute(appName)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">注意：由于flink中的实时计算是来一条数据计算一次，在StreamAPI中没有mapPartition方法，不支持一批一批的处理，如果每处理一条数据就获取一次Neo4j数据库连接，这样效率就太差了，所以我们需要实现一个自定义的sink组件，在sink组件内部有一个初始化函数可以获取一次连接，多次使用，这样就不需要频繁创建neo4j数据库连接了。</span><br><span class="line"></span><br><span class="line">实现自定义的sink需要实现SinkFunction接口或者继承RichSinkFunction</span><br><span class="line">具体实现逻辑可以参考已有connector中针对sink组件的实现</span><br><span class="line">例如：RedisSink</span><br><span class="line">源码在这里：</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;apache&#x2F;bahir-flink&#x2F;blob&#x2F;master&#x2F;flink-connector-redis&#x2F;src&#x2F;main&#x2F;java&#x2F;org&#x2F;apache&#x2F;flink&#x2F;streaming&#x2F;connectors&#x2F;redis&#x2F;RedisSink.java</span><br><span class="line"></span><br><span class="line">这里面一共有三个主要的函数：</span><br><span class="line">1：open，是一个初始化方法，在Sink组件初始化的时候执行一次，适合在里面初始化一些资源连接</span><br><span class="line">2：invoke，会被频繁调用，sink接收到一条数据这个方法就会执行一次，具体的业务逻辑在这里实现</span><br><span class="line">3：close，当任务停止的时候，会先调用sink组件中的close方法，适合在里面做一些关闭资源的操作</span><br></pre></td></tr></table></figure><h3 id="Neo4jSink-scala"><a href="#Neo4jSink-scala" class="headerlink" title="Neo4jSink.scala"></a>Neo4jSink.scala</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.flink</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.configuration.<span class="type">Configuration</span></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.functions.sink.&#123;<span class="type">RichSinkFunction</span>, <span class="type">SinkFunction</span>&#125;</span><br><span class="line"><span class="keyword">import</span> org.neo4j.driver.&#123;<span class="type">AuthTokens</span>, <span class="type">Driver</span>, <span class="type">GraphDatabase</span>, <span class="type">Transaction</span>, <span class="type">TransactionWork</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 维护粉丝数据在Neo4j中的关注关系</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Neo4jSink</span> <span class="keyword">extends</span> <span class="title">RichSinkFunction</span>[<span class="type">Tuple3</span>[<span class="type">String</span>,<span class="type">String</span>,<span class="type">String</span>]]</span>&#123;</span><br><span class="line">  <span class="comment">//保存neo4j相关的配置参数</span></span><br><span class="line">  <span class="keyword">var</span> param: <span class="type">Map</span>[<span class="type">String</span>,<span class="type">String</span>] = <span class="type">Map</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> driver: <span class="type">Driver</span> = _</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 构造函数</span></span><br><span class="line"><span class="comment">   * 接收neo4j相关的配置参数</span></span><br><span class="line"><span class="comment">   * @param param</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">this</span></span>(param: <span class="type">Map</span>[<span class="type">String</span>,<span class="type">String</span>])&#123;</span><br><span class="line">    <span class="keyword">this</span>()</span><br><span class="line">    <span class="keyword">this</span>.param = param</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 初始化方法，只执行一次</span></span><br><span class="line"><span class="comment">   * 适合初始化资源连接</span></span><br><span class="line"><span class="comment">   * @param parameters</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">open</span></span>(parameters: <span class="type">Configuration</span>): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">this</span>.driver = <span class="type">GraphDatabase</span>.driver(param(<span class="string">"boltUrl"</span>), <span class="type">AuthTokens</span>.basic(param(<span class="string">"userName"</span>), param(<span class="string">"passWord"</span>)))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 核心代码，来一条数据，此方法会执行一次</span></span><br><span class="line"><span class="comment">   * @param value</span></span><br><span class="line"><span class="comment">   * @param context</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">invoke</span></span>(value: (<span class="type">String</span>, <span class="type">String</span>, <span class="type">String</span>), context: <span class="type">SinkFunction</span>.<span class="type">Context</span>[_]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="comment">//开启会话</span></span><br><span class="line">    <span class="keyword">val</span> session = driver.session()</span><br><span class="line">    <span class="keyword">val</span> followType = value._1</span><br><span class="line">    <span class="keyword">val</span> followerUid = value._2</span><br><span class="line">    <span class="keyword">val</span> followUid = value._3</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="string">"follow"</span>.equals(followType))&#123;</span><br><span class="line">      <span class="comment">//添加关注：因为涉及多条命令，所以需要使用事务</span></span><br><span class="line">      session.writeTransaction(<span class="keyword">new</span> <span class="type">TransactionWork</span>[<span class="type">Unit</span>]()&#123;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">execute</span></span>(tx: <span class="type">Transaction</span>): <span class="type">Unit</span> = &#123;</span><br><span class="line">          <span class="keyword">try</span>&#123;</span><br><span class="line">            tx.run(<span class="string">"merge (:User &#123;uid:'"</span>+followerUid+<span class="string">"'&#125;)"</span>)</span><br><span class="line">            tx.run(<span class="string">"merge (:User &#123;uid:'"</span>+followUid+<span class="string">"'&#125;)"</span>)</span><br><span class="line">            tx.run(<span class="string">"match (a:User &#123;uid:'"</span>+followerUid+<span class="string">"'&#125;),(b:User &#123;uid:'"</span>+followUid+<span class="string">"'&#125;) merge (a) -[:follow]-&gt; (b)"</span>)</span><br><span class="line">            tx.commit()</span><br><span class="line">          &#125;<span class="keyword">catch</span> &#123;</span><br><span class="line">            <span class="keyword">case</span> ex: <span class="type">Exception</span> =&gt; tx.rollback()</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="comment">//取消关注</span></span><br><span class="line">      session.run(<span class="string">"match (:User &#123;uid:'"</span>+followerUid+<span class="string">"'&#125;) -[r:follow]-&gt; (:User &#123;uid:'"</span>+followUid+<span class="string">"'&#125;) delete r"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//关闭会话</span></span><br><span class="line">    session.close()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 任务停止的时候会先调用此方法</span></span><br><span class="line"><span class="comment">   * 适合关闭资源连接</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">close</span></span>(): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="comment">//关闭连接</span></span><br><span class="line">    <span class="keyword">if</span>(driver!=<span class="literal">null</span>)&#123;</span><br><span class="line">      driver.close()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="本地执行"><a href="#本地执行" class="headerlink" title="本地执行"></a>本地执行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">注意：需要确保zookeeper、kafka服务是正常运行的。</span><br><span class="line"></span><br><span class="line">接下来需要产生测试数据，我们可以继续使用之前generate_data项目中的GenerateRealTimeFollowData产生数据，这种流程我们前面在v1.0中已经使用过了。</span><br><span class="line">下面给大家演示一种方便测试的方法</span><br><span class="line">其实我们可以通过kafka的基于console的生产者直接向user_follow这个topic生产数据</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">关注数据</span><br><span class="line">&#123;&quot;followeruid&quot;:&quot;2004&quot;,&quot;followuid&quot;:&quot;2008&quot;,&quot;timestamp&quot;:1598771070069,&quot;type&quot;:&quot;user_follow&quot;,&quot;desc&quot;:&quot;follow&quot;&#125;</span><br><span class="line">取消关注数据</span><br><span class="line">&#123;&quot;followeruid&quot;:&quot;2004&quot;,&quot;followuid&quot;:&quot;2008&quot;,&quot;timestamp&quot;:1598771070069,&quot;type&quot;:&quot;user_follow&quot;,&quot;desc&quot;:&quot;unfollow&quot;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305021217745.png" alt="image-20230502121745119"></p><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305021218562.png" alt="image-20230502121838255"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">到neo4j中确认效果发现确实新增了一个关注关系</span><br><span class="line">再模拟产生一条粉丝取消关注的数据</span><br><span class="line"></span><br><span class="line">到neo4j中确认效果发现刚才新增的关注关系没有了。</span><br><span class="line">这样就说明我们自己定义的Neo4jSink是可以正常工作的。</span><br><span class="line"></span><br><span class="line">注意：在实际工作中，有时候为了方便测试代码是否可以正常运行，很多时候也会采用这种基于控制台的生产者直接模拟产生数据，这样不会经过中间商，没有差价！</span><br><span class="line">如果使用整个数据采集全链路流程的话，可能会由于中间某个环节出问题导致的最终看不到效果，此时我们还得排查到底是哪里出了问题，这样就乱套了，本来是要验证代码逻辑的，结果又要去排查其它地方的问题了。</span><br><span class="line">所以说针对流程比较复杂的，我们在测试的时候一块一块进行测试，先验证代码逻辑没问题，最后再跑一个全流程确认一下最终效果。</span><br></pre></td></tr></table></figure><h3 id="集群执行"><a href="#集群执行" class="headerlink" title="集群执行"></a>集群执行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">接下来我们希望把代码提交到集群上运行</span><br><span class="line">需要先调整代码，把参数提取出来</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">对项目打jar包</span><br><span class="line">在pom.xml中添加编译打包配置</span><br><span class="line">这里面的scala版本指定的是2.12版本</span><br><span class="line">注意：flink官方建议把所有依赖都打进一个jar包，所以我们在这就把依赖打进一个jar包里面。</span><br><span class="line">在flink1.11的时候新增了一个特性，可以支持动态指定依赖的jar包，但是我测试了还是有bug，所以在这我们就只能把依赖都打进jar包里面，其实我内心是拒绝的。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：针对log4j,flink相关的依赖在打包的时候不需要打进去，所以需要添加provided属性</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">此时我们就需要使用这个带有jar-with-dependencies的jar包了</span><br><span class="line">real_time_follow-1.0-SNAPSHOT-jar-with-dependencies.jar</span><br></pre></td></tr></table></figure><h3 id="startRealTimeFollow-sh"><a href="#startRealTimeFollow-sh" class="headerlink" title="startRealTimeFollow.sh"></a>startRealTimeFollow.sh</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">开发任务提交脚本</span><br><span class="line">startRealTimeFollow.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">masterUrl="yarn-cluster"</span><br><span class="line">appName="RealTimeFollowScala"</span><br><span class="line">kafkaBrokers="bigdata01:9092,bigdata02:9092,bigdata03:9092"</span><br><span class="line">groupId="con_f_1"</span><br><span class="line">topic="user_follow"</span><br><span class="line">boltUrl="bolt://bigdata04:7687"</span><br><span class="line">userName="neo4j"</span><br><span class="line">passWord="admin"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">注意：需要将flink脚本路径配置到linux的环境变量中</span></span><br><span class="line">flink run \</span><br><span class="line">-m $&#123;masterUrl&#125; \</span><br><span class="line">-ynm $&#123;appName&#125; \</span><br><span class="line">-yqu default \</span><br><span class="line">-yjm 1024 \</span><br><span class="line">-ytm 1024 \</span><br><span class="line">-ys 1 \</span><br><span class="line">-p 5 \</span><br><span class="line">-c com.imooc.flink.RealTimeFollowScala \</span><br><span class="line">/data/soft/video_recommend_v2/jobs/real_time_follow-1.0-SNAPSHOT-jar-with-dependencies.jar $&#123;appName&#125; $&#123;kafkaBrokers&#125; $&#123;groupId&#125; $&#123;topic&#125; $&#123;boltUrl&#125; $&#123;userName&#125; $&#123;passWord&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：在执行之前需要配置flink的环境变量，FLINK_HOME</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305021821488.png" alt="image-20230502182120542"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">向集群提交任务</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305021821591.png" alt="image-20230502182148965"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">通过kafka的console控制台生产者，模拟产生数据，到neo4j中确认效果，发现是没有问题的。</span><br><span class="line"></span><br><span class="line">注意：此时是存在数据乱序的问题的，前面在讲Flink的时候我们详细讲解过Flink中的乱序处理方案，在这里给大家留一个作业，对这个代码进行改造，解决数据乱序问题。</span><br></pre></td></tr></table></figure><h2 id="每天定时更新主播等级-任务三"><a href="#每天定时更新主播等级-任务三" class="headerlink" title="每天定时更新主播等级(任务三)"></a>每天定时更新主播等级(任务三)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用Flink程序实现每天定时更新主播等级</span><br><span class="line">创建子module项目：update_user_level</span><br><span class="line">在项目中创建scala目录，引入scala2.12版本的SDK</span><br><span class="line">创建package：com.imooc.flink</span><br><span class="line">在pom.xml中添加依赖</span><br></pre></td></tr></table></figure><h3 id="子项目pom-1"><a href="#子项目pom-1" class="headerlink" title="子项目pom"></a>子项目pom</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot;</span><br><span class="line">         xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;artifactId&gt;db_video_recommend_v2&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;groupId&gt;org.example&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;parent&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;&#x2F;modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;artifactId&gt;update_user_level&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-api&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-log4j12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-scala_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-clients_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.neo4j.driver&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;neo4j-java-driver&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.hadoop&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;hadoop-client&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;!-- 编译插件 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-compiler-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;3.6.0&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;source&gt;1.8&lt;&#x2F;source&gt;</span><br><span class="line">                    &lt;target&gt;1.8&lt;&#x2F;target&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;&#x2F;encoding&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">            &lt;!-- scala编译插件 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;net.alchim31.maven&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;scala-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;3.1.6&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;scalaCompatVersion&gt;2.12&lt;&#x2F;scalaCompatVersion&gt;</span><br><span class="line">                    &lt;scalaVersion&gt;2.12.11&lt;&#x2F;scalaVersion&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;&#x2F;encoding&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;compile-scala&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;compile&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;add-source&lt;&#x2F;goal&gt;</span><br><span class="line">                            &lt;goal&gt;compile&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;test-compile-scala&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;test-compile&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;add-source&lt;&#x2F;goal&gt;</span><br><span class="line">                            &lt;goal&gt;testCompile&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                &lt;&#x2F;executions&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">            &lt;!-- 打jar包插件(会包含所有依赖) --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-assembly-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.6&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;descriptorRefs&gt;</span><br><span class="line">                        &lt;descriptorRef&gt;jar-with-dependencies&lt;&#x2F;descriptorRef&gt;</span><br><span class="line">                    &lt;&#x2F;descriptorRefs&gt;</span><br><span class="line">                    &lt;archive&gt;</span><br><span class="line">                        &lt;manifest&gt;</span><br><span class="line">                            &lt;!-- 可以设置jar包的入口类(可选) --&gt;</span><br><span class="line">                            &lt;mainClass&gt;&lt;&#x2F;mainClass&gt;</span><br><span class="line">                        &lt;&#x2F;manifest&gt;</span><br><span class="line">                    &lt;&#x2F;archive&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;make-assembly&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;package&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;single&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                &lt;&#x2F;executions&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">        &lt;&#x2F;plugins&gt;</span><br><span class="line">    &lt;&#x2F;build&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;project&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在resources目录中添加log4j.properties配置文件</span><br></pre></td></tr></table></figure><h3 id="UpdateUserLevelScala-scala"><a href="#UpdateUserLevelScala-scala" class="headerlink" title="UpdateUserLevelScala.scala"></a>UpdateUserLevelScala.scala</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">创建类：UpdateUserLevelScala</span><br><span class="line">代码如下：</span><br></pre></td></tr></table></figure><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.flink</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.scala.<span class="type">ExecutionEnvironment</span></span><br><span class="line"><span class="keyword">import</span> org.neo4j.driver.&#123;<span class="type">AuthTokens</span>, <span class="type">GraphDatabase</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 任务3：</span></span><br><span class="line"><span class="comment"> * 每天定时更新主播等级</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">UpdateUserLevelScala</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">var</span> filePath = <span class="string">"hdfs://bigdata01:9000/data/cl_level_user/20260201"</span></span><br><span class="line">    <span class="keyword">var</span> boltUrl = <span class="string">"bolt://bigdata04:7687"</span></span><br><span class="line">    <span class="keyword">var</span> userName = <span class="string">"neo4j"</span></span><br><span class="line">    <span class="keyword">var</span> passWord = <span class="string">"admin"</span></span><br><span class="line">    <span class="keyword">if</span>(args.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">      filePath = args(<span class="number">0</span>)</span><br><span class="line">      boltUrl = args(<span class="number">1</span>)</span><br><span class="line">      userName = args(<span class="number">2</span>)</span><br><span class="line">      passWord = args(<span class="number">3</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> env = <span class="type">ExecutionEnvironment</span>.getExecutionEnvironment</span><br><span class="line">    <span class="comment">//读取hdfs中的数据</span></span><br><span class="line">    <span class="keyword">val</span> text = env.readTextFile(filePath)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//校验数据准确性</span></span><br><span class="line">    <span class="keyword">val</span> filterSet = text.filter(line =&gt; &#123;</span><br><span class="line">      <span class="keyword">val</span> fields = line.split(<span class="string">"\t"</span>)</span><br><span class="line">      <span class="keyword">if</span> (fields.length == <span class="number">8</span> &amp;&amp; !fields(<span class="number">0</span>).equals(<span class="string">"id"</span>)) &#123;</span><br><span class="line">        <span class="literal">true</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加隐式转换代码</span></span><br><span class="line">    <span class="keyword">import</span> org.apache.flink.api.scala._</span><br><span class="line"></span><br><span class="line">    <span class="comment">//处理数据</span></span><br><span class="line">    filterSet.mapPartition(it=&gt;&#123;</span><br><span class="line">      <span class="comment">//获取neo4j的连接</span></span><br><span class="line">      <span class="keyword">val</span> driver = <span class="type">GraphDatabase</span>.driver(boltUrl, <span class="type">AuthTokens</span>.basic(userName, passWord))</span><br><span class="line">      <span class="comment">//开启一个会话</span></span><br><span class="line">      <span class="keyword">val</span> session = driver.session()</span><br><span class="line">      it.foreach(line=&gt;&#123;</span><br><span class="line">        <span class="keyword">val</span> fields = line.split(<span class="string">"\t"</span>)</span><br><span class="line">        <span class="comment">//添加等级</span></span><br><span class="line">        session.run(<span class="string">"merge (u:User &#123;uid:'"</span>+fields(<span class="number">1</span>).trim+<span class="string">"'&#125;) set u.level = "</span>+fields(<span class="number">3</span>).trim)</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="comment">//关闭会话</span></span><br><span class="line">      session.close()</span><br><span class="line">      <span class="comment">//关闭连接</span></span><br><span class="line">      driver.close()</span><br><span class="line">      <span class="string">""</span> <span class="comment">// spark的foreachpartition不需要返回数据，flink dataset的mappartition需要返回数据</span></span><br><span class="line">    &#125;).print()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="本地执行-1"><a href="#本地执行-1" class="headerlink" title="本地执行"></a>本地执行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用之前生成的这份数据</span><br><span class="line">hdfs:&#x2F;&#x2F;bigdata01:9000&#x2F;data&#x2F;cl_level_user&#x2F;20260201</span><br><span class="line">在本地执行代码，到neo4j中确认节点中是否新增了level属性，如果有，就说明程序执行成功了。</span><br></pre></td></tr></table></figure><h3 id="集群执行-1"><a href="#集群执行-1" class="headerlink" title="集群执行"></a>集群执行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">接下来对程序编译打包</span><br><span class="line">在pom.xml中添加编译打包配置</span><br></pre></td></tr></table></figure><h3 id="startUpdateUserLevel-sh"><a href="#startUpdateUserLevel-sh" class="headerlink" title="startUpdateUserLevel.sh"></a>startUpdateUserLevel.sh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">默认获取昨天时间</span></span><br><span class="line">dt=`date -d "1 days ago" +"%Y%m%d"`</span><br><span class="line">if [ "x$1" != "x" ]</span><br><span class="line">then</span><br><span class="line">dt=$1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">HDFS输入数据路径</span></span><br><span class="line">filePath="hdfs://bigdata01:9000/data/cl_level_user/$&#123;dt&#125;"</span><br><span class="line"></span><br><span class="line">masterUrl="yarn-cluster"</span><br><span class="line">appName="UpdateUserLevelScala"`date +%s`</span><br><span class="line">boltUrl="bolt://bigdata04:7687"</span><br><span class="line">userName="neo4j"</span><br><span class="line">passWord="admin"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">注意：需要将flink脚本路径配置到linux的环境变量中</span></span><br><span class="line">flink run \</span><br><span class="line">-m $&#123;masterUrl&#125; \</span><br><span class="line">-ynm $&#123;appName&#125; \</span><br><span class="line">-yqu default \</span><br><span class="line">-yjm 1024 \</span><br><span class="line">-ytm 1024 \</span><br><span class="line">-ys 1 \</span><br><span class="line">-p 5 \</span><br><span class="line">-c com.imooc.flink.UpdateUserLevelScala \</span><br><span class="line">/data/soft/video_recommend_v2/jobs/update_user_level-1.0-SNAPSHOT-jar-with-dependencies.jar $&#123;filePath&#125; $&#123;boltUrl&#125; $&#123;userName&#125; $&#123;passWord&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">验证任务执行状态</span></span><br><span class="line">appStatus=`yarn application -appStates FINISHED -list | grep $&#123;appName&#125; | awk '&#123;print $8&#125;'`</span><br><span class="line">if [ "$&#123;appStatus&#125;" != "SUCCEEDED" ]</span><br><span class="line">then</span><br><span class="line">    echo "任务执行失败"</span><br><span class="line">    # 发送短信或者邮件</span><br><span class="line">else</span><br><span class="line">    echo "任务执行成功"</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h2 id="每天定时更新用户活跃时间-任务四"><a href="#每天定时更新用户活跃时间-任务四" class="headerlink" title="每天定时更新用户活跃时间(任务四)"></a>每天定时更新用户活跃时间(任务四)</h2><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305031521064.png" alt="image-20230503152132924"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用Flink程序实现每天定时更新用户活跃时间</span><br><span class="line">创建子module项目：update_user_active</span><br><span class="line">在项目中创建scala目录，引入scala2.12版本的SDK</span><br><span class="line">创建package：com.imooc.flink</span><br><span class="line">在pom.xml中添加依赖</span><br></pre></td></tr></table></figure><h3 id="子项目pom-2"><a href="#子项目pom-2" class="headerlink" title="子项目pom"></a>子项目pom</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot;</span><br><span class="line">         xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;artifactId&gt;db_video_recommend_v2&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;groupId&gt;org.example&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;parent&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;&#x2F;modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;artifactId&gt;update_user_active&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-api&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-log4j12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-scala_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-clients_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.neo4j.driver&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;neo4j-java-driver&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.hadoop&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;hadoop-client&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;fastjson&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;!-- 编译插件 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-compiler-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;3.6.0&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;source&gt;1.8&lt;&#x2F;source&gt;</span><br><span class="line">                    &lt;target&gt;1.8&lt;&#x2F;target&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;&#x2F;encoding&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">            &lt;!-- scala编译插件 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;net.alchim31.maven&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;scala-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;3.1.6&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;scalaCompatVersion&gt;2.12&lt;&#x2F;scalaCompatVersion&gt;</span><br><span class="line">                    &lt;scalaVersion&gt;2.12.11&lt;&#x2F;scalaVersion&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;&#x2F;encoding&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;compile-scala&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;compile&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;add-source&lt;&#x2F;goal&gt;</span><br><span class="line">                            &lt;goal&gt;compile&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;test-compile-scala&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;test-compile&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;add-source&lt;&#x2F;goal&gt;</span><br><span class="line">                            &lt;goal&gt;testCompile&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                &lt;&#x2F;executions&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">            &lt;!-- 打jar包插件(会包含所有依赖) --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-assembly-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.6&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;descriptorRefs&gt;</span><br><span class="line">                        &lt;descriptorRef&gt;jar-with-dependencies&lt;&#x2F;descriptorRef&gt;</span><br><span class="line">                    &lt;&#x2F;descriptorRefs&gt;</span><br><span class="line">                    &lt;archive&gt;</span><br><span class="line">                        &lt;manifest&gt;</span><br><span class="line">                            &lt;!-- 可以设置jar包的入口类(可选) --&gt;</span><br><span class="line">                            &lt;mainClass&gt;&lt;&#x2F;mainClass&gt;</span><br><span class="line">                        &lt;&#x2F;manifest&gt;</span><br><span class="line">                    &lt;&#x2F;archive&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;make-assembly&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;package&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;single&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                &lt;&#x2F;executions&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">        &lt;&#x2F;plugins&gt;</span><br><span class="line">    &lt;&#x2F;build&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;project&gt;</span><br></pre></td></tr></table></figure><h3 id="UpdateUserActiveScala-scala"><a href="#UpdateUserActiveScala-scala" class="headerlink" title="UpdateUserActiveScala.scala"></a>UpdateUserActiveScala.scala</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在resources目录中添加log4j.properties配置文件</span><br><span class="line">创建类：UpdateUserActiveScala</span><br><span class="line">代码如下：</span><br></pre></td></tr></table></figure><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.flink</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.<span class="type">JSON</span></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.scala.<span class="type">ExecutionEnvironment</span></span><br><span class="line"><span class="keyword">import</span> org.neo4j.driver.&#123;<span class="type">AuthTokens</span>, <span class="type">GraphDatabase</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 任务4：</span></span><br><span class="line"><span class="comment"> * 每天定时更新用户活跃时间</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">UpdateUserActiveScala</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">var</span> filePath = <span class="string">"hdfs://bigdata01:9000/data/user_active/20260201"</span></span><br><span class="line">    <span class="keyword">var</span> boltUrl = <span class="string">"bolt://bigdata04:7687"</span></span><br><span class="line">    <span class="keyword">var</span> userName = <span class="string">"neo4j"</span></span><br><span class="line">    <span class="keyword">var</span> passWord = <span class="string">"admin"</span></span><br><span class="line">    <span class="keyword">if</span>(args.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">      filePath = args(<span class="number">0</span>)</span><br><span class="line">      boltUrl = args(<span class="number">1</span>)</span><br><span class="line">      userName = args(<span class="number">2</span>)</span><br><span class="line">      passWord = args(<span class="number">3</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> env = <span class="type">ExecutionEnvironment</span>.getExecutionEnvironment</span><br><span class="line">    <span class="comment">//读取hdfs中的数据</span></span><br><span class="line">    <span class="keyword">val</span> text = env.readTextFile(filePath)</span><br><span class="line">    <span class="comment">//添加隐式转换代码</span></span><br><span class="line">    <span class="keyword">import</span> org.apache.flink.api.scala._</span><br><span class="line"></span><br><span class="line">    <span class="comment">//处理数据</span></span><br><span class="line">    text.mapPartition(it=&gt;&#123;</span><br><span class="line">      <span class="comment">//获取neo4j的连接</span></span><br><span class="line">      <span class="keyword">val</span> driver = <span class="type">GraphDatabase</span>.driver(boltUrl, <span class="type">AuthTokens</span>.basic(userName, passWord))</span><br><span class="line">      <span class="comment">//开启一个会话</span></span><br><span class="line">      <span class="keyword">val</span> session = driver.session()</span><br><span class="line">      it.foreach(line=&gt;&#123;</span><br><span class="line">        <span class="keyword">val</span> jsonObj = <span class="type">JSON</span>.parseObject(line)</span><br><span class="line">        <span class="keyword">val</span> uid = jsonObj.getString(<span class="string">"uid"</span>)</span><br><span class="line">        <span class="keyword">val</span> timeStamp = jsonObj.getString(<span class="string">"UnixtimeStamp"</span>)</span><br><span class="line">        <span class="comment">//添加用户活跃时间</span></span><br><span class="line">        session.run(<span class="string">"merge (u:User &#123;uid:'"</span>+uid+<span class="string">"'&#125;) set u.timestamp = "</span>+timeStamp)</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="comment">//关闭会话</span></span><br><span class="line">      session.close()</span><br><span class="line">      <span class="comment">//关闭连接</span></span><br><span class="line">      driver.close()</span><br><span class="line">      <span class="string">""</span> <span class="comment">// 和前面一个一样的道理</span></span><br><span class="line">    &#125;).print() <span class="comment">// 为了任务能够执行</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="本地执行-2"><a href="#本地执行-2" class="headerlink" title="本地执行"></a>本地执行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用之前生成的这份数据</span><br><span class="line">hdfs:&#x2F;&#x2F;bigdata01:9000&#x2F;data&#x2F;user_active&#x2F;20260201</span><br><span class="line">在本地执行代码，到neo4j中确认节点中是否新增了timestamp属性，如果有，就说明程序执行成功了。</span><br></pre></td></tr></table></figure><h3 id="集群执行-2"><a href="#集群执行-2" class="headerlink" title="集群执行"></a>集群执行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">接下来对程序编译打包</span><br><span class="line">在pom.xml中添加编译打包配置</span><br></pre></td></tr></table></figure><h3 id="startUpdateUserActive-sh"><a href="#startUpdateUserActive-sh" class="headerlink" title="startUpdateUserActive.sh"></a>startUpdateUserActive.sh</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">开发任务脚本</span><br><span class="line">startUpdateUserActive.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">默认获取昨天时间</span></span><br><span class="line">dt=`date -d "1 days ago" +"%Y%m%d"`</span><br><span class="line">if [ "x$1" != "x" ]</span><br><span class="line">then</span><br><span class="line">dt=$1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">HDFS输入数据路径</span></span><br><span class="line">filePath="hdfs://bigdata01:9000/data/user_active/$&#123;dt&#125;"</span><br><span class="line"></span><br><span class="line">masterUrl="yarn-cluster"</span><br><span class="line">appName="UpdateUserActiveScala"`date +%s`</span><br><span class="line">boltUrl="bolt://bigdata04:7687"</span><br><span class="line">userName="neo4j"</span><br><span class="line">passWord="admin"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">注意：需要将flink脚本路径配置到linux的环境变量中</span></span><br><span class="line">flink run \</span><br><span class="line">-m $&#123;masterUrl&#125; \</span><br><span class="line">-ynm $&#123;appName&#125; \</span><br><span class="line">-yqu default \</span><br><span class="line">-yjm 1024 \</span><br><span class="line">-ytm 1024 \</span><br><span class="line">-ys 1 \</span><br><span class="line">-p 5 \</span><br><span class="line">-c com.imooc.flink.UpdateUserActiveScala \</span><br><span class="line">/data/soft/video_recommend_v2/jobs/update_user_active-1.0-SNAPSHOT-jar-with-dependencies.jar $&#123;filePath&#125; $&#123;boltUrl&#125; $&#123;userName&#125; $&#123;passWord&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">验证任务执行状态</span></span><br><span class="line">appStatus=`yarn application -appStates FINISHED -list | grep $&#123;appName&#125; | awk '&#123;print $8&#125;'`</span><br><span class="line">if [ "$&#123;appStatus&#125;" != "SUCCEEDED" ]</span><br><span class="line">then</span><br><span class="line">    echo "任务执行失败"</span><br><span class="line">    # 发送短信或者邮件</span><br><span class="line">else</span><br><span class="line">    echo "任务执行成功"</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h2 id="每周一计算最近一个月主播视频评级-任务五"><a href="#每周一计算最近一个月主播视频评级-任务五" class="headerlink" title="每周一计算最近一个月主播视频评级(任务五)"></a>每周一计算最近一个月主播视频评级(任务五)</h2><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305031537915.png" alt="image-20230503153659474"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用Flink程序实现每周一计算最近一个月主播视频评级</span><br><span class="line">创建子module项目：update_video_info</span><br><span class="line">在项目中创建scala目录，引入scala2.12版本的SDK</span><br><span class="line">创建package：com.imooc.flink</span><br><span class="line">在pom.xml中添加依赖</span><br></pre></td></tr></table></figure><h3 id="子项目pom-3"><a href="#子项目pom-3" class="headerlink" title="子项目pom"></a>子项目pom</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot;</span><br><span class="line">         xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;artifactId&gt;db_video_recommend_v2&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;groupId&gt;org.example&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;parent&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;&#x2F;modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;artifactId&gt;update_video_info&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-api&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-log4j12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-scala_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flink&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flink-clients_2.12&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.neo4j.driver&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;neo4j-java-driver&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.hadoop&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;hadoop-client&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;fastjson&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;!-- 编译插件 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-compiler-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;3.6.0&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;source&gt;1.8&lt;&#x2F;source&gt;</span><br><span class="line">                    &lt;target&gt;1.8&lt;&#x2F;target&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;&#x2F;encoding&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">            &lt;!-- scala编译插件 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;net.alchim31.maven&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;scala-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;3.1.6&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;scalaCompatVersion&gt;2.12&lt;&#x2F;scalaCompatVersion&gt;</span><br><span class="line">                    &lt;scalaVersion&gt;2.12.11&lt;&#x2F;scalaVersion&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;&#x2F;encoding&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;compile-scala&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;compile&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;add-source&lt;&#x2F;goal&gt;</span><br><span class="line">                            &lt;goal&gt;compile&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;test-compile-scala&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;test-compile&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;add-source&lt;&#x2F;goal&gt;</span><br><span class="line">                            &lt;goal&gt;testCompile&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                &lt;&#x2F;executions&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">            &lt;!-- 打jar包插件(会包含所有依赖) --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-assembly-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.6&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;descriptorRefs&gt;</span><br><span class="line">                        &lt;descriptorRef&gt;jar-with-dependencies&lt;&#x2F;descriptorRef&gt;</span><br><span class="line">                    &lt;&#x2F;descriptorRefs&gt;</span><br><span class="line">                    &lt;archive&gt;</span><br><span class="line">                        &lt;manifest&gt;</span><br><span class="line">                            &lt;!-- 可以设置jar包的入口类(可选) --&gt;</span><br><span class="line">                            &lt;mainClass&gt;&lt;&#x2F;mainClass&gt;</span><br><span class="line">                        &lt;&#x2F;manifest&gt;</span><br><span class="line">                    &lt;&#x2F;archive&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;make-assembly&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;package&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;single&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                &lt;&#x2F;executions&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">        &lt;&#x2F;plugins&gt;</span><br><span class="line">    &lt;&#x2F;build&gt;</span><br><span class="line">&lt;&#x2F;project&gt;</span><br></pre></td></tr></table></figure><h3 id="UpdateVideoInfoScala-scala"><a href="#UpdateVideoInfoScala-scala" class="headerlink" title="UpdateVideoInfoScala.scala"></a>UpdateVideoInfoScala.scala</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在resources目录中添加log4j.properties配置文件</span><br><span class="line">创建类：UpdateVideoInfoScala</span><br><span class="line">代码如下：</span><br></pre></td></tr></table></figure><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.flink</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.<span class="type">JSON</span></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.operators.<span class="type">Order</span></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.scala.<span class="type">ExecutionEnvironment</span></span><br><span class="line"><span class="keyword">import</span> org.neo4j.driver.&#123;<span class="type">AuthTokens</span>, <span class="type">GraphDatabase</span>&#125;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.<span class="type">LoggerFactory</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 任务5：</span></span><br><span class="line"><span class="comment"> * 每周一计算最近一个月主播视频评级</span></span><br><span class="line"><span class="comment"> * 把最近几次视频评级在3B+或2A+的主播，在neo4j中设置flag=1</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：在执行程序之前，需要先把flag=1的重置为0</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">UpdateVideoInfoScala</span> </span>&#123;</span><br><span class="line">  <span class="keyword">val</span> logger = <span class="type">LoggerFactory</span>.getLogger(<span class="string">"UpdateVideoInfoScala"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">var</span> filePath = <span class="string">"hdfs://bigdata01:9000/data/video_info/20260201"</span></span><br><span class="line">    <span class="keyword">var</span> boltUrl = <span class="string">"bolt://bigdata04:7687"</span></span><br><span class="line">    <span class="keyword">var</span> userName = <span class="string">"neo4j"</span></span><br><span class="line">    <span class="keyword">var</span> passWord = <span class="string">"admin"</span></span><br><span class="line">    <span class="keyword">if</span>(args.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">      filePath = args(<span class="number">0</span>)</span><br><span class="line">      boltUrl = args(<span class="number">1</span>)</span><br><span class="line">      userName = args(<span class="number">2</span>)</span><br><span class="line">      passWord = args(<span class="number">3</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在Driver端执行此代码，将flag=1的值重置为0</span></span><br><span class="line">    <span class="comment">//获取neo4j的连接</span></span><br><span class="line">    <span class="keyword">val</span> driver = <span class="type">GraphDatabase</span>.driver(boltUrl, <span class="type">AuthTokens</span>.basic(userName, passWord))</span><br><span class="line">    <span class="comment">//开启一个会话</span></span><br><span class="line">    <span class="keyword">val</span> session = driver.session()</span><br><span class="line">    session.run(<span class="string">"match (a:User) where a.flag=1 set a.flag = 0"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭会话</span></span><br><span class="line">    session.close()</span><br><span class="line">    <span class="comment">//关闭连接</span></span><br><span class="line">    driver.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> env = <span class="type">ExecutionEnvironment</span>.getExecutionEnvironment</span><br><span class="line">    <span class="comment">//读取hdfs中的数据</span></span><br><span class="line">    <span class="keyword">val</span> text = env.readTextFile(filePath)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加隐式转换代码</span></span><br><span class="line">    <span class="keyword">import</span> org.apache.flink.api.scala._</span><br><span class="line"></span><br><span class="line">    <span class="comment">//解析数据中的uid、rating、timestamp</span></span><br><span class="line">    <span class="keyword">val</span> tup3Set = text.map(line =&gt; &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">val</span> jsonObj = <span class="type">JSON</span>.parseObject(line)</span><br><span class="line">        <span class="keyword">val</span> uid = jsonObj.getString(<span class="string">"uid"</span>)</span><br><span class="line">        <span class="keyword">val</span> rating = jsonObj.getString(<span class="string">"rating"</span>)</span><br><span class="line">        <span class="keyword">val</span> timestamp: <span class="type">Long</span> = jsonObj.getLong(<span class="string">"timestamp"</span>) <span class="comment">//这里要显示指定类型，不然会报错</span></span><br><span class="line">        (uid, rating, timestamp)</span><br><span class="line">      &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">        <span class="keyword">case</span> ex: <span class="type">Exception</span> =&gt; logger.error(<span class="string">"json数据解析失败："</span> + line)</span><br><span class="line">          (<span class="string">"0"</span>, <span class="string">"0"</span>, <span class="number">0</span>L)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//过滤异常数据</span></span><br><span class="line">    <span class="keyword">val</span> filterSet = tup3Set.filter(_._2 != <span class="string">"0"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取用户最近3场直播(视频)的评级信息</span></span><br><span class="line">    <span class="keyword">val</span> top3Set = filterSet.groupBy(<span class="number">0</span>)</span><br><span class="line">      .sortGroup(<span class="number">2</span>, <span class="type">Order</span>.<span class="type">DESCENDING</span>)</span><br><span class="line">      .reduceGroup(it =&gt; &#123;</span><br><span class="line">        <span class="keyword">val</span> list = it.toList</span><br><span class="line">        <span class="comment">//(2002,A,1769913940002)(2002,A,1769913940001)(2002,A,1769913940000)</span></span><br><span class="line">        <span class="comment">//uid,rating,timestamp \t uid,rating,timestamp \t uid,rating,timestamp</span></span><br><span class="line">        <span class="keyword">val</span> top3 = list.take(<span class="number">3</span>).mkString(<span class="string">"\t"</span>)</span><br><span class="line">        <span class="comment">//(2002,(2002,A,1769913940002)(2002,A,1769913940001)(2002,A,1769913940000))</span></span><br><span class="line">        (list.head._1, top3)</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//过滤出来满足3场B+的数据</span></span><br><span class="line">    <span class="keyword">val</span> top3BSet = top3Set.filter(tup =&gt; &#123;</span><br><span class="line">      <span class="keyword">var</span> flag = <span class="literal">false</span></span><br><span class="line">      <span class="keyword">val</span> fields = tup._2.split(<span class="string">"\t"</span>)</span><br><span class="line">      <span class="keyword">if</span> (fields.length == <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="comment">//3场B+，表示里面没有出现C和D</span></span><br><span class="line">        <span class="keyword">val</span> tmp_str = fields(<span class="number">0</span>).split(<span class="string">","</span>)(<span class="number">1</span>) + <span class="string">","</span> + fields(<span class="number">1</span>).split(<span class="string">","</span>)(<span class="number">1</span>) + <span class="string">","</span> + fields(<span class="number">2</span>).split(<span class="string">","</span>)(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> (!tmp_str.contains(<span class="string">"C"</span>) &amp;&amp; !tmp_str.contains(<span class="string">"D"</span>)) &#123;</span><br><span class="line">          flag = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      flag</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把满足3场B+的数据更新到neo4j中，设置flag=1</span></span><br><span class="line">    top3BSet.mapPartition(it=&gt;&#123;</span><br><span class="line">      <span class="comment">//获取neo4j的连接</span></span><br><span class="line">      <span class="keyword">val</span> driver = <span class="type">GraphDatabase</span>.driver(boltUrl, <span class="type">AuthTokens</span>.basic(userName, passWord))</span><br><span class="line">      <span class="comment">//开启一个会话</span></span><br><span class="line">      <span class="keyword">val</span> session = driver.session()</span><br><span class="line">      it.foreach(tup=&gt;&#123;</span><br><span class="line">        session.run(<span class="string">"match (a:User &#123;uid:'"</span>+tup._1+<span class="string">"'&#125;) where a.level &gt;=15 set a.flag = 1"</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="comment">//关闭会话</span></span><br><span class="line">      session.close()</span><br><span class="line">      <span class="comment">//关闭连接</span></span><br><span class="line">      driver.close()</span><br><span class="line">      <span class="string">""</span></span><br><span class="line">    &#125;).print()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//过滤出来满足2场A+的数据</span></span><br><span class="line">    <span class="keyword">val</span>   = top3Set.filter(tup =&gt; &#123;</span><br><span class="line">      <span class="keyword">var</span> flag = <span class="literal">false</span></span><br><span class="line">      <span class="keyword">val</span> fields = tup._2.split(<span class="string">"\t"</span>)</span><br><span class="line">      <span class="keyword">if</span> (fields.length &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="comment">//2场A+，获取最近两场直播评级，里面不能出现B、C、D</span></span><br><span class="line">        <span class="keyword">val</span> tmp_str = fields(<span class="number">0</span>).split(<span class="string">","</span>)(<span class="number">1</span>) + <span class="string">","</span> + fields(<span class="number">1</span>).split(<span class="string">","</span>)(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> (!tmp_str.contains(<span class="string">"B"</span>) &amp;&amp; !tmp_str.contains(<span class="string">"C"</span>) &amp;&amp; !tmp_str.contains(<span class="string">"D"</span>)) &#123;</span><br><span class="line">          flag = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      flag</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把满足2场A+的数据更新到neo4j中，设置flag=1</span></span><br><span class="line">    top2ASet.mapPartition(it=&gt;&#123;</span><br><span class="line">      <span class="comment">//获取neo4j的连接</span></span><br><span class="line">      <span class="keyword">val</span> driver = <span class="type">GraphDatabase</span>.driver(boltUrl, <span class="type">AuthTokens</span>.basic(userName, passWord))</span><br><span class="line">      <span class="comment">//开启一个会话</span></span><br><span class="line">      <span class="keyword">val</span> session = driver.session()</span><br><span class="line">      it.foreach(tup=&gt;&#123;</span><br><span class="line">        session.run(<span class="string">"match (a:User &#123;uid:'"</span>+tup._1+<span class="string">"'&#125;) where a.level &gt;=4 set a.flag = 1"</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="comment">//关闭会话</span></span><br><span class="line">      session.close()</span><br><span class="line">      <span class="comment">//关闭连接</span></span><br><span class="line">      driver.close()</span><br><span class="line">      <span class="string">""</span> <span class="comment">// 这里的道理和前面一样</span></span><br><span class="line">    &#125;).print()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="本地执行-3"><a href="#本地执行-3" class="headerlink" title="本地执行"></a>本地执行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用之前生成的这份数据</span><br><span class="line">hdfs:&#x2F;&#x2F;bigdata01:9000&#x2F;data&#x2F;video_info&#x2F;20260201</span><br><span class="line">在本地执行代码，到neo4j中确认节点中是否有flag属性的值。</span><br></pre></td></tr></table></figure><h3 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h3><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305031614511.png" alt="image-20230503161453968"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">代码中对uid进行分区那里没有显示指定类型，会报错。也是常见错误</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305031610325.png" alt="image-20230503161026920"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">上面代码mappartion中的数据库链接部分，没有创建session，但并没有报错，用的是外部driver端的session；数据库链接并不支持序列化，不支持从driver到节点的传输。这种异常很常见。</span><br></pre></td></tr></table></figure><h3 id="多个输入目录问题"><a href="#多个输入目录问题" class="headerlink" title="多个输入目录问题"></a>多个输入目录问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：flink目前不支持直接读取多个hdfs目录，在spark中，我们可以将多个hdfs目录使用逗号拼接成一个输入路径，flink目前不支持这种用法。</span><br></pre></td></tr></table></figure><h4 id="UpdateVideoInfoMoreFileScala-scala"><a href="#UpdateVideoInfoMoreFileScala-scala" class="headerlink" title="UpdateVideoInfoMoreFileScala.scala"></a>UpdateVideoInfoMoreFileScala.scala</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">那如何实现读取最近一个月的数据呢？</span><br><span class="line">我们可以使用flink中的union算子间接实现读取多个hdfs目录的效果</span><br><span class="line">复制一份代码，改名字为：UpdateVideoInfoMoreFileScala</span><br><span class="line"></span><br><span class="line">代码如下：</span><br></pre></td></tr></table></figure><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.flink</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.<span class="type">JSON</span></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.operators.<span class="type">Order</span></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.scala.<span class="type">ExecutionEnvironment</span></span><br><span class="line"><span class="keyword">import</span> org.neo4j.driver.&#123;<span class="type">AuthTokens</span>, <span class="type">GraphDatabase</span>&#125;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.<span class="type">LoggerFactory</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 任务5：</span></span><br><span class="line"><span class="comment"> * 每周一计算最近一个月主播视频评级</span></span><br><span class="line"><span class="comment"> * 把最近几次视频评级在3B+或2A+的主播，在neo4j中设置flag=1</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：在执行程序之前，需要先把flag=1的重置为0</span></span><br><span class="line"><span class="comment"> * Created by xuwei</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">UpdateVideoInfoMoreFileScala</span> </span>&#123;</span><br><span class="line">  <span class="keyword">val</span> logger = <span class="type">LoggerFactory</span>.getLogger(<span class="string">"UpdateVideoInfoScala"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">var</span> filePath = <span class="string">"hdfs://bigdata01:9000/data/video_info/20260201,hdfs://bigdata01:9000/data/video_info/20260217"</span></span><br><span class="line">    <span class="keyword">var</span> boltUrl = <span class="string">"bolt://bigdata04:7687"</span></span><br><span class="line">    <span class="keyword">var</span> userName = <span class="string">"neo4j"</span></span><br><span class="line">    <span class="keyword">var</span> passWord = <span class="string">"admin"</span></span><br><span class="line">    <span class="keyword">if</span>(args.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">      filePath = args(<span class="number">0</span>)</span><br><span class="line">      boltUrl = args(<span class="number">1</span>)</span><br><span class="line">      userName = args(<span class="number">2</span>)</span><br><span class="line">      passWord = args(<span class="number">3</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*//在Driver端执行此代码，将flag=1的值重置为0</span></span><br><span class="line"><span class="comment">    //获取neo4j的连接</span></span><br><span class="line"><span class="comment">    val driver = GraphDatabase.driver(boltUrl, AuthTokens.basic(userName, passWord))</span></span><br><span class="line"><span class="comment">    //开启一个会话</span></span><br><span class="line"><span class="comment">    val session = driver.session()</span></span><br><span class="line"><span class="comment">    session.run("match (a:User) where a.flag=1 set a.flag = 0")</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    //关闭会话</span></span><br><span class="line"><span class="comment">    session.close()</span></span><br><span class="line"><span class="comment">    //关闭连接</span></span><br><span class="line"><span class="comment">    driver.close()*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> env = <span class="type">ExecutionEnvironment</span>.getExecutionEnvironment</span><br><span class="line">    <span class="comment">//添加隐式转换代码</span></span><br><span class="line">    <span class="keyword">import</span> org.apache.flink.api.scala._</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用union实现读取多个hdfs目录中的数据</span></span><br><span class="line">    <span class="keyword">val</span> files = filePath.split(<span class="string">","</span>)</span><br><span class="line">    <span class="keyword">var</span> allText: <span class="type">DataSet</span>[<span class="type">String</span>] = env.fromElements(<span class="string">"123"</span>)</span><br><span class="line">    <span class="keyword">for</span>(file &lt;- files)&#123;</span><br><span class="line">      allText = allText.union(env.readTextFile(file)) <span class="comment">// 这里要赋值才符合逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    println(<span class="string">"原始数据条数："</span>+allText.count())</span><br><span class="line"></span><br><span class="line">    <span class="comment">//解析数据中的uid、rating、timestamp</span></span><br><span class="line">    <span class="keyword">val</span> tup3Set = allText.map(line =&gt; &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">val</span> jsonObj = <span class="type">JSON</span>.parseObject(line)</span><br><span class="line">        <span class="keyword">val</span> uid = jsonObj.getString(<span class="string">"uid"</span>)</span><br><span class="line">        <span class="keyword">val</span> rating = jsonObj.getString(<span class="string">"rating"</span>)</span><br><span class="line">        <span class="keyword">val</span> timestamp: <span class="type">Long</span> = jsonObj.getLong(<span class="string">"timestamp"</span>)</span><br><span class="line">        (uid, rating, timestamp)</span><br><span class="line">      &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">        <span class="keyword">case</span> ex: <span class="type">Exception</span> =&gt; logger.error(<span class="string">"json数据解析失败："</span> + line)</span><br><span class="line">          (<span class="string">"0"</span>, <span class="string">"0"</span>, <span class="number">0</span>L)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//过滤异常数据</span></span><br><span class="line">    <span class="keyword">val</span> filterSet = tup3Set.filter(_._2 != <span class="string">"0"</span>)</span><br><span class="line">    println(<span class="string">"过滤后的数据："</span>+filterSet.count())</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取用户最近3场直播(视频)的评级信息</span></span><br><span class="line">    <span class="keyword">val</span> top3Set = filterSet.groupBy(<span class="number">0</span>)</span><br><span class="line">      .sortGroup(<span class="number">2</span>, <span class="type">Order</span>.<span class="type">DESCENDING</span>)</span><br><span class="line">      .reduceGroup(it =&gt; &#123;</span><br><span class="line">        <span class="keyword">val</span> list = it.toList</span><br><span class="line">        <span class="comment">//(2002,A,1769913940002)(2002,A,1769913940001)(2002,A,1769913940000)</span></span><br><span class="line">        <span class="comment">//uid,rating,timestamp \t uid,rating,timestamp \t uid,rating,timestamp</span></span><br><span class="line">        <span class="keyword">val</span> top3 = list.take(<span class="number">3</span>).mkString(<span class="string">"\t"</span>)</span><br><span class="line">        <span class="comment">//(2002,(2002,A,1769913940002)(2002,A,1769913940001)(2002,A,1769913940000))</span></span><br><span class="line">        (list.head._1, top3)</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//过滤出来满足3场B+的数据</span></span><br><span class="line">    <span class="keyword">val</span> top3BSet = top3Set.filter(tup =&gt; &#123;</span><br><span class="line">      <span class="keyword">var</span> flag = <span class="literal">false</span></span><br><span class="line">      <span class="keyword">val</span> fields = tup._2.split(<span class="string">"\t"</span>)</span><br><span class="line">      <span class="keyword">if</span> (fields.length == <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="comment">//3场B+，表示里面没有出现C和D</span></span><br><span class="line">        <span class="keyword">val</span> tmp_str = fields(<span class="number">0</span>).split(<span class="string">","</span>)(<span class="number">1</span>) + <span class="string">","</span> + fields(<span class="number">1</span>).split(<span class="string">","</span>)(<span class="number">1</span>) + <span class="string">","</span> + fields(<span class="number">2</span>).split(<span class="string">","</span>)(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> (!tmp_str.contains(<span class="string">"C"</span>) &amp;&amp; !tmp_str.contains(<span class="string">"D"</span>)) &#123;</span><br><span class="line">          flag = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      flag</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把满足3场B+的数据更新到neo4j中，设置flag=1</span></span><br><span class="line">    top3BSet.mapPartition(it=&gt;&#123;</span><br><span class="line">      <span class="comment">//获取neo4j的连接</span></span><br><span class="line">      <span class="keyword">val</span> driver = <span class="type">GraphDatabase</span>.driver(boltUrl, <span class="type">AuthTokens</span>.basic(userName, passWord))</span><br><span class="line">      <span class="comment">//开启一个会话</span></span><br><span class="line">      <span class="keyword">val</span> session = driver.session()</span><br><span class="line">      it.foreach(tup=&gt;&#123;</span><br><span class="line">        session.run(<span class="string">"match (a:User &#123;uid:'"</span>+tup._1+<span class="string">"'&#125;) where a.level &gt;=15 set a.flag = 1"</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="comment">//关闭会话</span></span><br><span class="line">      session.close()</span><br><span class="line">      <span class="comment">//关闭连接</span></span><br><span class="line">      driver.close()</span><br><span class="line">      <span class="string">""</span></span><br><span class="line">    &#125;).print()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//过滤出来满足2场A+的数据</span></span><br><span class="line">    <span class="keyword">val</span> top2ASet = top3Set.filter(tup =&gt; &#123;</span><br><span class="line">      <span class="keyword">var</span> flag = <span class="literal">false</span></span><br><span class="line">      <span class="keyword">val</span> fields = tup._2.split(<span class="string">"\t"</span>)</span><br><span class="line">      <span class="keyword">if</span> (fields.length &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="comment">//2场A+，获取最近两场直播评级，里面不能出现B、C、D</span></span><br><span class="line">        <span class="keyword">val</span> tmp_str = fields(<span class="number">0</span>).split(<span class="string">","</span>)(<span class="number">1</span>) + <span class="string">","</span> + fields(<span class="number">1</span>).split(<span class="string">","</span>)(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> (!tmp_str.contains(<span class="string">"B"</span>) &amp;&amp; !tmp_str.contains(<span class="string">"C"</span>) &amp;&amp; !tmp_str.contains(<span class="string">"D"</span>)) &#123;</span><br><span class="line">          flag = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      flag</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把满足2场A+的数据更新到neo4j中，设置flag=1</span></span><br><span class="line">    top2ASet.mapPartition(it=&gt;&#123;</span><br><span class="line">      <span class="comment">//获取neo4j的连接</span></span><br><span class="line">      <span class="keyword">val</span> driver = <span class="type">GraphDatabase</span>.driver(boltUrl, <span class="type">AuthTokens</span>.basic(userName, passWord))</span><br><span class="line">      <span class="comment">//开启一个会话</span></span><br><span class="line">      <span class="keyword">val</span> session = driver.session()</span><br><span class="line">      it.foreach(tup=&gt;&#123;</span><br><span class="line">        session.run(<span class="string">"match (a:User &#123;uid:'"</span>+tup._1+<span class="string">"'&#125;) where a.level &gt;=4 set a.flag = 1"</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="comment">//关闭会话</span></span><br><span class="line">      session.close()</span><br><span class="line">      <span class="comment">//关闭连接</span></span><br><span class="line">      driver.close()</span><br><span class="line">      <span class="string">""</span></span><br><span class="line">    &#125;).print()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="集群执行-3"><a href="#集群执行-3" class="headerlink" title="集群执行"></a>集群执行</h3><h3 id="startUpdateVideoInfo-sh"><a href="#startUpdateVideoInfo-sh" class="headerlink" title="startUpdateVideoInfo.sh"></a>startUpdateVideoInfo.sh</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">开发任务脚本</span><br><span class="line">startUpdateVideoInfo.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">获取最近一个月的文件目录</span></span><br><span class="line"><span class="meta">#</span><span class="bash">filepath=<span class="string">""</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="keyword">for</span>((i=1;i&lt;=30;i++))</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="keyword">do</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">    filepath+=<span class="string">"hdfs://bigdata01:9000/data/video_info/"</span>`date -d <span class="string">"<span class="variable">$i</span> days ago"</span> +<span class="string">"%Y%m%d"</span>`,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="keyword">done</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">注意：在使用的时候需要将最后面的逗号去掉 <span class="variable">$&#123;filePath:0:-1&#125;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">默认获取昨天时间</span></span><br><span class="line">dt=`date -d "1 days ago" +"%Y%m%d"`</span><br><span class="line">if [ "x$1" != "x" ]</span><br><span class="line">then</span><br><span class="line">dt=$1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">HDFS输入数据路径</span></span><br><span class="line">filePath="hdfs://bigdata01:9000/data/video_info/$&#123;dt&#125;"</span><br><span class="line"></span><br><span class="line">masterUrl="yarn-cluster"</span><br><span class="line">appName="UpdateVideoInfoScala"`date +%s`</span><br><span class="line">boltUrl="bolt://bigdata04:7687"</span><br><span class="line">userName="neo4j"</span><br><span class="line">passWord="admin"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">注意：需要将flink脚本路径配置到linux的环境变量中</span></span><br><span class="line">flink run \</span><br><span class="line">-m $&#123;masterUrl&#125; \</span><br><span class="line">-ynm $&#123;appName&#125; \</span><br><span class="line">-yqu default \</span><br><span class="line">-yjm 1024 \</span><br><span class="line">-ytm 1024 \</span><br><span class="line">-ys 1 \</span><br><span class="line">-p 5 \</span><br><span class="line">-c com.imooc.flink.UpdateVideoInfoScala \</span><br><span class="line">/data/soft/video_recommend_v2/jobs/update_video_info-1.0-SNAPSHOT-jar-with-dependencies.jar $&#123;filePath&#125; $&#123;boltUrl&#125; $&#123;userName&#125; $&#123;passWord&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">验证任务执行状态</span></span><br><span class="line">appStatus=`yarn application -appStates FINISHED -list | grep $&#123;appName&#125; | awk '&#123;tmp=$8;getline;print tmp","$8&#125;'` // 这个程序提交到时候会有两个application，以前的判断方式不适合了</span><br><span class="line">if [ "$&#123;appStatus&#125;" != "SUCCEEDED,SUCCEEDED" ]</span><br><span class="line">then</span><br><span class="line">    echo "任务执行失败"</span><br><span class="line">    # 发送短信或者邮件</span><br><span class="line">else</span><br><span class="line">    echo "任务执行成功"</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">此时其实会发现产生了两个Flink任务。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ttyong/hexoBlog/raw/master/%E6%9E%97%E5%AD%90%E9%9B%A8%20%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/202305031731219.png" alt="image-20230503173125131"></p><hr><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="大数据开发工程师" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
      <category term="大数据" scheme="http://tianyong.fun/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="直播平台三度关系推荐v2.0" scheme="http://tianyong.fun/tags/%E7%9B%B4%E6%92%AD%E5%B9%B3%E5%8F%B0%E4%B8%89%E5%BA%A6%E5%85%B3%E7%B3%BB%E6%8E%A8%E8%8D%90v2-0/"/>
    
  </entry>
  
</feed>
